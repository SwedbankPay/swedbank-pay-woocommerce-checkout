jQuery(function(e){"use strict";window.wc_sb_checkout={js_url:null,paymentMenu:null,isPaymentMenuLoaded:!1,xhr:!1,init:function(o){this.form=o,this.form_submit=!1,e(this.form).on("click","#place_order",this.onSubmit).on("submit checkout_place_order_payex_checkout"),e(document.body).bind("update_checkout",this.onUpdateCheckout),e(document.body).on("checkout_error",this.resetCheckout),e(document.body).on("updated_checkout",this.onUpdatedCheckout),e(document.body).on("blur",this.onUpdatedCheckout),wc_sb_common.isInstantCheckout()&&wc_sb_checkout.initInstantCheckout()},initInstantCheckout:function(){if(console.log("Initialization of Instant Checkout..."),wc_sb_common.isCheckinEnabled(),wc_sb_common.isCheckinEnabled()){let o=e("#swedbank-pay-consumer-profile");if(o.length>0){let e=o.data("reference");console.log("Initiate consumerProfileRef",e)}}},initCheckout:function(o){e("#change-shipping-info").show(),wc_sb_checkout.form.find(".swedbank_pay_customer_reference").remove(),wc_sb_checkout.form.append("<input type='hidden' class='swedbank_pay_customer_reference' name='swedbank_pay_customer_reference' value='"+o+"'/>"),wc_sb_checkout.onSubmit()},isPaymentMethodChosen:function(){return e("#payment_method_payex_checkout").is(":checked")},onClose:function(){wc_sb_common.unblock()},onReady:function(){console.log("Ready")},onUpdateCheckout:function(){if(console.log("onUpdateCheckout"),!wc_sb_common.isInstantCheckout())return!1},onUpdatedCheckout:function(){return console.log("onUpdatedCheckout"),!!wc_sb_common.isInstantCheckout()&&(!wc_sb_checkout.form.is(".processing")&&(wc_sb_common.validateForm()?(e(".woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message").remove(),void wc_sb_checkout.updateOrder()):(console.log("onUpdatedCheckout: Validation is failed"),!1)))},onSubmit:function(o){return!!wc_sb_checkout.form_submit||(!wc_sb_checkout.isPaymentMethodChosen()||(void 0!==o&&o.preventDefault(),!!wc_sb_common.validateForm()&&(console.log("onSubmit"),!wc_sb_checkout.form.is(".processing")&&(e(".woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message").remove(),wc_sb_checkout.form.addClass("processing"),wc_sb_common.block(),wc_sb_checkout.placeOrder().always(function(e){wc_sb_checkout.form.removeClass("processing"),wc_sb_common.unblock()}).fail(function(e,o){wc_sb_checkout.onError(o)}).done(function(o){if(console.log(o),"success"!==o.result)return o.hasOwnProperty("reload")&&!0===o.reload?void window.location.reload():(!0===o.result.refresh&&e(document.body).trigger("update_checkout"),void wc_sb_checkout.onError(o.messages));wc_sb_checkout.js_url=o.js_url,wc_sb_checkout.initPaymentJS(wc_sb_checkout.js_url)}),!1))))},resetCheckout:function(){wc_sb_checkout.form_submit=!1},initPaymentJS:function(o,n){void 0===n&&(n=function(){}),window.hasOwnProperty("payex")&&window.payex.hasOwnProperty("hostedView")&&(void 0!==window.payex.hostedView.paymentMenu&&window.payex.hostedView.paymentMenu().close(),e("#payment-swedbank-pay-checkout iframe").remove()),e("script[src*='px.paymentmenu.client']").remove(),wc_sb_common.loadJs(o,function(){e("#payment-swedbank-pay-checkout iframe").remove(),wc_sb_common.isInstantCheckout()?(e("#payment").hide(),wc_sb_checkout.initPaymentMenu("payment-swedbank-pay-checkout")):(console.log("non-instant checkout"),e.featherlight('<div id="swedbank-pay-paymentmenu">&nbsp;</div>',{variant:"featherlight-swedbank-pay",persist:!0,closeOnClick:!1,closeOnEsc:!1,afterOpen:function(){wc_sb_checkout.initPaymentMenu("swedbank-pay-paymentmenu")},afterClose:function(){wc_sb_checkout.form.removeClass("processing").unblock()}})),n()})},initPaymentMenu:function(e,o){console.log("initPaymentMenu"),void 0===o&&(o=function(){}),this.paymentMenu=window.payex.hostedView.paymentMenu({container:e,culture:WC_Gateway_Swedbank_Pay_Checkout.culture,style:WC_Gateway_Swedbank_Pay_Checkout.paymentMenuStyle?JSON.parse(WC_Gateway_Swedbank_Pay_Checkout.paymentMenuStyle):null,onApplicationConfigured:function(e){console.log("onApplicationConfigured"),console.log(e),wc_sb_checkout.isPaymentMenuLoaded=!0,o(null)},onPaymentMenuInstrumentSelected:function(e){console.log("onPaymentMenuInstrumentSelected"),console.log(e),wc_sb_checkout.onPaymentMenuInstrumentSelected(e.name,e.instrument)},onPaymentCreated:function(){console.log("onPaymentCreated")},onPaymentCompleted:function(e){console.log("onPaymentCompleted"),console.log(e),self.location.href=e.redirectUrl},onPaymentCanceled:function(e){console.log("onPaymentCanceled"),console.log(e),wc_sb_common.logError("payment-menu-cancel",e)},onPaymentFailed:function(e){console.log("onPaymentFailed"),console.log(e),wc_sb_common.logError("payment-menu-failed",e)},onError:function(e){wc_sb_common.logError("payment-menu-error",e),o(e)}}),this.paymentMenu.open()},refreshPaymentMenu:function(){console.log("refreshPaymentMenu"),void 0!==this.paymentMenu&&this.paymentMenu&&this.paymentMenu.hasOwnProperty("refresh")&&"function"==typeof this.paymentMenu.refresh?this.paymentMenu.refresh():console.warn("refreshPaymentMenu: refresh workaround")},placeOrder:function(){console.log("placeOrder");let o=e(".woocommerce-checkout").serialize();return e.ajax({type:"POST",url:WC_Gateway_Swedbank_Pay_Checkout.ajax_url,data:{action:"swedbank_pay_place_order",nonce:WC_Gateway_Swedbank_Pay_Checkout.nonce,data:o},dataType:"json"}).done(function(e){e.hasOwnProperty("reload")&&!0===e.reload?window.location.reload():e.hasOwnProperty("result")&&"failure"===e.result&&(wc_sb_common.logError("sb-place-order",e),wc_sb_checkout.onError(e.messages))})},updateOrder:function(o){console.log("updateOrder");let n=e(".woocommerce-checkout").serialize();return void 0===o&&(o=!1),n+="&compatibility="+o,wc_sb_checkout.form.addClass("processing"),wc_sb_common.block(),wc_sb_checkout.xhr&&wc_sb_checkout.xhr.abort(),wc_sb_checkout.xhr=e.ajax({type:"POST",url:WC_Gateway_Swedbank_Pay_Checkout.ajax_url,data:{action:"swedbank_pay_update_order",nonce:WC_Gateway_Swedbank_Pay_Checkout.nonce,data:n},dataType:"json"}).always(function(e){wc_sb_checkout.xhr=!1,wc_sb_checkout.form.removeClass("processing"),wc_sb_common.unblock()}).fail(function(e,o){console.log("updateOrder error:"+o),wc_sb_checkout.onError(o)}).done(function(n){return console.log(n),n.hasOwnProperty("result")&&"success"===n.result?(wc_sb_checkout.js_url=n.js_url,void wc_sb_checkout.refreshPaymentMenu()):n.hasOwnProperty("result")&&"failure"===n.result&&n.messages.indexOf("Order update is not available.")>-1&&!o?(console.warn("refreshPaymentMenu: refresh workaround. Force reload."),void wc_sb_checkout.updateOrder(!0).done(function(e){e.hasOwnProperty("js_url")&&wc_sb_checkout.initPaymentJS(e.js_url)})):void(n.hasOwnProperty("reload")&&!0===n.reload?window.location.reload():(!0===n.result.refresh&&e(document.body).trigger("update_checkout"),wc_sb_common.logError("sb-update-order",n),wc_sb_checkout.onError(n.messages)))}),wc_sb_checkout.xhr},onPaymentMenuInstrumentSelected:function(o,n){console.log("onPaymentMenuInstrumentSelected",o,n),e(document.body).trigger("sb_payment_menu_instrument_selected",[o,n])},onError:function(e){console.log("onError",e),wc_sb_checkout.submit_error('<div class="woocommerce-error">'+e+"</div>")},submit_error:function(o){e(".woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message").remove(),wc_sb_checkout.form.prepend('<div class="woocommerce-NoticeGroup woocommerce-NoticeGroup-checkout">'+o+"</div>"),wc_sb_checkout.form.removeClass("processing").unblock(),wc_sb_checkout.form.find(".input-text, select, input:checkbox").trigger("validate").blur(),wc_sb_checkout.scroll_to_notices(),e(document.body).trigger("checkout_error")},scroll_to_notices:function(){let o=e(".woocommerce-NoticeGroup-updateOrderReview, .woocommerce-NoticeGroup-checkout");o.length||(o=e(".form.checkout")),e.scroll_to_notices(o)}},e(document).ready(function(){wc_sb_checkout.init(e("form.checkout, form#order_review, form#add_payment_method"))})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
