jQuery(function($){window.wc_sb_common={isInstantCheckout:()=>WC_Gateway_Swedbank_Pay_Checkout.instant_checkout,isCheckinEnabled:()=>WC_Gateway_Swedbank_Pay_Checkout.checkin,loadJs:function(e,u){let F=document.createElement("script");F.setAttribute("src",e),F.setAttribute("type","text/javascript"),F.setAttribute("async",""),F.addEventListener("load",function(){u()},!1);let t=document.getElementsByTagName("head")[0];return t&&t.appendChild(F),F},waitForLoading:function(var_string,callback){try{var obj=eval(var_string)}catch(e){return void callback(e)}let attempts=0,timer=window.setInterval(function(){void 0!==obj?(window.clearInterval(timer),callback(null,obj)):++attempts>=120&&(window.clearInterval(timer),callback("Timeout"))},500)},block:function(){if("undefined"!=typeof wc_sb_checkout){1!==wc_sb_checkout.form.data()["blockUI.isBlocked"]&&wc_sb_checkout.form.block({message:null,overlayCSS:{background:"#fff",opacity:.6}})}},unblock:function(){"undefined"!=typeof wc_sb_checkout&&wc_sb_checkout.form.unblock()},logError:function(e,u){return console.warn(u),$.ajax({type:"POST",url:WC_Gateway_Swedbank_Pay_Checkout.ajax_url,data:{action:"swedbank_pay_checkout_log_error",nonce:WC_Gateway_Swedbank_Pay_Checkout.nonce,id:e,data:JSON.stringify(u)},dataType:"json"})},validateForm:function(){var e,u=!0;return(e=$("#ship-to-different-address-checkbox").is(":checked")?$(".woocommerce-billing-fields .validate-required, .woocommerce-shipping-fields .validate-required").find("input, select").not($("#account_password, #account_username")):$(".woocommerce-billing-fields .validate-required").find("input, select").not($("#account_password, #account_username"))).length&&e.each(function(){var e=$(this),F=e.closest(".form-row"),t=F.is(".validate-required"),a=F.is(".validate-email");(t&&("checkbox"!==e.attr("type")||e.is(":checked")?""===e.val()&&(u=!1):u=!1),a)&&(e.val()&&(new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i).test(e.val())||(u=!1)))}),u}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
