{"version":3,"sources":["instant-checkout.js"],"names":["jQuery","$","window","wc_sb_checkout","js_url","paymentMenu","isPaymentMenuLoaded","xhr","init","form","this","form_submit","on","obj","onSubmit","document","body","bind","onUpdateCheckout","resetCheckout","onUpdatedCheckout","wc_sb_common","isInstantCheckout","initInstantCheckout","console","log","initCheckout","reference","find","remove","append","data","isPaymentMethodChosen","is","onClose","unblock","onReady","validateForm","updateOrder","event","self","terms","length","prop","submit_error","WC_Gateway_Swedbank_Pay_Checkout","terms_error","e","preventDefault","addClass","block","placeOrder","always","response","removeClass","fail","jqXHR","textStatus","onError","done","result","hasOwnProperty","reload","location","refresh","trigger","messages","isRedirectMethodEnabled","href","initPaymentJS","isCheckinEnabled","checkin_error","wc_sb_checkin","url","callback","payex","hostedView","close","loadJs","hide","initPaymentMenu","featherlight","variant","persist","closeOnClick","closeOnEsc","afterOpen","afterClose","id","container","culture","style","paymentMenuStyle","JSON","parse","onApplicationConfigured","onPaymentMenuInstrumentSelected","name","instrument","onPaymentCreated","onPaymentCompleted","redirectUrl","onPaymentCanceled","logError","onPaymentFailed","open","refreshPaymentMenu","warn","fields","serialize","ajax","type","ajax_url","action","nonce","dataType","compatibility","abort","indexOf","error_message","prepend","blur","scroll_to_notices","scrollElement","ready"],"mappings":"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","file":"instant-checkout.min.js","sourcesContent":["/* global wc_checkout_params */\njQuery( function( $ ) {\n    'use strict';\n\n    /**\n     * Object to handle Swedbank Pay checkout payment forms.\n     */\n    window.wc_sb_checkout = {\n        js_url: null,\n        paymentMenu: null,\n        isPaymentMenuLoaded: false,\n        xhr: false,\n\n        /**\n         * Initialize e handlers and UI state.\n         */\n        init: function( form ) {\n            this.form         = form;\n            this.form_submit  = false;\n\n            $( this.form )\n            // We need to bind directly to the click (and not checkout_place_order_payex_checkout) to avoid popup blockers\n            // especially on mobile devices (like on Chrome for iOS) from blocking payex_checkout(payment_id, {}, 'open'); from opening a tab\n                .on( 'click', '#place_order', {'obj': window.wc_sb_checkout}, this.onSubmit )\n\n                // WooCommerce lets us return a false on checkout_place_order_{gateway} to keep the form from submitting\n                .on( 'submit checkout_place_order_payex_checkout' );\n\n            $( document.body ).bind( 'update_checkout', this.onUpdateCheckout );\n            $( document.body ).on( 'checkout_error', this.resetCheckout );\n            $( document.body ).on( 'updated_checkout', this.onUpdatedCheckout );\n            $( document.body ).on( 'blur', this.onUpdatedCheckout );\n\n            // Initialize Instant Checkout\n            if ( wc_sb_common.isInstantCheckout() ) {\n                wc_sb_checkout.initInstantCheckout();\n            }\n        },\n\n        /**\n         * Initialize Instant Checkout\n         */\n        initInstantCheckout: function () {\n            console.log( 'Initialization of Instant Checkout...' );\n        },\n\n        initCheckout: function( reference ) {\n            wc_sb_checkout.form.find( '.swedbank_pay_customer_reference' ).remove();\n            wc_sb_checkout.form.append( \"<input type='hidden' class='swedbank_pay_customer_reference' name='swedbank_pay_customer_reference' value='\" + reference + \"'/>\" );\n            wc_sb_checkout.onSubmit(\n                {\n                    data: {\n                        obj: window.wc_sb_checkout\n                    }\n                }\n            );\n        },\n\n        isPaymentMethodChosen: function() {\n            return $( '#payment_method_payex_checkout' ).is( ':checked' );\n        },\n\n        onClose: function() {\n            wc_sb_common.unblock();\n        },\n\n        onReady: function() {\n            console.log( 'Ready' );\n        },\n\n        onUpdateCheckout: function() {\n            console.log( 'onUpdateCheckout' );\n\n            if ( ! wc_sb_common.isInstantCheckout() ) {\n                return false;\n            }\n\n            // @todo\n        },\n\n        onUpdatedCheckout: function() {\n            console.log( 'onUpdatedCheckout' );\n\n            if ( ! wc_sb_common.isInstantCheckout() ) {\n                return false;\n            }\n\n            if ( wc_sb_checkout.form.is( '.processing' ) ) {\n                return false;\n            }\n\n            if ( ! wc_sb_common.validateForm() ) {\n                console.log( 'onUpdatedCheckout: Validation is failed' );\n                return false;\n            }\n\n            $( '.woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message' ).remove();\n            wc_sb_checkout.updateOrder();\n        },\n\n        onSubmit: function( event ) {\n            var self = event.data.obj;\n            let terms = $( '#terms' );\n\n            // Validate \"terms and conditions\" if exists\n            if ( terms.length > 0 && ! terms.prop( 'checked' ) ) {\n                self.submit_error( '<div class=\"woocommerce-error\">' + WC_Gateway_Swedbank_Pay_Checkout.terms_error + '</div>' );\n                return false;\n            }\n\n            if ( self.form_submit ) {\n                return true;\n            }\n\n            if ( self.isPaymentMethodChosen() ) {\n                if ( typeof e !== 'undefined' ) {\n                    e.preventDefault();\n                }\n\n                if ( ! wc_sb_common.validateForm() ) {\n                    console.log( 'The checkout form validation is failed.' );\n\n                    if ( self.isCheckinEnabled() ) {\n                        self.submit_error( '<div class=\"woocommerce-error\">' + WC_Gateway_Swedbank_Pay_Checkout.checkin_error + '</div>' );\n                    }\n\n                    return false;\n                }\n\n                console.log( 'onSubmit' );\n\n                if ( self.form.is( '.processing' ) ) {\n                    return false;\n                }\n\n                $( '.woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message' ).remove();\n                self.form.addClass( 'processing' );\n                wc_sb_common.block();\n                self.placeOrder()\n                    .always( function ( response ) {\n                        self.form.removeClass( 'processing' );\n                        wc_sb_common.unblock();\n                    } )\n                    .fail( function( jqXHR, textStatus ) {\n                        self.onError( textStatus );\n                    } )\n                    .done( function ( response) {\n                        console.log( response );\n                        if ( response.result !== 'success' ) {\n                            // Reload page\n                            if ( response.hasOwnProperty('reload') && true === response.reload ) {\n                                window.location.reload();\n                                return;\n                            }\n\n                            // Trigger update in case we need a fresh nonce\n                            if ( true === response.result.refresh ) {\n                                $( document.body ).trigger( 'update_checkout' );\n                            }\n\n                            self.onError( response.messages );\n                            return;\n                        }\n\n                        if ( wc_sb_common.isRedirectMethodEnabled() ) {\n                            // Redirect to the payment gateway page\n                            console.log( 'Redirecting to ' + response['redirect_url'] );\n                            window.location.href = response['redirect_url'];\n                        } else {\n                            // Load SwedBank Pay Checkout frame\n                            self.js_url = response['js_url'];\n                            self.initPaymentJS( self.js_url );\n                        }\n                    } );\n\n                return false;\n            }\n\n            return true;\n        },\n\n        resetCheckout: function() {\n            wc_sb_checkout.form_submit = false;\n        },\n\n        /**\n         * Check if Checkin is enabled\n         * @return {boolean}\n         */\n        isCheckinEnabled: function () {\n            if ( window.hasOwnProperty( 'wc_sb_checkin' ) ) {\n                return window.wc_sb_checkin.isCheckinEnabled();\n            }\n\n            return false;\n        },\n\n        /**\n         * Initiate Payment Javascript\n         * @param url\n         * @param callback\n         */\n        initPaymentJS: function ( url, callback ) {\n            if ( typeof callback === 'undefined' ) {\n                callback = function () {};\n            }\n\n            // Destroy\n            if ( window.hasOwnProperty( 'payex' ) && window.payex.hasOwnProperty( 'hostedView' ) ) {\n                if ( typeof window.payex.hostedView.paymentMenu !== 'undefined' ) {\n                    window.payex.hostedView.paymentMenu().close();\n                }\n\n                $( '#payment-swedbank-pay-checkout iframe' ).remove();\n                //delete window.payex.hostedView;\n            }\n\n            // Destroy JS\n            $( \"script[src*='px.paymentmenu.client']\" ).remove();\n\n            // Load JS\n            wc_sb_common.loadJs( url, function () {\n                $( '#payment-swedbank-pay-checkout iframe' ).remove();\n\n                // Load SwedBank Pay Checkout frame\n                if ( wc_sb_common.isInstantCheckout() ) {\n                    // Initiate the payment menu in \"Instant Checkout\"\n                    $( '#payment' ).hide();\n                    wc_sb_checkout.initPaymentMenu( 'payment-swedbank-pay-checkout' );\n                } else {\n                    // Initiate the payment menu in the frame\n                    console.log( 'non-instant checkout' );\n                    $.featherlight( '<div id=\"swedbank-pay-paymentmenu\">&nbsp;</div>', {\n                        variant: 'featherlight-swedbank-seamless',\n                        persist: true,\n                        closeOnClick: false,\n                        closeOnEsc: false,\n                        afterOpen: function () {\n                            wc_sb_checkout.initPaymentMenu( 'swedbank-pay-paymentmenu' );\n                        },\n                        afterClose: function () {\n                            wc_sb_checkout.form.removeClass( 'processing' ).unblock();\n                        }\n                    } );\n                }\n\n                callback()\n            } );\n        },\n\n        /**\n         * Initiate Payment Menu.\n         * Payment Javascript must be loaded.\n         *\n         * @param id\n         * @param callback\n         */\n        initPaymentMenu: function ( id, callback ) {\n            console.log( 'initPaymentMenu' );\n\n            if ( typeof callback === 'undefined' ) {\n                callback = function () {};\n            }\n\n            // Load SwedBank Pay Checkout frame\n            this.paymentMenu = window.payex.hostedView.paymentMenu( {\n                container: id,\n                culture: WC_Gateway_Swedbank_Pay_Checkout.culture,\n                style: WC_Gateway_Swedbank_Pay_Checkout.paymentMenuStyle ? JSON.parse( WC_Gateway_Swedbank_Pay_Checkout.paymentMenuStyle ) : null,\n                onApplicationConfigured: function( data ) {\n                    console.log( 'onApplicationConfigured' );\n                    console.log( data );\n                    wc_sb_checkout.isPaymentMenuLoaded = true;\n                    callback( null );\n                },\n                onPaymentMenuInstrumentSelected: function ( data ) {\n                    console.log( 'onPaymentMenuInstrumentSelected' );\n                    console.log( data );\n                    wc_sb_checkout.onPaymentMenuInstrumentSelected( data.name, data.instrument );\n                },\n                onPaymentCreated: function () {\n                    console.log( 'onPaymentCreated' );\n                },\n                onPaymentCompleted: function ( data ) {\n                    console.log( 'onPaymentCompleted' );\n                    console.log( data );\n                    self.location.href = data.redirectUrl;\n                },\n                onPaymentCanceled: function ( data ) {\n                    console.log( 'onPaymentCanceled' );\n                    console.log( data );\n                    wc_sb_common.logError( 'payment-menu-cancel', data );\n                },\n                onPaymentFailed: function ( data ) {\n                    console.log( 'onPaymentFailed' );\n                    console.log( data );\n                    wc_sb_common.logError( 'payment-menu-failed', data );\n                    //self.location.href = data.redirectUrl;\n                },\n                onError: function ( data ) {\n                    wc_sb_common.logError( 'payment-menu-error', data );\n                    callback( data );\n                }\n            } );\n\n            this.paymentMenu.open();\n        },\n\n        /**\n         * Refresh\n         */\n        refreshPaymentMenu: function() {\n            console.log( 'refreshPaymentMenu' );\n            if ( typeof this.paymentMenu !== 'undefined' && this.paymentMenu ) {\n                if ( this.paymentMenu.hasOwnProperty( 'refresh' ) && typeof this.paymentMenu.refresh === 'function' ) {\n                    this.paymentMenu.refresh();\n                } else {\n                    console.warn( 'refreshPaymentMenu: paymentMenu doesn\\'t support refresh' );\n                }\n            }\n        },\n\n        /**\n         * Place Order\n         * @return {JQueryPromise<any>}\n         */\n        placeOrder: function () {\n            console.log( 'placeOrder' );\n            let fields = $('.woocommerce-checkout').serialize();\n\n            return $.ajax( {\n                type: 'POST',\n                url: WC_Gateway_Swedbank_Pay_Checkout.ajax_url,\n                data: {\n                    action: 'swedbank_pay_place_order',\n                    nonce: WC_Gateway_Swedbank_Pay_Checkout.nonce,\n                    data: fields\n                },\n                dataType: 'json'\n            } ).done( function ( response ) {\n                // Reload page\n                if ( response.hasOwnProperty('reload') && true === response.reload ) {\n                    window.location.reload();\n                    return;\n         \t\t}\n\n                if ( response.hasOwnProperty('result') && response.result === 'failure' ) {\n                    wc_sb_common.logError( 'sb-place-order', response );\n                    wc_sb_checkout.onError( response.messages );\n                }\n            } );\n        },\n\n        /**\n         * Update Order\n         * @param compatibility\n         * @return {JQueryPromise<any>}\n         */\n        updateOrder: function ( compatibility ) {\n            console.log( 'updateOrder' );\n            let fields = $('.woocommerce-checkout').serialize();\n\n            if ( typeof compatibility === 'undefined' ) {\n                compatibility = false;\n            }\n\n            fields += '&compatibility=' + compatibility;\n\n            wc_sb_checkout.form.addClass( 'processing' );\n            wc_sb_common.block();\n\n            if ( wc_sb_checkout.xhr ) {\n                wc_sb_checkout.xhr.abort();\n            }\n\n            wc_sb_checkout.xhr = $.ajax( {\n                type: 'POST',\n                url: WC_Gateway_Swedbank_Pay_Checkout.ajax_url,\n                data: {\n                    action: 'swedbank_pay_update_order',\n                    nonce: WC_Gateway_Swedbank_Pay_Checkout.nonce,\n                    data: fields\n                },\n                dataType: 'json'\n            } )\n                .always( function ( response ) {\n                    wc_sb_checkout.xhr = false;\n                    wc_sb_checkout.form.removeClass( 'processing' );\n                    wc_sb_common.unblock();\n                } )\n                .fail( function( jqXHR, textStatus ) {\n                    console.log( 'updateOrder error:' + textStatus );\n                    //wc_sb_checkout.onError( textStatus );\n                } )\n                .done( function ( response) {\n                    console.log( response );\n\n                    if ( response.hasOwnProperty('result') && response.result === 'success' ) {\n                        // Refresh Payment Menu\n                        wc_sb_checkout.js_url = response['js_url'];\n                        wc_sb_checkout.refreshPaymentMenu();\n\n                        return;\n                    }\n\n                    if ( response.hasOwnProperty('result') && response.result === 'failure' ) {\n                        if (response.messages === '') {\n                            console.warn( 'Error message is empty.' );\n                            return;\n                        }\n\n                        // SwedBank Payment returns error that Order update is not available\n                        if ( response.messages.indexOf( 'Order update is not available.' ) > -1 && ! compatibility ) {\n                            // Force reload\n                            console.warn( 'refreshPaymentMenu: refresh workaround. Force reload.' );\n                            wc_sb_checkout.updateOrder( true ).done( function ( response ) {\n                                if ( response.hasOwnProperty('js_url') ) {\n                                    wc_sb_checkout.initPaymentJS( response.js_url );\n                                }\n                            } );\n\n                            return;\n                        }\n                    }\n\n                    // Reload page\n                    if ( response.hasOwnProperty('reload') && true === response.reload ) {\n                        window.location.reload();\n\n                        return;\n                    }\n\n                    // Trigger update in case we need a fresh nonce\n                    if ( response.hasOwnProperty( 'result' ) && true === response.result.refresh ) {\n                        $( document.body ).trigger( 'update_checkout' );\n                    }\n\n                    wc_sb_common.logError( 'sb-update-order', response );\n                    //wc_sb_checkout.onError( response.messages );\n                } );\n\n                return wc_sb_checkout.xhr;\n        },\n\n        /**\n         * On Payment Menu Instrument Selected\n         * @param name\n         * @param instrument\n         */\n        onPaymentMenuInstrumentSelected: function ( name, instrument ) {\n            console.log( 'onPaymentMenuInstrumentSelected', name, instrument );\n            $( document.body ).trigger( 'sb_payment_menu_instrument_selected', [name, instrument] );\n        },\n        onError: function ( data ) {\n            console.log( 'onError', data );\n            wc_sb_checkout.submit_error( '<div class=\"woocommerce-error\">' + data + '</div>' );\n        },\n        submit_error: function( error_message ) {\n            $( '.woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message' ).remove();\n            wc_sb_checkout.form.prepend( '<div class=\"woocommerce-NoticeGroup woocommerce-NoticeGroup-checkout\">' + error_message + '</div>' );\n            wc_sb_checkout.form.removeClass( 'processing' ).unblock();\n            wc_sb_checkout.form.find( '.input-text, select, input:checkbox' ).trigger( 'validate' ).blur();\n            wc_sb_checkout.scroll_to_notices();\n            $( document.body ).trigger( 'checkout_error' );\n        },\n        scroll_to_notices: function() {\n            let scrollElement = $( '.woocommerce-NoticeGroup-updateOrderReview, .woocommerce-NoticeGroup-checkout' );\n            if ( ! scrollElement.length ) {\n                scrollElement = $( '.form.checkout' );\n            }\n\n            $.scroll_to_notices( scrollElement );\n        },\n    };\n\n    $(document).ready( function () {\n        wc_sb_checkout.init( $( \"form.checkout, form#order_review, form#add_payment_method\" ) );\n    } );\n});\n\n"]}