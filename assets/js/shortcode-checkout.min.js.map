{"version":3,"sources":["shortcode-checkout.js"],"names":["jQuery","$","window","wc_sb_shortcode_checkout","customer_identified","js_url","payment_url","WC_Shortcode_Checkout","paymentMenu","is_payment_menu_loaded","xhr","init","form","console","log","self","this","isCheckinEnabled","loadCheckIn","document","body","on","event","preventDefault","showAddressFields","hideAddressFields","obj","onSubmit","onUpdatedCheckout","checkPaymentUrl","loaded","initInstantCheckout","checkin_enabled","[object Object]","checkin_required","isRedirectMethodEnabled","redirect_method","ajax","type","url","ajax_url","data","action","nonce","dataType","done","success","logError","alert","details","hasOwnProperty","payex","wc_sb_common","loadJs","initCheckIn","waitForLoading","err","warn","hostedView","consumer","container","culture","style","checkInStyle","JSON","parse","onConsumerIdentified","onNewConsumer","onConsumerRemoved","onBillingDetailsAvailable","onAddressDetailsAvailable","onShippingDetailsAvailable","needs_shipping_address","ship_to_billing_address_only","onError","open","async","parallel","save_customer_ref","callback2","saveCustomerRef","response","init_checkout","terms","length","prop","find","remove","append","consumerProfileRef","results","show","initCheckout","callback","always","message","fetchAddress","each","key","value","forEach","section","el","closest","removeClass","val","change","el1","Select2","select2","fn","chosen","trigger","hide","reference","block","loadCheckout","unblock","submit_error","isPaymentMethodChosen","is","validateForm","updateOrder","onUpdatedShippingMethod","terms_error","isCheckinRequired","isCustomerIdentified","addClass","abort","placeOrder","fail","jqXHR","textStatus","reload","result","refresh","location","href","initPaymentJS","hidePlaceOrder","messages","checkin_error","needs_checkin","resetCheckout","close","initPaymentMenu","id","paymentMenuStyle","onApplicationConfigured","onPaymentMenuInstrumentSelected","name","instrument","onPaymentCreated","onPaymentCompleted","redirectUrl","onPaymentCanceled","onPaymentFailed","refreshPaymentMenu","fields","serialize","indexOf","invoice_fee","invoice_fee_enabled","sb_invoice_fee","apply_fee","remove_fee","carpay_discount","carpay_enabled","sb_carpay","apply_discount","remove_discount","error_message","prepend","blur","scroll_to_notices","scrollElement","stringify","URLSearchParams","search","get","overlayCSS","background","opacity","ready"],"mappings":"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","file":"shortcode-checkout.min.js","sourcesContent":["/* global wc_checkout_params */\n/* global WC_Shortcode_Checkout */\njQuery( function( $ ) {\n    'use strict';\n\n    /**\n     * Object to handle Swedbank Pay checkout payment forms.\n     */\n    window.wc_sb_shortcode_checkout = {\n        customer_identified: null,\n        js_url: null,\n        payment_url: WC_Shortcode_Checkout.payment_url,\n        paymentMenu: null,\n        is_payment_menu_loaded: false,\n        xhr: false,\n\n        /**\n         * Initialize e handlers and UI state.\n         */\n        init: function( form ) {\n            console.log( 'init' );\n\n            var self = this;\n\n            // Init Checkin\n            if ( this.isCheckinEnabled() ) {\n                this.loadCheckIn();\n\n                $( document.body ).on( 'click', '#change-address-info', function ( event ) {\n                    event.preventDefault();\n\n                    // Show Address Fields\n                    self.showAddressFields();\n                } );\n\n                this.hideAddressFields();\n            }\n\n            this.form = form;\n            $( this.form )\n                // We need to bind directly to the click (and not checkout_place_order_payex_checkout) to avoid popup blockers\n                // especially on mobile devices (like on Chrome for iOS) from blocking payex_checkout(payment_id, {}, 'open'); from opening a tab\n                .on( 'click', '#place_order', {'obj': self}, this.onSubmit )\n\n                // WooCommerce lets us return a false on checkout_place_order_{gateway} to keep the form from submitting\n                .on( 'submit checkout_place_order_payex_checkout' );\n\n            //$( document.body ).on( 'checkout_error', this.resetCheckout );\n            //$( document.body ).on( 'blur', this.onUpdatedCheckout );\n            //$( document.body ).on( 'updated_shipping_method', this.onUpdatedShippingMethod );\n\n            $( document.body ).on(\n                'updated_checkout',\n                null,\n                {'obj': self},\n                this.onUpdatedCheckout\n            );\n\n            this.checkPaymentUrl( function ( loaded ) {\n                if ( ! loaded ) {\n                    // Initialize Instant Checkout\n                    self.initInstantCheckout();\n                }\n            } );\n        },\n\n        /**\n         * Check if the Checkin is active\n         * @return {boolean}\n         */\n        isCheckinEnabled() {\n            return 'yes' === WC_Shortcode_Checkout.checkin_enabled;\n        },\n\n        /**\n         * Check if the Checkin is required\n         * @return {boolean}\n         */\n        isCheckinRequired() {\n            return this.isCheckinEnabled() && 'yes' === WC_Shortcode_Checkout.checkin_required;\n        },\n\n        /**\n         * Check if customer was identified\n         * @return {boolean}\n         */\n        isCustomerIdentified() {\n            return this.customer_identified === true;\n        },\n\n        /**\n         * Check if the redirect method is active\n         * @return {boolean}\n         */\n        isRedirectMethodEnabled() {\n            return 'redirect' === WC_Shortcode_Checkout.redirect_method;\n        },\n\n        /**\n         * Load CheckIn\n         * @returns {*}\n         */\n        loadCheckIn: function() {\n            var self = this;\n\n            // Get `view-consumer-identification`\n            return $.ajax( {\n                type: 'POST',\n                url: WC_Shortcode_Checkout.ajax_url,\n                data: {\n                    action: 'swedbank_pay_checkin',\n                    nonce: WC_Shortcode_Checkout.nonce,\n                },\n                dataType: 'json'\n            } ).done( function ( data ) {\n                if ( ! data.success ) {\n                    self.logError( 'sb-checkin-loader', data );\n                    alert( data.details );\n                    return;\n                }\n\n                // Destroy\n                if ( window.hasOwnProperty( 'payex' ) && window.payex.hasOwnProperty( 'hostedView' ) ) {\n                    //if ( typeof window.payex.hostedView.consumer !== 'undefined' ) {\n                    //window.payex.hostedView.consumer().close();\n                    //}\n                }\n\n                // Destroy JS\n                //$( \"script[src*='px.consumer.client']\" ).remove();\n                //$( '#swedbank-pay-checkin iframe' ).remove();\n                wc_sb_common.loadJs( data.data, function () {\n                    self.initCheckIn();\n                } );\n            } );\n        },\n\n        /**\n         * Initialize CheckIn\n         */\n        initCheckIn: function() {\n            if ( typeof payex === 'undefined') {\n                return;\n            }\n\n            var self = this;\n\n            wc_sb_common.waitForLoading('payex.hostedView.consumer', function ( err ) {\n                if ( err ) {\n                    console.warn( err );\n                    return;\n                }\n\n                // Init PayEx hostedView\n                window.payex.hostedView.consumer( {\n                    container: 'swedbank-pay-checkin',\n                    culture: WC_Shortcode_Checkout.culture,\n                    style: WC_Shortcode_Checkout.checkInStyle ? JSON.parse( WC_Shortcode_Checkout.checkInStyle ) : null,\n                    onConsumerIdentified: function( data ) {\n                        console.log( 'hostedView: onConsumerIdentified' );\n                        self.onConsumerIdentified( data );\n                    },\n                    onNewConsumer: function( data ) {\n                        console.log( 'hostedView: onNewConsumer' );\n                        self.onConsumerIdentified( data );\n                    },\n                    onConsumerRemoved: function( data ) {\n                        console.log( 'hostedView: onConsumerRemoved' );\n                        console.log ( data );\n                    },\n                    onBillingDetailsAvailable: function( data ) {\n                        self.onAddressDetailsAvailable( 'billing', data );\n                    },\n                    onShippingDetailsAvailable: function( data ) {\n                        if ( WC_Shortcode_Checkout.needs_shipping_address ||\n                            WC_Shortcode_Checkout.ship_to_billing_address_only\n                        ) {\n                            self.onAddressDetailsAvailable( 'billing', data );\n                        }\n\n                        self.onAddressDetailsAvailable( 'shipping', data );\n                    },\n                    onError: function ( data ) {\n                        self.logError( 'sb-checkin', data );\n\n                        alert( data.details );\n                    }\n                } ).open();\n            });\n        },\n\n        /**\n         * On Consumer Identified\n         * @param data\n         */\n        onConsumerIdentified: function ( data ) {\n            console.log( 'onConsumerIdentified', data );\n\n            var self = this;\n\n            async.parallel(\n                {\n                    save_customer_ref: function( callback2 ) {\n                        self.saveCustomerRef( data, function ( err, response ) {\n                            if ( err ) {\n                                alert( err );\n                            }\n\n                            callback2( null, response );\n                        } );\n                    },\n                    init_checkout: function( callback2 ) {\n                        // Tick \"terms and conditions\" if exists\n                        let terms = $( '#terms' );\n                        if ( terms.length > 0 && ! terms.prop( 'checked' ) ) {\n                            terms.prop( 'checked', true )\n                        }\n\n                        // Set customer is identified\n                        self.customer_identified = true;\n\n                        // Add the reference to the checkout form\n                        self.form.find( '.swedbank_pay_customer_reference' ).remove();\n                        self.form.append( \"<input type='hidden' class='swedbank_pay_customer_reference' name='swedbank_pay_customer_reference' value='\" + data.consumerProfileRef + \"'/>\" );\n\n                        callback2( null, [] );\n                    },\n                },\n                function( err, results ) {\n                    console.log( 'onConsumerIdentified: loaded', results );\n\n                    // Show button witch allows to edit the address\n                    $('#swedbank-pay-checkin-edit').show();\n\n                    // Initiate Checkout\n                    self.initCheckout( data.consumerProfileRef );\n                }\n            );\n        },\n\n        /**\n         * Save Customer Reference.\n         *\n         * @param data\n         * @param callback\n         */\n        saveCustomerRef: function ( data, callback ) {\n            $.ajax( {\n                type: 'POST',\n                url: WC_Shortcode_Checkout.ajax_url,\n                data: {\n                    action: 'swedbank_pay_checkout_customer_profile',\n                    nonce: WC_Shortcode_Checkout.nonce,\n                    consumerProfileRef: data.consumerProfileRef\n                },\n                dataType: 'json'\n            } ).always( function ( response ) {\n                //\n            } ).done( function ( response) {\n                if ( ! response.success ) {\n                    callback( response.data.message, response );\n                } else {\n                    callback( null, response );\n                }\n            } );\n        },\n\n        /**\n         * Fetch address.\n         *\n         * @param type\n         * @param url\n         * @param callback\n         * @returns {JQueryPromise<any>}\n         */\n        fetchAddress: function ( type, url, callback ) {\n            return $.ajax( {\n                type: 'POST',\n                url: WC_Shortcode_Checkout.ajax_url,\n                data: {\n                    action: 'swedbank_pay_checkout_get_address',\n                    nonce: WC_Shortcode_Checkout.nonce,\n                    type: type,\n                    url: url\n                },\n                dataType: 'json'\n            } ).always( function () {\n                //\n            } ).done( function ( response ) {\n                console.log( response );\n                if ( ! response.success ) {\n                    callback( response.data.message )\n                    return;\n                }\n\n                // Fill the address\n                let data = response.data;\n                $.each( data, function ( key, value ) {\n                    [ type ].forEach( function ( section ) {\n                        let el = $( 'input[name=\"' + section + '_' + key + '\"]' );\n                        if ( el.length === 0 ) {\n                            return;\n                        }\n\n                        el.prop('readonly', false);\n                        el.closest( '.form-row' ).removeClass( 'swedbank-pay-locked' );\n                        el.val( value ).change();\n\n                        if ( key === 'country' || key === 'state' ) {\n                            let el1 = $( '#' + section + '_' + key );\n                            if ( typeof window.Select2 !== 'undefined' ) {\n                                el1.select2( 'val', value );\n                            } else if ( typeof $.fn.chosen !== 'undefined' ) {\n                                // Chosen\n                                el1.val( value ).trigger( 'chosen:updated' );\n                                //el1.chosen().change();\n                            } else {\n                                el1.change();\n                            }\n                        }\n                    } );\n                } );\n\n                callback( null, data );\n            });\n        },\n\n        /**\n         * On Address Details Available\n         * @param type billing or shipping\n         * @param data\n         * @returns {*}\n         */\n        onAddressDetailsAvailable: function( type, data ) {\n            console.log( 'onAddressDetailsAvailable', type, data );\n\n            var self = this;\n\n            self.fetchAddress( type, data.url, function ( err ) {\n                //$( document.body ).trigger( 'update_checkout' );\n            } );\n        },\n\n        /**\n         * Hide Address Fields on the checkout\n         */\n        hideAddressFields: function () {\n            $( '#address-fields' ).hide();\n        },\n        /**\n         * Show Address Fields on the checkout\n         */\n        showAddressFields: function () {\n            $( '#address-fields' ).show();\n        },\n\n        /**\n         * Initialize Instant Checkout\n         */\n        initInstantCheckout: function () {\n            console.log( 'Initialization of Shortcode Checkout...' );\n        },\n\n        /**\n         * Initialize Checkout\n         * @param reference\n         */\n        initCheckout: function( reference ) {\n            console.log( 'initCheckout' );\n\n            // Add customer reference if exists\n            if ( reference ) {\n                this.form.find( '.swedbank_pay_customer_reference' ).remove();\n                this.form.append( \"<input type='hidden' class='swedbank_pay_customer_reference' name='swedbank_pay_customer_reference' value='\" + reference + \"'/>\" );\n            }\n\n            var self = this;\n\n            self.block();\n            this.loadCheckout( function ( err ) {\n                self.unblock();\n\n                if ( err ) {\n                    self.submit_error( '<div class=\"woocommerce-error\">' + err + '</div>' );\n                }\n            } );\n        },\n\n        isPaymentMethodChosen: function() {\n            return $( '[name=\"payment_method\"]' ).is( ':checked' );\n        },\n\n        onSubmit: function ( event ) {\n            if ( typeof event !== 'undefined' ) {\n                event.preventDefault();\n            }\n\n            var self = event.data.obj;\n            self.loadCheckout( function ( err ) {\n                if ( err ) {\n                    self.submit_error( '<div class=\"woocommerce-error\">' + err + '</div>' );\n                }\n            } );\n        },\n\n        onUpdatedCheckout: function( event ) {\n            console.log( 'onUpdatedCheckout' );\n\n            var self = event.data.obj;\n\n            if ( self.form.is( '.processing' ) ) {\n                return false;\n            }\n\n            if ( ! wc_sb_common.validateForm() ) {\n                console.log( 'onUpdatedCheckout: Validation is failed' );\n\n                return false;\n            }\n\n            $( '.woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message' ).remove();\n            self.updateOrder( function () {\n                console.log( 'Order has been updated' );\n            } );\n        },\n\n        onUpdatedShippingMethod: function ( event ) {\n            console.log( 'onUpdatedShippingMethod' );\n\n            var self = event.data.obj;\n\n            if ( self.form.is( '.processing' ) ) {\n                return false;\n            }\n\n            self.updateOrder( function () {\n                console.log( 'Order has been updated' );\n            } );\n        },\n\n        /**\n         * Load Checkout.\n         *\n         * @param callback\n         */\n        loadCheckout: function( callback ) {\n            console.log('loadCheckout');\n\n            var self = this;\n            let terms = $( '#terms' );\n\n            // Validate \"terms and conditions\" if exists\n            if ( terms.length > 0 && ! terms.prop( 'checked' ) ) {\n                callback( WC_Shortcode_Checkout.terms_error );\n                return;\n            }\n\n            // Verify the checkin\n            if ( self.isCheckinEnabled() ) {\n                console.log(window.wc_sb_shortcode_checkout.customer_identified);\n                if ( self.isCheckinRequired() && ! self.isCustomerIdentified() ) {\n                    callback( WC_Shortcode_Checkout.needs_checkin );\n                    return;\n                }\n            }\n\n            // Validate the checkout form\n            if ( ! wc_sb_common.validateForm() ) {\n                console.log( 'The checkout form validation is failed.' );\n\n                callback( WC_Shortcode_Checkout.checkin_error );\n                return;\n            }\n\n            if ( ! self.isPaymentMethodChosen() ) {\n                console.log( 'payex_checkout must be chosen.' );\n\n                callback( 'Please select payment method.' );\n                return;\n            }\n\n            $( '.woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message' ).remove();\n            self.form.addClass( 'processing' );\n            self.block();\n\n            if ( self.xhr ) {\n                self.xhr.abort();\n            }\n\n            // Place WooCommerce Order\n            self.xhr = self.placeOrder()\n                .always( function ( response ) {\n                    self.form.removeClass( 'processing' );\n                    self.unblock();\n                } )\n                .fail( function( jqXHR, textStatus ) {\n                    callback( textStatus );\n                } )\n                .done( function ( response) {\n                    console.log( response );\n\n                    // Reload page\n                    if ( response.hasOwnProperty('reload') && true === response.reload ) {\n                        window.location.reload();\n                        return;\n                    }\n\n                    // Trigger update in case we need a fresh nonce\n                    if ( true === response.result.refresh ) {\n                        $( document.body ).trigger( 'update_checkout' );\n                        callback( null, response );\n                        return;\n                    }\n\n                    if ( response.result !== 'success' ) {\n                        callback( response.messages );\n                        return;\n                    }\n\n                    if ( self.isRedirectMethodEnabled() ) {\n                        // Redirect to the payment gateway page\n                        console.log( 'Redirecting to ' + response['redirect_url'] );\n                        window.location.href = response['redirect_url'];\n\n                        callback( null, response );\n                    } else {\n                        // Load SwedBank Pay Checkout frame\n                        self.js_url = response['js_url'];\n                        self.initPaymentJS( self.js_url, function () {\n                            // Hide \"Place order\"\n                            self.hidePlaceOrder();\n\n                            callback( null, response );\n                        } );\n                    }\n                } );\n\n            return false;\n        },\n\n        resetCheckout: function() {\n            //\n        },\n\n        /**\n         * Initiate Payment Javascript\n         * @param url\n         * @param callback\n         */\n        initPaymentJS: function ( url, callback ) {\n            var self = this;\n            if ( typeof callback === 'undefined' ) {\n                callback = function () {};\n            }\n\n            // Destroy\n            if ( window.hasOwnProperty( 'payex' ) && window.payex.hasOwnProperty( 'hostedView' ) ) {\n                if ( typeof window.payex.hostedView.paymentMenu !== 'undefined' ) {\n                    window.payex.hostedView.paymentMenu().close();\n                }\n\n                $( '#payment-swedbank-pay-checkout iframe' ).remove();\n                //delete window.payex.hostedView;\n            }\n\n            // Destroy JS\n            $( \"script[src*='px.paymentmenu.client']\" ).remove();\n\n            // Load JS\n            wc_sb_common.loadJs( url, function () {\n                $( '#payment-swedbank-pay-checkout iframe' ).remove();\n\n                // Load SwedBank Pay Checkout frame\n                // Initiate the payment menu in \"Instant Checkout\"\n                $( '#payment' ).hide();\n                self.initPaymentMenu( 'payment-swedbank-pay-checkout', function () {\n                    callback();\n                } );\n            } );\n        },\n\n        /**\n         * Initiate Payment Menu.\n         * Payment Javascript must be loaded.\n         *\n         * @param id\n         * @param callback\n         */\n        initPaymentMenu: function ( id, callback ) {\n            console.log( 'initPaymentMenu' );\n\n            var self = this;\n\n            if ( typeof callback === 'undefined' ) {\n                callback = function () {};\n            }\n\n            // Load SwedBank Pay Checkout frame\n            this.paymentMenu = window.payex.hostedView.paymentMenu( {\n                container: id,\n                culture: WC_Shortcode_Checkout.culture,\n                style: WC_Shortcode_Checkout.paymentMenuStyle ? JSON.parse( WC_Shortcode_Checkout.paymentMenuStyle ) : null,\n                onApplicationConfigured: function( data ) {\n                    console.log( 'onApplicationConfigured' );\n                    console.log( data );\n                    self.is_payment_menu_loaded = true;\n                    callback( null );\n                },\n                onPaymentMenuInstrumentSelected: function ( data ) {\n                    console.log( 'onPaymentMenuInstrumentSelected' );\n                    console.log( data );\n                    self.onPaymentMenuInstrumentSelected( data.name, data.instrument );\n                },\n                onPaymentCreated: function () {\n                    console.log( 'onPaymentCreated' );\n                },\n                onPaymentCompleted: function ( data ) {\n                    console.log( 'onPaymentCompleted' );\n                    console.log( data );\n                    window.location.href = data.redirectUrl;\n                },\n                onPaymentCanceled: function ( data ) {\n                    console.log( 'onPaymentCanceled' );\n                    console.log( data );\n                    self.logError( 'payment-menu-cancel', data );\n                },\n                onPaymentFailed: function ( data ) {\n                    console.log( 'onPaymentFailed' );\n                    console.log( data );\n                    self.logError( 'payment-menu-failed', data );\n                    //self.location.href = data.redirectUrl;\n                },\n                onError: function ( data ) {\n                    self.logError( 'payment-menu-error', data );\n                    callback( data );\n                }\n            } );\n\n            this.paymentMenu.open();\n        },\n\n        /**\n         * Refresh\n         */\n        refreshPaymentMenu: function() {\n            console.log( 'refreshPaymentMenu' );\n            if ( typeof this.paymentMenu !== 'undefined' && this.paymentMenu ) {\n                if ( this.paymentMenu.hasOwnProperty( 'refresh' ) && typeof this.paymentMenu.refresh === 'function' ) {\n                    this.paymentMenu.refresh();\n                } else {\n                    console.warn( 'refreshPaymentMenu: paymentMenu doesn\\'t support refresh' );\n                }\n            }\n        },\n\n        /**\n         * Place Order\n         * @return {JQueryPromise<any>}\n         */\n        placeOrder: function () {\n            console.log( 'placeOrder' );\n\n            var self = this;\n            let fields = $('.woocommerce-checkout').serialize();\n\n            return $.ajax( {\n                type: 'POST',\n                url: WC_Shortcode_Checkout.ajax_url,\n                data: {\n                    action: 'sbp_submit_order',\n                    nonce: WC_Shortcode_Checkout.nonce,\n                    data: fields\n                },\n                dataType: 'json'\n            } ).done( function ( response ) {\n                // Reload page\n                if ( response.hasOwnProperty('reload') && true === response.reload ) {\n                    window.location.reload();\n                    return;\n                }\n\n                if ( response.hasOwnProperty('result') && response.result === 'failure' ) {\n                    self.logError( 'sb-place-order', response );\n                    self.onError( response.messages );\n                }\n            } );\n        },\n\n        /**\n         * Update Order\n         * @param callback\n         * @return {JQueryPromise<any>}\n         */\n        updateOrder: function ( callback ) {\n            console.log( 'updateOrder' );\n            var self = this;\n\n            let fields = $('.woocommerce-checkout').serialize();\n\n            self.form.addClass( 'processing' );\n            self.block();\n\n            if ( self.xhr ) {\n                self.xhr.abort();\n            }\n\n            self.xhr = $.ajax( {\n                type: 'POST',\n                url: WC_Shortcode_Checkout.ajax_url,\n                data: {\n                    action: 'sbp_update_order',\n                    nonce: WC_Shortcode_Checkout.nonce,\n                    data: fields\n                },\n                dataType: 'json'\n            } )\n                .always( function ( response ) {\n                    self.xhr = false;\n                    self.form.removeClass( 'processing' );\n                    self.unblock();\n                } )\n                .fail( function( jqXHR, textStatus ) {\n                    console.log( 'updateOrder error:' + textStatus );\n                    callback( textStatus );\n                } )\n                .done( function ( response) {\n                    console.log( response );\n                    callback( null, response );\n\n                    // Update is successful\n                    if ( response.hasOwnProperty('result') && response.result === 'success' ) {\n                        // Refresh Payment Menu\n                        self.js_url = response['js_url'];\n                        self.refreshPaymentMenu();\n\n                        return;\n                    }\n\n                    // Errors\n                    if ( response.hasOwnProperty('result') && response.result === 'failure' ) {\n                        if ( response.messages === '' ) {\n                            console.warn( 'Error message is empty.' );\n                            return;\n                        }\n\n                        // SwedBank Payment returns error that Order update is not available\n                        if ( response.messages.indexOf( 'Order update is not available.' ) > -1 ) {\n                            alert( 'Order update is not available.' );\n                            return;\n                        }\n                    }\n\n                    // Reload page\n                    if ( response.hasOwnProperty('reload') && true === response.reload ) {\n                        window.location.reload();\n\n                        return;\n                    }\n\n                    // Trigger update in case we need a fresh nonce\n                    if ( response.hasOwnProperty( 'result' ) && true === response.result.refresh ) {\n                        $( document.body ).trigger( 'update_checkout' );\n                    }\n                } );\n\n            return self.xhr;\n        },\n\n        /**\n         * On Payment Menu Instrument Selected\n         * @param name\n         * @param instrument\n         */\n        onPaymentMenuInstrumentSelected: function ( name, instrument ) {\n            console.log( 'onPaymentMenuInstrumentSelected', name, instrument );\n            //$( document.body ).trigger( 'sb_payment_menu_instrument_selected', [name, instrument] );\n\n            var self = this;\n\n            // Apply/remove additional fees\n            async.parallel(\n                {\n                    invoice_fee: function( callback2 ) {\n                        // Apply or Remove invoice fee\n                        if ( 'no' === WC_Shortcode_Checkout.invoice_fee_enabled ) {\n                            callback2( null, false );\n\n                            return;\n                        }\n\n                        self.block();\n\n                        var xhr;\n                        if ( instrument === 'Invoice' ) {\n                            xhr = sb_invoice_fee.apply_fee( false );\n                        } else {\n                            xhr = sb_invoice_fee.remove_fee( false );\n                        }\n\n                        xhr.done( function () {\n                            callback2( null, true );\n                        } );\n                    },\n                    carpay_discount: function( callback2 ) {\n                        // Apply or Remove CarPay discount\n                        if ( 'no' === WC_Shortcode_Checkout.carpay_enabled ) {\n                            callback2( null, false );\n\n                            return;\n                        }\n\n                        self.block();\n\n                        var xhr;\n                        if ( name === 'CarPay' ) {\n                            // Apply discount\n                            xhr = sb_carpay.apply_discount( false );\n                        } else {\n                            // Remove discount\n                            xhr = sb_carpay.remove_discount( false );\n                        }\n\n                        xhr.done( function () {\n                            callback2( null, true );\n                        } );\n                    },\n                },\n                function( err, results ) {\n                    if ( results.invoice_fee || results.carpay_discount ) {\n                        self.unblock();\n\n                        // Update checkout\n                        $( document.body ).trigger( 'update_checkout' );\n                    }\n                }\n            );\n        },\n\n        onError: function ( data ) {\n            console.log( 'onError', data );\n            this.submit_error( '<div class=\"woocommerce-error\">' + data + '</div>' );\n        },\n\n        submit_error: function( error_message ) {\n            $( '.woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message' ).remove();\n            this.form.prepend( '<div class=\"woocommerce-NoticeGroup woocommerce-NoticeGroup-checkout\">' + error_message + '</div>' );\n            this.form.removeClass( 'processing' ).unblock();\n            this.form.find( '.input-text, select, input:checkbox' ).trigger( 'validate' ).blur();\n            this.scroll_to_notices();\n            $( document.body ).trigger( 'checkout_error' );\n        },\n\n        scroll_to_notices: function() {\n            let scrollElement = $( '.woocommerce-NoticeGroup-updateOrderReview, .woocommerce-NoticeGroup-checkout' );\n            if ( ! scrollElement.length ) {\n                scrollElement = $( '.form.checkout' );\n            }\n\n            $.scroll_to_notices( scrollElement );\n        },\n\n        /**\n         * Log Error\n         * @param id\n         * @param data\n         * @returns {*}\n         */\n        logError: function ( id, data ) {\n            console.warn( data );\n\n            return $.ajax( {\n                type: 'POST',\n                url: WC_Shortcode_Checkout.ajax_url,\n                data: {\n                    action: 'swedbank_pay_checkout_log_error',\n                    nonce: WC_Shortcode_Checkout.nonce,\n                    id: id,\n                    data: JSON.stringify( data )\n                },\n                dataType: 'json'\n            } );\n        },\n\n        /**\n         * Check the payment url.\n         *\n         * @param callback\n         */\n        checkPaymentUrl: function ( callback ) {\n            if ( !! ( new URLSearchParams( document.location.search ) ).get( 'payment_url' ) && this.payment_url ) {\n                // Lock the checkout\n                $( '.woocommerce-checkout' ).block( {\n                    message: null,\n                    overlayCSS: {\n                        background: '#fff',\n                        opacity: 0.6\n                    }\n                } );\n\n                // Init Payment JS\n                this.initPaymentJS( this.payment_url, function () {\n                    console.log( 'Payment url has been loaded.' );\n                    callback( true );\n                } );\n            } else {\n                callback( false );\n            }\n        },\n\n        /**\n         * Block the checkout form\n         */\n        block: function() {\n            var self = this;\n            if ( self.form ) {\n                let form_data = self.form.data();\n                if ( 1 !== form_data['blockUI.isBlocked'] ) {\n                    self.form.block({\n                        message: null,\n                        overlayCSS: {\n                            background: '#fff',\n                            opacity: 0.6\n                        }\n                    });\n                }\n            }\n        },\n\n        /**\n         * Unblock the checkout form\n         */\n        unblock: function() {\n            if ( this.form ) {\n                this.form.unblock();\n            }\n        },\n\n        hidePlaceOrder: function () {\n            $('#place_order').hide();\n            $('.place-order').hide();\n\n            // Tick \"terms and conditions\" if exists\n            let terms = $( '#terms' );\n            if ( terms.length > 0 && ! terms.prop( 'checked' ) ) {\n                terms.prop( 'checked', true )\n            }\n        }\n    };\n\n    $(document).ready( function () {\n        wc_sb_shortcode_checkout.init( $( \"form.checkout, form#order_review, form#add_payment_method\" ) );\n    } );\n});\n\n"]}