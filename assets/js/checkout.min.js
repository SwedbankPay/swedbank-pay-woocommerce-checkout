jQuery(function($){"use strict";window.wc_sb_checkout={js_url:null,paymentMenu:null,isPaymentMenuLoaded:!1,xhr:!1,init:function(e){this.form=e,this.form_submit=!1,$(this.form).on("click","#place_order",this.onSubmit).on("submit checkout_place_order_payex_checkout"),$(document.body).bind("update_checkout",this.onUpdateCheckout),$(document.body).on("checkout_error",this.resetCheckout),$(document.body).on("updated_checkout",this.onUpdatedCheckout),$(document.body).on("blur",this.onUpdatedCheckout),$(document.body).on("click","#change-shipping-info",function(){$("#change-shipping-info").hide(),wc_sb_checkout.showAddressFields()}),$(document.body).on("change","#checkin_country",function(){wc_sb_checkout.loadCheckIn($(this).val())}),wc_sb_checkout.isInstantCheckout()&&wc_sb_checkout.initInstantCheckout()},initInstantCheckout:function(){console.log("Initialization of Instant Checkout..."),wc_sb_checkout.isCheckinEnabled()&&wc_sb_checkout.hideAddressFields();let e=$("#swedbank-consumer-profile");if(e.length>0){let o=e.data("reference");console.log("Initiate consumerProfileRef",o),wc_sb_checkout.initCheckIn()}else wc_sb_checkout.initCheckIn()},loadCheckIn:function(e){return $.ajax({type:"POST",url:WC_Gateway_Swedbank_Checkout.ajax_url,data:{action:"swedbank_checkin",nonce:WC_Gateway_Swedbank_Checkout.nonce,country:e},dataType:"json"}).done(function(e){if(!e.success)return wc_sb_checkout.logError("sb-checkin-loader",e),void alert(e.details);window.hasOwnProperty("payex")&&window.payex.hasOwnProperty("hostedView")&&void 0!==window.payex.hostedView.consumer&&window.payex.hostedView.consumer().close(),$("script[src*='px.consumer.client']").remove(),$("#swedbank-checkin iframe").remove(),wc_sb_checkout.loadJs(e.data,function(){wc_sb_checkout.initCheckIn()})})},initCheckIn:function(){"undefined"!=typeof payex&&wc_sb_checkout.waitForLoading("payex.hostedView.consumer",function(e){e?console.warn(e):window.payex.hostedView.consumer({container:"swedbank-checkin",culture:WC_Gateway_Swedbank_Checkout.culture,style:WC_Gateway_Swedbank_Checkout.checkInStyle?JSON.parse(WC_Gateway_Swedbank_Checkout.checkInStyle):null,onConsumerIdentified:function(e){console.log("hostedView: onConsumerIdentified"),wc_sb_checkout.onConsumerIdentified(e)},onNewConsumer:function(e){console.log("hostedView: onNewConsumer"),wc_sb_checkout.onConsumerIdentified(e)},onConsumerRemoved:function(e){console.log("hostedView: onConsumerRemoved")},onBillingDetailsAvailable:function(e){wc_sb_checkout.onAddressDetailsAvailable("billing",e)},onShippingDetailsAvailable:function(e){(WC_Gateway_Swedbank_Checkout.needs_shipping_address||WC_Gateway_Swedbank_Checkout.ship_to_billing_address_only)&&wc_sb_checkout.onAddressDetailsAvailable("billing",e),wc_sb_checkout.onAddressDetailsAvailable("shipping",e)},onError:function(e){wc_sb_checkout.logError("sb-checkin",e),alert(e.details),wc_sb_checkout.onError(e.details)}}).open()})},initCheckout:function(e){$("#change-shipping-info").show(),wc_sb_checkout.form.find(".swedbank_customer_reference").remove(),wc_sb_checkout.form.append("<input type='hidden' class='swedbank_customer_reference' name='swedbank_customer_reference' value='"+e+"'/>"),wc_sb_checkout.onSubmit()},isInstantCheckout:()=>WC_Gateway_Swedbank_Checkout.instant_checkout,isCheckinEnabled:()=>WC_Gateway_Swedbank_Checkout.checkin,isPaymentMethodChosen:function(){return $("#payment_method_payex_checkout").is(":checked")},block:function(){1!==wc_sb_checkout.form.data()["blockUI.isBlocked"]&&wc_sb_checkout.form.block({message:null,overlayCSS:{background:"#fff",opacity:.6}})},unblock:function(){wc_sb_checkout.form.unblock()},onClose:function(){wc_sb_checkout.unblock()},onReady:function(){console.log("Ready")},onUpdateCheckout:function(){if(console.log("onUpdateCheckout"),!wc_sb_checkout.isInstantCheckout())return!1},onUpdatedCheckout:function(){return console.log("onUpdatedCheckout"),!!wc_sb_checkout.isInstantCheckout()&&(!wc_sb_checkout.form.is(".processing")&&(wc_sb_checkout.validateForm()?($(".woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message").remove(),void wc_sb_checkout.updateOrder()):(console.log("onUpdatedCheckout: Validation is failed"),!1)))},onSubmit:function(e){return!!wc_sb_checkout.form_submit||(!wc_sb_checkout.isPaymentMethodChosen()||(void 0!==e&&e.preventDefault(),!!wc_sb_checkout.validateForm()&&(console.log("onSubmit"),!wc_sb_checkout.form.is(".processing")&&($(".woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message").remove(),wc_sb_checkout.form.addClass("processing"),wc_sb_checkout.block(),wc_sb_checkout.placeOrder().always(function(e){wc_sb_checkout.form.removeClass("processing"),wc_sb_checkout.unblock()}).fail(function(e,o){wc_sb_checkout.onError(o)}).done(function(e){if(console.log(e),"success"!==e.result)return e.hasOwnProperty("reload")&&!0===e.reload?void window.location.reload():(!0===e.result.refresh&&$(document.body).trigger("update_checkout"),void wc_sb_checkout.onError(e.messages));wc_sb_checkout.js_url=e.js_url,wc_sb_checkout.initPaymentJS(wc_sb_checkout.js_url)}),!1))))},resetCheckout:function(){wc_sb_checkout.form_submit=!1},validateForm:function(){var e,o=!0;return(e=$("#ship-to-different-address-checkbox").is(":checked")?$(".woocommerce-billing-fields .validate-required, .woocommerce-shipping-fields .validate-required").find("input, select").not($("#account_password, #account_username")):$(".woocommerce-billing-fields .validate-required").find("input, select").not($("#account_password, #account_username"))).length&&e.each(function(){var e=$(this),c=e.closest(".form-row"),n=c.is(".validate-required"),t=c.is(".validate-email");(n&&("checkbox"!==e.attr("type")||e.is(":checked")?""===e.val()&&(o=!1):o=!1),t)&&(e.val()&&(new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i).test(e.val())||(o=!1)))}),o},waitForLoading:function(var_string,callback){try{var obj=eval(var_string)}catch(e){return void callback(e)}let attempts=0,timer=window.setInterval(function(){void 0!==obj?(window.clearInterval(timer),callback(null,obj)):++attempts>=120&&(window.clearInterval(timer),callback("Timeout"))},500)},loadJs:function(e,o){let c=document.createElement("script");c.setAttribute("src",e),c.setAttribute("type","text/javascript"),c.setAttribute("async",""),c.addEventListener("load",function(){o()},!1);let n=document.getElementsByTagName("head")[0];return n&&n.appendChild(c),c},initPaymentJS:function(e,o){void 0===o&&(o=function(){}),window.hasOwnProperty("payex")&&window.payex.hasOwnProperty("hostedView")&&(void 0!==window.payex.hostedView.paymentMenu&&window.payex.hostedView.paymentMenu().close(),$("#payment-swedbank-checkout iframe").remove()),$("script[src*='px.paymentmenu.client']").remove(),wc_sb_checkout.loadJs(e,function(){$("#payment-swedbank-checkout iframe").remove(),wc_sb_checkout.isInstantCheckout()?($("#payment").hide(),wc_sb_checkout.initPaymentMenu("payment-swedbank-checkout")):$.featherlight('<div id="swedbank-paymentmenu">&nbsp;</div>',{variant:"featherlight-swedbank",persist:!0,closeOnClick:!1,closeOnEsc:!1,afterOpen:function(){wc_sb_checkout.initPaymentMenu("swedbank-paymentmenu")},afterClose:function(){wc_sb_checkout.form.removeClass("processing").unblock()}}),o()})},initPaymentMenu:function(e,o){console.log("initPaymentMenu"),void 0===o&&(o=function(){}),this.paymentMenu=window.payex.hostedView.paymentMenu({container:e,culture:WC_Gateway_Swedbank_Checkout.culture,style:WC_Gateway_Swedbank_Checkout.paymentMenuStyle?JSON.parse(WC_Gateway_Swedbank_Checkout.paymentMenuStyle):null,onApplicationConfigured:function(e){console.log("onApplicationConfigured"),console.log(e),wc_sb_checkout.isPaymentMenuLoaded=!0,o(null)},onPaymentMenuInstrumentSelected:function(e){console.log("onPaymentMenuInstrumentSelected"),console.log(e),wc_sb_checkout.onPaymentMenuInstrumentSelected(e.name,e.instrument)},onPaymentCreated:function(){console.log("onPaymentCreated")},onPaymentCompleted:function(e){console.log("onPaymentCompleted"),console.log(e),self.location.href=e.redirectUrl},onPaymentCanceled:function(e){console.log("onPaymentCanceled"),console.log(e),wc_sb_checkout.logError("payment-menu-cancel",e)},onPaymentFailed:function(e){console.log("onPaymentFailed"),console.log(e),wc_sb_checkout.logError("payment-menu-failed",e)},onError:function(e){wc_sb_checkout.logError("payment-menu-error",e),o(e)}}),this.paymentMenu.open()},refreshPaymentMenu:function(){console.log("refreshPaymentMenu"),void 0!==this.paymentMenu&&this.paymentMenu&&this.paymentMenu.hasOwnProperty("refresh")&&"function"==typeof this.paymentMenu.refresh?this.paymentMenu.refresh():console.warn("refreshPaymentMenu: refresh workaround")},placeOrder:function(){console.log("placeOrder");let e=$(".woocommerce-checkout").serialize();return $.ajax({type:"POST",url:WC_Gateway_Swedbank_Checkout.ajax_url,data:{action:"swedbank_place_order",nonce:WC_Gateway_Swedbank_Checkout.nonce,data:e},dataType:"json"}).done(function(e){e.hasOwnProperty("reload")&&!0===e.reload?window.location.reload():e.hasOwnProperty("result")&&"failure"===e.result&&(wc_sb_checkout.logError("sb-place-order",e),wc_sb_checkout.onError(e.messages))})},updateOrder:function(e){console.log("updateOrder");let o=$(".woocommerce-checkout").serialize();return void 0===e&&(e=!1),o+="&compatibility="+e,wc_sb_checkout.form.addClass("processing"),wc_sb_checkout.block(),wc_sb_checkout.xhr&&wc_sb_checkout.xhr.abort(),wc_sb_checkout.xhr=$.ajax({type:"POST",url:WC_Gateway_Swedbank_Checkout.ajax_url,data:{action:"swedbank_update_order",nonce:WC_Gateway_Swedbank_Checkout.nonce,data:o},dataType:"json"}).always(function(e){wc_sb_checkout.xhr=!1,wc_sb_checkout.form.removeClass("processing"),wc_sb_checkout.unblock()}).fail(function(e,o){console.log("updateOrder error:"+o),wc_sb_checkout.onError(o)}).done(function(o){return console.log(o),o.hasOwnProperty("result")&&"success"===o.result?(wc_sb_checkout.js_url=o.js_url,void wc_sb_checkout.refreshPaymentMenu()):o.hasOwnProperty("result")&&"failure"===o.result&&o.messages.indexOf("Order update is not available.")>-1&&!e?(console.warn("refreshPaymentMenu: refresh workaround. Force reload."),void wc_sb_checkout.updateOrder(!0).done(function(e){e.hasOwnProperty("js_url")&&wc_sb_checkout.initPaymentJS(e.js_url)})):void(o.hasOwnProperty("reload")&&!0===o.reload?window.location.reload():(!0===o.result.refresh&&$(document.body).trigger("update_checkout"),wc_sb_checkout.logError("sb-update-order",o),wc_sb_checkout.onError(o.messages)))}),wc_sb_checkout.xhr},onConsumerIdentified:function(e){return console.log("onConsumerIdentified",e),$("#change-shipping-info").show(),$.ajax({type:"POST",url:WC_Gateway_Swedbank_Checkout.ajax_url,data:{action:"swedbank_checkout_customer_profile",nonce:WC_Gateway_Swedbank_Checkout.nonce,consumerProfileRef:e.consumerProfileRef},dataType:"json"}).always(function(e){}).done(function(o){console.log(o),o.success?wc_sb_checkout.initCheckout(e.consumerProfileRef):alert(o.data.message)})},onAddressDetailsAvailable:function(e,o){return console.log("onAddressDetailsAvailable",e,o),$("#change-shipping-info").show(),wc_sb_checkout.block(),$.ajax({type:"POST",url:WC_Gateway_Swedbank_Checkout.ajax_url,data:{action:"swedbank_checkout_get_address",nonce:WC_Gateway_Swedbank_Checkout.nonce,type:e,url:o.url},dataType:"json"}).always(function(e){wc_sb_checkout.unblock()}).done(function(o){if(console.log(o),!o.success)return wc_sb_checkout.logError("sb-address-details",o),void alert(o.data.message);let c=o.data;$.each(c,function(o,c){[e].forEach(function(e){let n=$('input[name="'+e+"_"+o+'"]');if(0!==n.length&&(n.prop("readonly",!1),n.closest(".form-row").removeClass("swedbank-locked"),n.val(c).change(),"country"===o||"state"===o)){let n=$("#"+e+"_"+o);void 0!==window.Select2?n.select2("val",c):void 0!==$.fn.chosen?n.val(c).trigger("chosen:updated"):n.change()}})}),$(document.body).trigger("update_checkout")})},onPaymentMenuInstrumentSelected:function(e,o){console.log("onPaymentMenuInstrumentSelected",e,o),$(document.body).trigger("sb_payment_menu_instrument_selected",[e,o])},logError:function(e,o){return console.warn(o),$.ajax({type:"POST",url:WC_Gateway_Swedbank_Checkout.ajax_url,data:{action:"swedbank_checkout_log_error",nonce:WC_Gateway_Swedbank_Checkout.nonce,id:e,data:JSON.stringify(o)},dataType:"json"})},onError:function(e){console.log("onError",e),wc_sb_checkout.submit_error('<div class="woocommerce-error">'+e+"</div>")},submit_error:function(e){$(".woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message").remove(),wc_sb_checkout.form.prepend('<div class="woocommerce-NoticeGroup woocommerce-NoticeGroup-checkout">'+e+"</div>"),wc_sb_checkout.form.removeClass("processing").unblock(),wc_sb_checkout.form.find(".input-text, select, input:checkbox").trigger("validate").blur(),wc_sb_checkout.scroll_to_notices(),$(document.body).trigger("checkout_error")},scroll_to_notices:function(){let e=$(".woocommerce-NoticeGroup-updateOrderReview, .woocommerce-NoticeGroup-checkout");e.length||(e=$(".form.checkout")),$.scroll_to_notices(e)},hideAddressFields:function(){$(".woocommerce-billing-fields__field-wrapper, .woocommerce-shipping-fields").hide()},showAddressFields:function(){$(".woocommerce-billing-fields__field-wrapper, .woocommerce-shipping-fields").show()}},$(document).ready(function(){wc_sb_checkout.init($("form.checkout, form#order_review, form#add_payment_method"))})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrb3V0LmpzIl0sIm5hbWVzIjpbImpRdWVyeSIsIiQiLCJ3aW5kb3ciLCJ3Y19zYl9jaGVja291dCIsImpzX3VybCIsInBheW1lbnRNZW51IiwiaXNQYXltZW50TWVudUxvYWRlZCIsInhociIsImluaXQiLCJmb3JtIiwidGhpcyIsImZvcm1fc3VibWl0Iiwib24iLCJvblN1Ym1pdCIsImRvY3VtZW50IiwiYm9keSIsImJpbmQiLCJvblVwZGF0ZUNoZWNrb3V0IiwicmVzZXRDaGVja291dCIsIm9uVXBkYXRlZENoZWNrb3V0IiwiaGlkZSIsInNob3dBZGRyZXNzRmllbGRzIiwibG9hZENoZWNrSW4iLCJ2YWwiLCJpc0luc3RhbnRDaGVja291dCIsImluaXRJbnN0YW50Q2hlY2tvdXQiLCJjb25zb2xlIiwibG9nIiwiaXNDaGVja2luRW5hYmxlZCIsImhpZGVBZGRyZXNzRmllbGRzIiwiY29uc3VtZXJQcm9maWxlRWxtIiwibGVuZ3RoIiwicmVmZXJlbmNlIiwiZGF0YSIsImluaXRDaGVja0luIiwiY291bnRyeSIsImFqYXgiLCJ0eXBlIiwidXJsIiwiV0NfR2F0ZXdheV9Td2VkYmFua19DaGVja291dCIsImFqYXhfdXJsIiwiYWN0aW9uIiwibm9uY2UiLCJkYXRhVHlwZSIsImRvbmUiLCJzdWNjZXNzIiwibG9nRXJyb3IiLCJhbGVydCIsImRldGFpbHMiLCJoYXNPd25Qcm9wZXJ0eSIsInBheWV4IiwiaG9zdGVkVmlldyIsImNvbnN1bWVyIiwiY2xvc2UiLCJyZW1vdmUiLCJsb2FkSnMiLCJ3YWl0Rm9yTG9hZGluZyIsImVyciIsIndhcm4iLCJjb250YWluZXIiLCJjdWx0dXJlIiwic3R5bGUiLCJjaGVja0luU3R5bGUiLCJKU09OIiwicGFyc2UiLCJvbkNvbnN1bWVySWRlbnRpZmllZCIsIm9uTmV3Q29uc3VtZXIiLCJvbkNvbnN1bWVyUmVtb3ZlZCIsIm9uQmlsbGluZ0RldGFpbHNBdmFpbGFibGUiLCJvbkFkZHJlc3NEZXRhaWxzQXZhaWxhYmxlIiwib25TaGlwcGluZ0RldGFpbHNBdmFpbGFibGUiLCJuZWVkc19zaGlwcGluZ19hZGRyZXNzIiwic2hpcF90b19iaWxsaW5nX2FkZHJlc3Nfb25seSIsIm9uRXJyb3IiLCJvcGVuIiwiaW5pdENoZWNrb3V0Iiwic2hvdyIsImZpbmQiLCJhcHBlbmQiLCJpbnN0YW50X2NoZWNrb3V0IiwiY2hlY2tpbiIsImlzUGF5bWVudE1ldGhvZENob3NlbiIsImlzIiwiYmxvY2siLCJtZXNzYWdlIiwib3ZlcmxheUNTUyIsImJhY2tncm91bmQiLCJvcGFjaXR5IiwidW5ibG9jayIsIm9uQ2xvc2UiLCJvblJlYWR5IiwidmFsaWRhdGVGb3JtIiwidXBkYXRlT3JkZXIiLCJlIiwicHJldmVudERlZmF1bHQiLCJhZGRDbGFzcyIsInBsYWNlT3JkZXIiLCJhbHdheXMiLCJyZXNwb25zZSIsInJlbW92ZUNsYXNzIiwiZmFpbCIsImpxWEhSIiwidGV4dFN0YXR1cyIsInJlc3VsdCIsInJlbG9hZCIsImxvY2F0aW9uIiwicmVmcmVzaCIsInRyaWdnZXIiLCJtZXNzYWdlcyIsImluaXRQYXltZW50SlMiLCIkcmVxdWlyZWRfaW5wdXRzIiwidmFsaWRhdGVkIiwibm90IiwiZWFjaCIsIiR0aGlzIiwiJHBhcmVudCIsImNsb3Nlc3QiLCJ2YWxpZGF0ZV9yZXF1aXJlZCIsInZhbGlkYXRlX2VtYWlsIiwiYXR0ciIsIlJlZ0V4cCIsInRlc3QiLCJ2YXJfc3RyaW5nIiwiY2FsbGJhY2siLCJvYmoiLCJldmFsIiwiYXR0ZW1wdHMiLCJ0aW1lciIsInNldEludGVydmFsIiwiY2xlYXJJbnRlcnZhbCIsImpzIiwic2NyaXB0IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJvSGVhZCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiYXBwZW5kQ2hpbGQiLCJpbml0UGF5bWVudE1lbnUiLCJmZWF0aGVybGlnaHQiLCJ2YXJpYW50IiwicGVyc2lzdCIsImNsb3NlT25DbGljayIsImNsb3NlT25Fc2MiLCJhZnRlck9wZW4iLCJhZnRlckNsb3NlIiwiaWQiLCJwYXltZW50TWVudVN0eWxlIiwib25BcHBsaWNhdGlvbkNvbmZpZ3VyZWQiLCJvblBheW1lbnRNZW51SW5zdHJ1bWVudFNlbGVjdGVkIiwibmFtZSIsImluc3RydW1lbnQiLCJvblBheW1lbnRDcmVhdGVkIiwib25QYXltZW50Q29tcGxldGVkIiwic2VsZiIsImhyZWYiLCJyZWRpcmVjdFVybCIsIm9uUGF5bWVudENhbmNlbGVkIiwib25QYXltZW50RmFpbGVkIiwicmVmcmVzaFBheW1lbnRNZW51IiwiZmllbGRzIiwic2VyaWFsaXplIiwiY29tcGF0aWJpbGl0eSIsImFib3J0IiwiaW5kZXhPZiIsImNvbnN1bWVyUHJvZmlsZVJlZiIsImtleSIsInZhbHVlIiwiZm9yRWFjaCIsInNlY3Rpb24iLCJlbCIsInByb3AiLCJjaGFuZ2UiLCJlbDEiLCJTZWxlY3QyIiwic2VsZWN0MiIsImZuIiwiY2hvc2VuIiwic3RyaW5naWZ5Iiwic3VibWl0X2Vycm9yIiwiZXJyb3JfbWVzc2FnZSIsInByZXBlbmQiLCJibHVyIiwic2Nyb2xsX3RvX25vdGljZXMiLCJzY3JvbGxFbGVtZW50IiwicmVhZHkiXSwibWFwcGluZ3MiOiJBQUNBQSxPQUFRLFNBQVVDLEdBQ2QsYUFLQUMsT0FBT0MsZUFBaUIsQ0FDcEJDLE9BQVEsS0FDUkMsWUFBYSxLQUNiQyxxQkFBcUIsRUFDckJDLEtBQUssRUFLTEMsS0FBTSxTQUFVQyxHQUNaQyxLQUFLRCxLQUFlQSxFQUNwQkMsS0FBS0MsYUFBZSxFQUVwQlYsRUFBR1MsS0FBS0QsTUFHSEcsR0FBSSxRQUFTLGVBQWdCRixLQUFLRyxVQUdsQ0QsR0FBSSw4Q0FFVFgsRUFBR2EsU0FBU0MsTUFBT0MsS0FBTSxrQkFBbUJOLEtBQUtPLGtCQUNqRGhCLEVBQUdhLFNBQVNDLE1BQU9ILEdBQUksaUJBQWtCRixLQUFLUSxlQUM5Q2pCLEVBQUdhLFNBQVNDLE1BQU9ILEdBQUksbUJBQW9CRixLQUFLUyxtQkFDaERsQixFQUFHYSxT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Z0ZxRCxTQUNuRm5ELGVBQWVNLEtBQUs0SyxRQUFTLHlFQUEyRUQsRUFBZ0IsVUFDeEhqTCxlQUFlTSxLQUFLMEYsWUFBYSxjQUFlWCxVQUNoRHJGLGVBQWVNLEtBQUtvRSxLQUFNLHVDQUF3QzhCLFFBQVMsWUFBYTJFLE9BQ3hGbkwsZUFBZW9MLG9CQUNmdEwsRUFBR2EsU0FBU0MsTUFBTzRGLFFBQVMsbUJBRWhDNEUsa0JBQW1CLFdBQ2YsSUFBSUMsRUFBZ0J2TCxFQUFHLGlGQUNoQnVMLEVBQWN6SixTQUNqQnlKLEVBQWdCdkwsRUFBRyxtQkFHdkJBLEVBQUVzTCxrQkFBbUJDLElBRXpCM0osa0JBQW1CLFdBQ2Y1QixFQUFHLDRFQUE2RW1CLFFBRXBGQyxrQkFBbUIsV0FDZnBCLEVBQUcsNEVBQTZFMkUsU0FJeEYzRSxFQUFFYSxVQUFVMkssTUFBTyxXQUNmdEwsZUFBZUssS0FBTVAsRUFBRyIsImZpbGUiOiJjaGVja291dC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWwgd2NfY2hlY2tvdXRfcGFyYW1zICovXG5qUXVlcnkoIGZ1bmN0aW9uKCAkICkge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIC8qKlxuICAgICAqIE9iamVjdCB0byBoYW5kbGUgU3dlZGJhbmsgUGF5IGNoZWNrb3V0IHBheW1lbnQgZm9ybXMuXG4gICAgICovXG4gICAgd2luZG93LndjX3NiX2NoZWNrb3V0ID0ge1xuICAgICAgICBqc191cmw6IG51bGwsXG4gICAgICAgIHBheW1lbnRNZW51OiBudWxsLFxuICAgICAgICBpc1BheW1lbnRNZW51TG9hZGVkOiBmYWxzZSxcbiAgICAgICAgeGhyOiBmYWxzZSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogSW5pdGlhbGl6ZSBlIGhhbmRsZXJzIGFuZCBVSSBzdGF0ZS5cbiAgICAgICAgICovXG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uKCBmb3JtICkge1xuICAgICAgICAgICAgdGhpcy5mb3JtICAgICAgICAgPSBmb3JtO1xuICAgICAgICAgICAgdGhpcy5mb3JtX3N1Ym1pdCAgPSBmYWxzZTtcblxuICAgICAgICAgICAgJCggdGhpcy5mb3JtIClcbiAgICAgICAgICAgIC8vIFdlIG5lZWQgdG8gYmluZCBkaXJlY3RseSB0byB0aGUgY2xpY2sgKGFuZCBub3QgY2hlY2tvdXRfcGxhY2Vfb3JkZXJfcGF5ZXhfY2hlY2tvdXQpIHRvIGF2b2lkIHBvcHVwIGJsb2NrZXJzXG4gICAgICAgICAgICAvLyBlc3BlY2lhbGx5IG9uIG1vYmlsZSBkZXZpY2VzIChsaWtlIG9uIENocm9tZSBmb3IgaU9TKSBmcm9tIGJsb2NraW5nIHBheWV4X2NoZWNrb3V0KHBheW1lbnRfaWQsIHt9LCAnb3BlbicpOyBmcm9tIG9wZW5pbmcgYSB0YWJcbiAgICAgICAgICAgICAgICAub24oICdjbGljaycsICcjcGxhY2Vfb3JkZXInLCB0aGlzLm9uU3VibWl0IClcblxuICAgICAgICAgICAgICAgIC8vIFdvb0NvbW1lcmNlIGxldHMgdXMgcmV0dXJuIGEgZmFsc2Ugb24gY2hlY2tvdXRfcGxhY2Vfb3JkZXJfe2dhdGV3YXl9IHRvIGtlZXAgdGhlIGZvcm0gZnJvbSBzdWJtaXR0aW5nXG4gICAgICAgICAgICAgICAgLm9uKCAnc3VibWl0IGNoZWNrb3V0X3BsYWNlX29yZGVyX3BheWV4X2NoZWNrb3V0JyApO1xuXG4gICAgICAgICAgICAkKCBkb2N1bWVudC5ib2R5ICkuYmluZCggJ3VwZGF0ZV9jaGVja291dCcsIHRoaXMub25VcGRhdGVDaGVja291dCApO1xuICAgICAgICAgICAgJCggZG9jdW1lbnQuYm9keSApLm9uKCAnY2hlY2tvdXRfZXJyb3InLCB0aGlzLnJlc2V0Q2hlY2tvdXQgKTtcbiAgICAgICAgICAgICQoIGRvY3VtZW50LmJvZHkgKS5vbiggJ3VwZGF0ZWRfY2hlY2tvdXQnLCB0aGlzLm9uVXBkYXRlZENoZWNrb3V0ICk7XG4gICAgICAgICAgICAkKCBkb2N1bWVudC5ib2R5ICkub24oICdibHVyJywgdGhpcy5vblVwZGF0ZWRDaGVja291dCApO1xuXG4gICAgICAgICAgICAkKCBkb2N1bWVudC5ib2R5ICkub24oICdjbGljaycsICcjY2hhbmdlLXNoaXBwaW5nLWluZm8nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgLy8gSGlkZSBcIkNoYW5nZSBzaGlwcGluZyBpbmZvXCIgYnV0dG9uXG4gICAgICAgICAgICAgICAgJCggJyNjaGFuZ2Utc2hpcHBpbmctaW5mbycgKS5oaWRlKCk7XG5cbiAgICAgICAgICAgICAgICAvLyBTaG93IEFkZHJlc3MgRmllbGRzXG4gICAgICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQuc2hvd0FkZHJlc3NGaWVsZHMoKTtcbiAgICAgICAgICAgIH0gKTtcblxuICAgICAgICAgICAgJCggZG9jdW1lbnQuYm9keSApLm9uKCAnY2hhbmdlJywgJyNjaGVja2luX2NvdW50cnknLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQubG9hZENoZWNrSW4oICQodGhpcykudmFsKCkgKTtcbiAgICAgICAgICAgIH0gKTtcblxuICAgICAgICAgICAgLy8gSW5pdGlhbGl6ZSBJbnN0YW50IENoZWNrb3V0XG4gICAgICAgICAgICBpZiAoIHdjX3NiX2NoZWNrb3V0LmlzSW5zdGFudENoZWNrb3V0KCkgKSB7XG4gICAgICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQuaW5pdEluc3RhbnRDaGVja291dCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBJbml0aWFsaXplIEluc3RhbnQgQ2hlY2tvdXRcbiAgICAgICAgICovXG4gICAgICAgIGluaXRJbnN0YW50Q2hlY2tvdXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCAnSW5pdGlhbGl6YXRpb24gb2YgSW5zdGFudCBDaGVja291dC4uLicgKTtcblxuICAgICAgICAgICAgaWYgKCB3Y19zYl9jaGVja291dC5pc0NoZWNraW5FbmFibGVkKCkgKSB7XG4gICAgICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQuaGlkZUFkZHJlc3NGaWVsZHMoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gVXNlIHNhdmVkIGNvbnN1bWVyUHJvZmlsZVJlZlxuICAgICAgICAgICAgbGV0IGNvbnN1bWVyUHJvZmlsZUVsbSA9ICQoICcjc3dlZGJhbmstY29uc3VtZXItcHJvZmlsZScgKTtcbiAgICAgICAgICAgIGlmICggY29uc3VtZXJQcm9maWxlRWxtLmxlbmd0aCA+IDAgKSB7XG4gICAgICAgICAgICAgICAgbGV0IHJlZmVyZW5jZSA9IGNvbnN1bWVyUHJvZmlsZUVsbS5kYXRhKCAncmVmZXJlbmNlJyApO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCAnSW5pdGlhdGUgY29uc3VtZXJQcm9maWxlUmVmJywgcmVmZXJlbmNlICk7XG4gICAgICAgICAgICAgICAgLy93Y19zYl9jaGVja291dC5pbml0Q2hlY2tvdXQoIHJlZmVyZW5jZSApO1xuICAgICAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0LmluaXRDaGVja0luKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIEluaXRpYXRlIGNoZWNraW5cblxuICAgICAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0LmluaXRDaGVja0luKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIExvYWQgQ2hlY2tJblxuICAgICAgICAgKiBAcGFyYW0gY291bnRyeVxuICAgICAgICAgKiBAcmV0dXJucyB7Kn1cbiAgICAgICAgICovXG4gICAgICAgIGxvYWRDaGVja0luOiBmdW5jdGlvbiggY291bnRyeSApIHtcbiAgICAgICAgICAgIHJldHVybiAkLmFqYXgoIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnUE9TVCcsXG4gICAgICAgICAgICAgICAgdXJsOiBXQ19HYXRld2F5X1N3ZWRiYW5rX0NoZWNrb3V0LmFqYXhfdXJsLFxuICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiAnc3dlZGJhbmtfY2hlY2tpbicsXG4gICAgICAgICAgICAgICAgICAgIG5vbmNlOiBXQ19HYXRld2F5X1N3ZWRiYW5rX0NoZWNrb3V0Lm5vbmNlLFxuICAgICAgICAgICAgICAgICAgICBjb3VudHJ5OiBjb3VudHJ5XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nXG4gICAgICAgICAgICB9ICkuZG9uZSggZnVuY3Rpb24gKCBkYXRhICkge1xuICAgICAgICAgICAgICAgIGlmICggISBkYXRhLnN1Y2Nlc3MgKSB7XG4gICAgICAgICAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0LmxvZ0Vycm9yKCAnc2ItY2hlY2tpbi1sb2FkZXInLCBkYXRhICk7XG4gICAgICAgICAgICAgICAgICAgIGFsZXJ0KCBkYXRhLmRldGFpbHMgKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIERlc3Ryb3lcbiAgICAgICAgICAgICAgICBpZiAoIHdpbmRvdy5oYXNPd25Qcm9wZXJ0eSggJ3BheWV4JyApICYmIHdpbmRvdy5wYXlleC5oYXNPd25Qcm9wZXJ0eSggJ2hvc3RlZFZpZXcnICkgKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICggdHlwZW9mIHdpbmRvdy5wYXlleC5ob3N0ZWRWaWV3LmNvbnN1bWVyICE9PSAndW5kZWZpbmVkJyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5wYXlleC5ob3N0ZWRWaWV3LmNvbnN1bWVyKCkuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIERlc3Ryb3kgSlNcbiAgICAgICAgICAgICAgICAkKCBcInNjcmlwdFtzcmMqPSdweC5jb25zdW1lci5jbGllbnQnXVwiICkucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgJCggJyNzd2VkYmFuay1jaGVja2luIGlmcmFtZScgKS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICB3Y19zYl9jaGVja291dC5sb2FkSnMoIGRhdGEuZGF0YSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB3Y19zYl9jaGVja291dC5pbml0Q2hlY2tJbigpO1xuICAgICAgICAgICAgICAgIH0gKTtcbiAgICAgICAgICAgIH0gKTtcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogSW5pdGlhbGl6ZSBDaGVja0luXG4gICAgICAgICAqL1xuICAgICAgICBpbml0Q2hlY2tJbjogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiAoIHR5cGVvZiBwYXlleCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0LndhaXRGb3JMb2FkaW5nKCdwYXlleC5ob3N0ZWRWaWV3LmNvbnN1bWVyJywgZnVuY3Rpb24gKCBlcnIgKSB7XG4gICAgICAgICAgICAgICAgaWYgKCBlcnIgKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybiggZXJyICk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyBJbml0IFBheUV4IGhvc3RlZFZpZXdcbiAgICAgICAgICAgICAgICB3aW5kb3cucGF5ZXguaG9zdGVkVmlldy5jb25zdW1lcigge1xuICAgICAgICAgICAgICAgICAgICBjb250YWluZXI6ICdzd2VkYmFuay1jaGVja2luJyxcbiAgICAgICAgICAgICAgICAgICAgY3VsdHVyZTogV0NfR2F0ZXdheV9Td2VkYmFua19DaGVja291dC5jdWx0dXJlLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogV0NfR2F0ZXdheV9Td2VkYmFua19DaGVja291dC5jaGVja0luU3R5bGUgPyBKU09OLnBhcnNlKCBXQ19HYXRld2F5X1N3ZWRiYW5rX0NoZWNrb3V0LmNoZWNrSW5TdHlsZSApIDogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgb25Db25zdW1lcklkZW50aWZpZWQ6IGZ1bmN0aW9uKCBkYXRhICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coICdob3N0ZWRWaWV3OiBvbkNvbnN1bWVySWRlbnRpZmllZCcgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0Lm9uQ29uc3VtZXJJZGVudGlmaWVkKCBkYXRhICk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIG9uTmV3Q29uc3VtZXI6IGZ1bmN0aW9uKCBkYXRhICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coICdob3N0ZWRWaWV3OiBvbk5ld0NvbnN1bWVyJyApO1xuICAgICAgICAgICAgICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQub25Db25zdW1lcklkZW50aWZpZWQoIGRhdGEgKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgb25Db25zdW1lclJlbW92ZWQ6IGZ1bmN0aW9uKCBkYXRhICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coICdob3N0ZWRWaWV3OiBvbkNvbnN1bWVyUmVtb3ZlZCcgKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgb25CaWxsaW5nRGV0YWlsc0F2YWlsYWJsZTogZnVuY3Rpb24oIGRhdGEgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3Y19zYl9jaGVja291dC5vbkFkZHJlc3NEZXRhaWxzQXZhaWxhYmxlKCAnYmlsbGluZycsIGRhdGEgKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgb25TaGlwcGluZ0RldGFpbHNBdmFpbGFibGU6IGZ1bmN0aW9uKCBkYXRhICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCBXQ19HYXRld2F5X1N3ZWRiYW5rX0NoZWNrb3V0Lm5lZWRzX3NoaXBwaW5nX2FkZHJlc3MgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBXQ19HYXRld2F5X1N3ZWRiYW5rX0NoZWNrb3V0LnNoaXBfdG9fYmlsbGluZ19hZGRyZXNzX29ubHlcbiAgICAgICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0Lm9uQWRkcmVzc0RldGFpbHNBdmFpbGFibGUoICdiaWxsaW5nJywgZGF0YSApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB3Y19zYl9jaGVja291dC5vbkFkZHJlc3NEZXRhaWxzQXZhaWxhYmxlKCAnc2hpcHBpbmcnLCBkYXRhICk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIG9uRXJyb3I6IGZ1bmN0aW9uICggZGF0YSApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0LmxvZ0Vycm9yKCAnc2ItY2hlY2tpbicsIGRhdGEgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KCBkYXRhLmRldGFpbHMgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0Lm9uRXJyb3IoIGRhdGEuZGV0YWlscyApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSApLm9wZW4oKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIGluaXRDaGVja291dDogZnVuY3Rpb24oIHJlZmVyZW5jZSApIHtcbiAgICAgICAgICAgIC8vIFNob3cgXCJDaGFuZ2Ugc2hpcHBpbmcgaW5mb1wiIGJ1dHRvblxuICAgICAgICAgICAgJCggJyNjaGFuZ2Utc2hpcHBpbmctaW5mbycgKS5zaG93KCk7XG5cbiAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0LmZvcm0uZmluZCggJy5zd2VkYmFua19jdXN0b21lcl9yZWZlcmVuY2UnICkucmVtb3ZlKCk7XG4gICAgICAgICAgICB3Y19zYl9jaGVja291dC5mb3JtLmFwcGVuZCggXCI8aW5wdXQgdHlwZT0naGlkZGVuJyBjbGFzcz0nc3dlZGJhbmtfY3VzdG9tZXJfcmVmZXJlbmNlJyBuYW1lPSdzd2VkYmFua19jdXN0b21lcl9yZWZlcmVuY2UnIHZhbHVlPSdcIiArIHJlZmVyZW5jZSArIFwiJy8+XCIgKTtcblxuICAgICAgICAgICAgLy93Y19zYl9jaGVja291dC5mb3JtLnN1Ym1pdCgpO1xuICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQub25TdWJtaXQoKTtcbiAgICAgICAgfSxcblxuICAgICAgICBpc0luc3RhbnRDaGVja291dCgpIHtcbiAgICAgICAgICAgIHJldHVybiBXQ19HYXRld2F5X1N3ZWRiYW5rX0NoZWNrb3V0Lmluc3RhbnRfY2hlY2tvdXQ7XG4gICAgICAgIH0sXG5cbiAgICAgICAgaXNDaGVja2luRW5hYmxlZCgpIHtcbiAgICAgICAgICAgIHJldHVybiBXQ19HYXRld2F5X1N3ZWRiYW5rX0NoZWNrb3V0LmNoZWNraW47XG4gICAgICAgIH0sXG5cbiAgICAgICAgaXNQYXltZW50TWV0aG9kQ2hvc2VuOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiAkKCAnI3BheW1lbnRfbWV0aG9kX3BheWV4X2NoZWNrb3V0JyApLmlzKCAnOmNoZWNrZWQnICk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgYmxvY2s6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgbGV0IGZvcm1fZGF0YSA9IHdjX3NiX2NoZWNrb3V0LmZvcm0uZGF0YSgpO1xuICAgICAgICAgICAgaWYgKCAxICE9PSBmb3JtX2RhdGFbJ2Jsb2NrVUkuaXNCbG9ja2VkJ10gKSB7XG4gICAgICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQuZm9ybS5ibG9jayh7XG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG92ZXJsYXlDU1M6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICcjZmZmJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuNlxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgdW5ibG9jazogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB3Y19zYl9jaGVja291dC5mb3JtLnVuYmxvY2soKTtcbiAgICAgICAgfSxcblxuICAgICAgICBvbkNsb3NlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0LnVuYmxvY2soKTtcbiAgICAgICAgfSxcblxuICAgICAgICBvblJlYWR5OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCAnUmVhZHknICk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgb25VcGRhdGVDaGVja291dDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyggJ29uVXBkYXRlQ2hlY2tvdXQnICk7XG5cbiAgICAgICAgICAgIGlmICggISB3Y19zYl9jaGVja291dC5pc0luc3RhbnRDaGVja291dCgpICkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gQHRvZG9cbiAgICAgICAgfSxcblxuICAgICAgICBvblVwZGF0ZWRDaGVja291dDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyggJ29uVXBkYXRlZENoZWNrb3V0JyApO1xuXG4gICAgICAgICAgICBpZiAoICEgd2Nfc2JfY2hlY2tvdXQuaXNJbnN0YW50Q2hlY2tvdXQoKSApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICggd2Nfc2JfY2hlY2tvdXQuZm9ybS5pcyggJy5wcm9jZXNzaW5nJyApICkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCAhIHdjX3NiX2NoZWNrb3V0LnZhbGlkYXRlRm9ybSgpICkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCAnb25VcGRhdGVkQ2hlY2tvdXQ6IFZhbGlkYXRpb24gaXMgZmFpbGVkJyApO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJCggJy53b29jb21tZXJjZS1Ob3RpY2VHcm91cC1jaGVja291dCwgLndvb2NvbW1lcmNlLWVycm9yLCAud29vY29tbWVyY2UtbWVzc2FnZScgKS5yZW1vdmUoKTtcbiAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0LnVwZGF0ZU9yZGVyKCk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgb25TdWJtaXQ6IGZ1bmN0aW9uKCBlICkge1xuICAgICAgICAgICAgaWYgKCB3Y19zYl9jaGVja291dC5mb3JtX3N1Ym1pdCApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCB3Y19zYl9jaGVja291dC5pc1BheW1lbnRNZXRob2RDaG9zZW4oKSApIHtcbiAgICAgICAgICAgICAgICBpZiAoIHR5cGVvZiBlICE9PSAndW5kZWZpbmVkJyApIHtcbiAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmICggISB3Y19zYl9jaGVja291dC52YWxpZGF0ZUZvcm0oKSApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCAnb25TdWJtaXQnICk7XG5cbiAgICAgICAgICAgICAgICBpZiAoIHdjX3NiX2NoZWNrb3V0LmZvcm0uaXMoICcucHJvY2Vzc2luZycgKSApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICQoICcud29vY29tbWVyY2UtTm90aWNlR3JvdXAtY2hlY2tvdXQsIC53b29jb21tZXJjZS1lcnJvciwgLndvb2NvbW1lcmNlLW1lc3NhZ2UnICkucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQuZm9ybS5hZGRDbGFzcyggJ3Byb2Nlc3NpbmcnICk7XG4gICAgICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQuYmxvY2soKTtcbiAgICAgICAgICAgICAgICB3Y19zYl9jaGVja291dC5wbGFjZU9yZGVyKClcbiAgICAgICAgICAgICAgICAgICAgLmFsd2F5cyggZnVuY3Rpb24gKCByZXNwb25zZSApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0LmZvcm0ucmVtb3ZlQ2xhc3MoICdwcm9jZXNzaW5nJyApO1xuICAgICAgICAgICAgICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQudW5ibG9jaygpO1xuICAgICAgICAgICAgICAgICAgICB9IClcbiAgICAgICAgICAgICAgICAgICAgLmZhaWwoIGZ1bmN0aW9uKCBqcVhIUiwgdGV4dFN0YXR1cyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0Lm9uRXJyb3IoIHRleHRTdGF0dXMgKTtcbiAgICAgICAgICAgICAgICAgICAgfSApXG4gICAgICAgICAgICAgICAgICAgIC5kb25lKCBmdW5jdGlvbiAoIHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyggcmVzcG9uc2UgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICggcmVzcG9uc2UucmVzdWx0ICE9PSAnc3VjY2VzcycgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gUmVsb2FkIHBhZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIHJlc3BvbnNlLmhhc093blByb3BlcnR5KCdyZWxvYWQnKSAmJiB0cnVlID09PSByZXNwb25zZS5yZWxvYWQgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFRyaWdnZXIgdXBkYXRlIGluIGNhc2Ugd2UgbmVlZCBhIGZyZXNoIG5vbmNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCB0cnVlID09PSByZXNwb25zZS5yZXN1bHQucmVmcmVzaCApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCggZG9jdW1lbnQuYm9keSApLnRyaWdnZXIoICd1cGRhdGVfY2hlY2tvdXQnICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQub25FcnJvciggcmVzcG9uc2UubWVzc2FnZXMgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIExvYWQgU3dlZEJhbmsgUGF5IENoZWNrb3V0IGZyYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICB3Y19zYl9jaGVja291dC5qc191cmwgPSByZXNwb25zZVsnanNfdXJsJ107XG4gICAgICAgICAgICAgICAgICAgICAgICB3Y19zYl9jaGVja291dC5pbml0UGF5bWVudEpTKCB3Y19zYl9jaGVja291dC5qc191cmwgKTtcbiAgICAgICAgICAgICAgICAgICAgfSApO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSxcblxuICAgICAgICByZXNldENoZWNrb3V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0LmZvcm1fc3VibWl0ID0gZmFsc2U7XG4gICAgICAgIH0sXG5cbiAgICAgICAgdmFsaWRhdGVGb3JtOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgJHJlcXVpcmVkX2lucHV0cyxcbiAgICAgICAgICAgICAgICB2YWxpZGF0ZWQgPSB0cnVlO1xuXG4gICAgICAgICAgICAvLyBjaGVjayB0byBzZWUgaWYgd2UgbmVlZCB0byB2YWxpZGF0ZSBzaGlwcGluZyBhZGRyZXNzXG4gICAgICAgICAgICBpZiAoICQoICcjc2hpcC10by1kaWZmZXJlbnQtYWRkcmVzcy1jaGVja2JveCcgKS5pcyggJzpjaGVja2VkJyApICkge1xuICAgICAgICAgICAgICAgICRyZXF1aXJlZF9pbnB1dHMgPSAkKCAnLndvb2NvbW1lcmNlLWJpbGxpbmctZmllbGRzIC52YWxpZGF0ZS1yZXF1aXJlZCwgLndvb2NvbW1lcmNlLXNoaXBwaW5nLWZpZWxkcyAudmFsaWRhdGUtcmVxdWlyZWQnICkuZmluZCgnaW5wdXQsIHNlbGVjdCcpLm5vdCggJCggJyNhY2NvdW50X3Bhc3N3b3JkLCAjYWNjb3VudF91c2VybmFtZScgKSApO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAkcmVxdWlyZWRfaW5wdXRzID0gJCggJy53b29jb21tZXJjZS1iaWxsaW5nLWZpZWxkcyAudmFsaWRhdGUtcmVxdWlyZWQnICkuZmluZCgnaW5wdXQsIHNlbGVjdCcpLm5vdCggJCggJyNhY2NvdW50X3Bhc3N3b3JkLCAjYWNjb3VudF91c2VybmFtZScgKSApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoICRyZXF1aXJlZF9pbnB1dHMubGVuZ3RoICkge1xuICAgICAgICAgICAgICAgICRyZXF1aXJlZF9pbnB1dHMuZWFjaCggZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciAkdGhpcyA9ICQoIHRoaXMgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICRwYXJlbnQgICAgICAgICAgID0gJHRoaXMuY2xvc2VzdCggJy5mb3JtLXJvdycgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRlX3JlcXVpcmVkID0gJHBhcmVudC5pcyggJy52YWxpZGF0ZS1yZXF1aXJlZCcgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRlX2VtYWlsICAgID0gJHBhcmVudC5pcyggJy52YWxpZGF0ZS1lbWFpbCcgKTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoIHZhbGlkYXRlX3JlcXVpcmVkICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCAnY2hlY2tib3gnID09PSAkdGhpcy5hdHRyKCAndHlwZScgKSAmJiAhICR0aGlzLmlzKCAnOmNoZWNrZWQnICkgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCAkdGhpcy52YWwoKSA9PT0gJycgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBpZiAoIHZhbGlkYXRlX2VtYWlsICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCAkdGhpcy52YWwoKSApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8yODU1ODY1L2pxdWVyeS12YWxpZGF0ZS1lLW1haWwtYWRkcmVzcy1yZWdleCAqL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwYXR0ZXJuID0gbmV3IFJlZ0V4cCgvXigoKFthLXpdfFxcZHxbISNcXCQlJidcXCpcXCtcXC1cXC89XFw/XFxeX2B7XFx8fX5dfFtcXHUwMEEwLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRUZdKSsoXFwuKFthLXpdfFxcZHxbISNcXCQlJidcXCpcXCtcXC1cXC89XFw/XFxeX2B7XFx8fX5dfFtcXHUwMEEwLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRUZdKSspKil8KChcXHgyMikoKCgoXFx4MjB8XFx4MDkpKihcXHgwZFxceDBhKSk/KFxceDIwfFxceDA5KSspPygoW1xceDAxLVxceDA4XFx4MGJcXHgwY1xceDBlLVxceDFmXFx4N2ZdfFxceDIxfFtcXHgyMy1cXHg1Yl18W1xceDVkLVxceDdlXXxbXFx1MDBBMC1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkVGXSl8KFxcXFwoW1xceDAxLVxceDA5XFx4MGJcXHgwY1xceDBkLVxceDdmXXxbXFx1MDBBMC1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkVGXSkpKSkqKCgoXFx4MjB8XFx4MDkpKihcXHgwZFxceDBhKSk/KFxceDIwfFxceDA5KSspPyhcXHgyMikpKUAoKChbYS16XXxcXGR8W1xcdTAwQTAtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZFRl0pfCgoW2Etel18XFxkfFtcXHUwMEEwLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRUZdKShbYS16XXxcXGR8LXxcXC58X3x+fFtcXHUwMEEwLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRUZdKSooW2Etel18XFxkfFtcXHUwMEEwLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRUZdKSkpXFwuKSsoKFthLXpdfFtcXHUwMEEwLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRUZdKXwoKFthLXpdfFtcXHUwMEEwLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRUZdKShbYS16XXxcXGR8LXxcXC58X3x+fFtcXHUwMEEwLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRUZdKSooW2Etel18W1xcdTAwQTAtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZFRl0pKSlcXC4/JC9pKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoICEgcGF0dGVybi50ZXN0KCAkdGhpcy52YWwoKSAgKSApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB2YWxpZGF0ZWQ7XG4gICAgICAgIH0sXG5cbiAgICAgICAgd2FpdEZvckxvYWRpbmc6IGZ1bmN0aW9uICggdmFyX3N0cmluZywgY2FsbGJhY2sgKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHZhciBvYmogPSBldmFsKCB2YXJfc3RyaW5nICk7XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2soIGUgKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGxldCBhdHRlbXB0cyA9IDA7XG4gICAgICAgICAgICBsZXQgdGltZXIgPSB3aW5kb3cuc2V0SW50ZXJ2YWwoIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIGlmICggdHlwZW9mIG9iaiAhPT0gJ3VuZGVmaW5lZCcgKSB7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5jbGVhckludGVydmFsKCB0aW1lciApO1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayggbnVsbCwgb2JqICk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgYXR0ZW1wdHMrKztcbiAgICAgICAgICAgICAgICAgICAgaWYgKCBhdHRlbXB0cyA+PSAxMjAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuY2xlYXJJbnRlcnZhbCggdGltZXIgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCAnVGltZW91dCcgKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIDUwMCApO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBMb2FkIEpTXG4gICAgICAgICAqIEBwYXJhbSBqc1xuICAgICAgICAgKiBAcGFyYW0gY2FsbGJhY2tcbiAgICAgICAgICovXG4gICAgICAgIGxvYWRKczogZnVuY3Rpb24gKCBqcywgY2FsbGJhY2sgKSB7XG4gICAgICAgICAgICAvLyBDcmVhdGVzIGEgbmV3IHNjcmlwdCB0YWdcbiAgICAgICAgICAgIGxldCBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCAnc2NyaXB0JyApO1xuXG4gICAgICAgICAgICAvLyBTZXQgc2NyaXB0IHRhZyBwYXJhbXNcbiAgICAgICAgICAgIHNjcmlwdC5zZXRBdHRyaWJ1dGUoICdzcmMnLCBqcyApO1xuICAgICAgICAgICAgc2NyaXB0LnNldEF0dHJpYnV0ZSggJ3R5cGUnLCAndGV4dC9qYXZhc2NyaXB0JyApO1xuICAgICAgICAgICAgc2NyaXB0LnNldEF0dHJpYnV0ZSggJ2FzeW5jJywgJycgKTtcbiAgICAgICAgICAgIHNjcmlwdC5hZGRFdmVudExpc3RlbmVyKCAnbG9hZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgfSwgZmFsc2UgKTtcblxuICAgICAgICAgICAgLy8gR2V0cyBkb2N1bWVudCBoZWFkIGVsZW1lbnRcbiAgICAgICAgICAgIGxldCBvSGVhZCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCAnaGVhZCcgKVswXTtcbiAgICAgICAgICAgIGlmICggb0hlYWQgKSB7XG4gICAgICAgICAgICAgICAgLy8gQWRkIHNjcmlwdCB0YWcgdG8gaGVhZFxuICAgICAgICAgICAgICAgIG9IZWFkLmFwcGVuZENoaWxkKCBzY3JpcHQgKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHNjcmlwdDtcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogSW5pdGlhdGUgUGF5bWVudCBKYXZhc2NyaXB0XG4gICAgICAgICAqIEBwYXJhbSB1cmxcbiAgICAgICAgICogQHBhcmFtIGNhbGxiYWNrXG4gICAgICAgICAqL1xuICAgICAgICBpbml0UGF5bWVudEpTOiBmdW5jdGlvbiAoIHVybCwgY2FsbGJhY2sgKSB7XG4gICAgICAgICAgICBpZiAoIHR5cGVvZiBjYWxsYmFjayA9PT0gJ3VuZGVmaW5lZCcgKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2sgPSBmdW5jdGlvbiAoKSB7fTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gRGVzdHJveVxuICAgICAgICAgICAgaWYgKCB3aW5kb3cuaGFzT3duUHJvcGVydHkoICdwYXlleCcgKSAmJiB3aW5kb3cucGF5ZXguaGFzT3duUHJvcGVydHkoICdob3N0ZWRWaWV3JyApICkge1xuICAgICAgICAgICAgICAgIGlmICggdHlwZW9mIHdpbmRvdy5wYXlleC5ob3N0ZWRWaWV3LnBheW1lbnRNZW51ICE9PSAndW5kZWZpbmVkJyApIHtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LnBheWV4Lmhvc3RlZFZpZXcucGF5bWVudE1lbnUoKS5jbG9zZSgpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICQoICcjcGF5bWVudC1zd2VkYmFuay1jaGVja291dCBpZnJhbWUnICkucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgLy9kZWxldGUgd2luZG93LnBheWV4Lmhvc3RlZFZpZXc7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIERlc3Ryb3kgSlNcbiAgICAgICAgICAgICQoIFwic2NyaXB0W3NyYyo9J3B4LnBheW1lbnRtZW51LmNsaWVudCddXCIgKS5yZW1vdmUoKTtcblxuICAgICAgICAgICAgLy8gTG9hZCBKU1xuICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQubG9hZEpzKCB1cmwsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAkKCAnI3BheW1lbnQtc3dlZGJhbmstY2hlY2tvdXQgaWZyYW1lJyApLnJlbW92ZSgpO1xuXG4gICAgICAgICAgICAgICAgLy8gTG9hZCBTd2VkQmFuayBQYXkgQ2hlY2tvdXQgZnJhbWVcbiAgICAgICAgICAgICAgICBpZiAoIHdjX3NiX2NoZWNrb3V0LmlzSW5zdGFudENoZWNrb3V0KCkgKSB7XG4gICAgICAgICAgICAgICAgICAgICQoICcjcGF5bWVudCcgKS5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0LmluaXRQYXltZW50TWVudSggJ3BheW1lbnQtc3dlZGJhbmstY2hlY2tvdXQnICk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgJC5mZWF0aGVybGlnaHQoICc8ZGl2IGlkPVwic3dlZGJhbmstcGF5bWVudG1lbnVcIj4mbmJzcDs8L2Rpdj4nLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXJpYW50OiAnZmVhdGhlcmxpZ2h0LXN3ZWRiYW5rJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBlcnNpc3Q6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBjbG9zZU9uQ2xpY2s6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xvc2VPbkVzYzogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBhZnRlck9wZW46IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3Y19zYl9jaGVja291dC5pbml0UGF5bWVudE1lbnUoICdzd2VkYmFuay1wYXltZW50bWVudScgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBhZnRlckNsb3NlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQuZm9ybS5yZW1vdmVDbGFzcyggJ3Byb2Nlc3NpbmcnICkudW5ibG9jaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9ICk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY2FsbGJhY2soKVxuICAgICAgICAgICAgfSApO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBJbml0aWF0ZSBQYXltZW50IE1lbnUuXG4gICAgICAgICAqIFBheW1lbnQgSmF2YXNjcmlwdCBtdXN0IGJlIGxvYWRlZC5cbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtIGlkXG4gICAgICAgICAqIEBwYXJhbSBjYWxsYmFja1xuICAgICAgICAgKi9cbiAgICAgICAgaW5pdFBheW1lbnRNZW51OiBmdW5jdGlvbiAoIGlkLCBjYWxsYmFjayApIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCAnaW5pdFBheW1lbnRNZW51JyApO1xuXG4gICAgICAgICAgICBpZiAoIHR5cGVvZiBjYWxsYmFjayA9PT0gJ3VuZGVmaW5lZCcgKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2sgPSBmdW5jdGlvbiAoKSB7fTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gTG9hZCBTd2VkQmFuayBQYXkgQ2hlY2tvdXQgZnJhbWVcbiAgICAgICAgICAgIHRoaXMucGF5bWVudE1lbnUgPSB3aW5kb3cucGF5ZXguaG9zdGVkVmlldy5wYXltZW50TWVudSgge1xuICAgICAgICAgICAgICAgIGNvbnRhaW5lcjogaWQsXG4gICAgICAgICAgICAgICAgY3VsdHVyZTogV0NfR2F0ZXdheV9Td2VkYmFua19DaGVja291dC5jdWx0dXJlLFxuICAgICAgICAgICAgICAgIHN0eWxlOiBXQ19HYXRld2F5X1N3ZWRiYW5rX0NoZWNrb3V0LnBheW1lbnRNZW51U3R5bGUgPyBKU09OLnBhcnNlKCBXQ19HYXRld2F5X1N3ZWRiYW5rX0NoZWNrb3V0LnBheW1lbnRNZW51U3R5bGUgKSA6IG51bGwsXG4gICAgICAgICAgICAgICAgb25BcHBsaWNhdGlvbkNvbmZpZ3VyZWQ6IGZ1bmN0aW9uKCBkYXRhICkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyggJ29uQXBwbGljYXRpb25Db25maWd1cmVkJyApO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyggZGF0YSApO1xuICAgICAgICAgICAgICAgICAgICB3Y19zYl9jaGVja291dC5pc1BheW1lbnRNZW51TG9hZGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soIG51bGwgKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9uUGF5bWVudE1lbnVJbnN0cnVtZW50U2VsZWN0ZWQ6IGZ1bmN0aW9uICggZGF0YSApIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coICdvblBheW1lbnRNZW51SW5zdHJ1bWVudFNlbGVjdGVkJyApO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyggZGF0YSApO1xuICAgICAgICAgICAgICAgICAgICB3Y19zYl9jaGVja291dC5vblBheW1lbnRNZW51SW5zdHJ1bWVudFNlbGVjdGVkKCBkYXRhLm5hbWUsIGRhdGEuaW5zdHJ1bWVudCApO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgb25QYXltZW50Q3JlYXRlZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyggJ29uUGF5bWVudENyZWF0ZWQnICk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBvblBheW1lbnRDb21wbGV0ZWQ6IGZ1bmN0aW9uICggZGF0YSApIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coICdvblBheW1lbnRDb21wbGV0ZWQnICk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCBkYXRhICk7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYubG9jYXRpb24uaHJlZiA9IGRhdGEucmVkaXJlY3RVcmw7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBvblBheW1lbnRDYW5jZWxlZDogZnVuY3Rpb24gKCBkYXRhICkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyggJ29uUGF5bWVudENhbmNlbGVkJyApO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyggZGF0YSApO1xuICAgICAgICAgICAgICAgICAgICB3Y19zYl9jaGVja291dC5sb2dFcnJvciggJ3BheW1lbnQtbWVudS1jYW5jZWwnLCBkYXRhICk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBvblBheW1lbnRGYWlsZWQ6IGZ1bmN0aW9uICggZGF0YSApIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coICdvblBheW1lbnRGYWlsZWQnICk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCBkYXRhICk7XG4gICAgICAgICAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0LmxvZ0Vycm9yKCAncGF5bWVudC1tZW51LWZhaWxlZCcsIGRhdGEgKTtcbiAgICAgICAgICAgICAgICAgICAgLy9zZWxmLmxvY2F0aW9uLmhyZWYgPSBkYXRhLnJlZGlyZWN0VXJsO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgb25FcnJvcjogZnVuY3Rpb24gKCBkYXRhICkge1xuICAgICAgICAgICAgICAgICAgICB3Y19zYl9jaGVja291dC5sb2dFcnJvciggJ3BheW1lbnQtbWVudS1lcnJvcicsIGRhdGEgKTtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soIGRhdGEgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9ICk7XG5cbiAgICAgICAgICAgIHRoaXMucGF5bWVudE1lbnUub3BlbigpO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZWZyZXNoXG4gICAgICAgICAqL1xuICAgICAgICByZWZyZXNoUGF5bWVudE1lbnU6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coICdyZWZyZXNoUGF5bWVudE1lbnUnICk7XG4gICAgICAgICAgICBpZiAoIHR5cGVvZiB0aGlzLnBheW1lbnRNZW51ICE9PSAndW5kZWZpbmVkJyAmJlxuICAgICAgICAgICAgICAgIHRoaXMucGF5bWVudE1lbnUgJiZcbiAgICAgICAgICAgICAgICB0aGlzLnBheW1lbnRNZW51Lmhhc093blByb3BlcnR5KCAncmVmcmVzaCcgKSAmJlxuICAgICAgICAgICAgICAgIHR5cGVvZiB0aGlzLnBheW1lbnRNZW51LnJlZnJlc2ggPT09ICdmdW5jdGlvbicgKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRoaXMucGF5bWVudE1lbnUucmVmcmVzaCgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oICdyZWZyZXNoUGF5bWVudE1lbnU6IHJlZnJlc2ggd29ya2Fyb3VuZCcgKTtcbiAgICAgICAgICAgICAgICAvL3djX3NiX2NoZWNrb3V0LmluaXRQYXltZW50SlMoIHdjX3NiX2NoZWNrb3V0LmpzX3VybCApXG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFBsYWNlIE9yZGVyXG4gICAgICAgICAqIEByZXR1cm4ge0pRdWVyeVByb21pc2U8YW55Pn1cbiAgICAgICAgICovXG4gICAgICAgIHBsYWNlT3JkZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCAncGxhY2VPcmRlcicgKTtcbiAgICAgICAgICAgIGxldCBmaWVsZHMgPSAkKCcud29vY29tbWVyY2UtY2hlY2tvdXQnKS5zZXJpYWxpemUoKTtcblxuICAgICAgICAgICAgcmV0dXJuICQuYWpheCgge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdQT1NUJyxcbiAgICAgICAgICAgICAgICB1cmw6IFdDX0dhdGV3YXlfU3dlZGJhbmtfQ2hlY2tvdXQuYWpheF91cmwsXG4gICAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgICAgICBhY3Rpb246ICdzd2VkYmFua19wbGFjZV9vcmRlcicsXG4gICAgICAgICAgICAgICAgICAgIG5vbmNlOiBXQ19HYXRld2F5X1N3ZWRiYW5rX0NoZWNrb3V0Lm5vbmNlLFxuICAgICAgICAgICAgICAgICAgICBkYXRhOiBmaWVsZHNcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiAnanNvbidcbiAgICAgICAgICAgIH0gKS5kb25lKCBmdW5jdGlvbiAoIHJlc3BvbnNlICkge1xuICAgICAgICAgICAgICAgIC8vIFJlbG9hZCBwYWdlXG4gICAgICAgICAgICAgICAgaWYgKCByZXNwb25zZS5oYXNPd25Qcm9wZXJ0eSgncmVsb2FkJykgJiYgdHJ1ZSA9PT0gcmVzcG9uc2UucmVsb2FkICkge1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgIFx0XHR9XG5cbiAgICAgICAgICAgICAgICBpZiAoIHJlc3BvbnNlLmhhc093blByb3BlcnR5KCdyZXN1bHQnKSAmJiByZXNwb25zZS5yZXN1bHQgPT09ICdmYWlsdXJlJyApIHtcbiAgICAgICAgICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQubG9nRXJyb3IoICdzYi1wbGFjZS1vcmRlcicsIHJlc3BvbnNlICk7XG4gICAgICAgICAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0Lm9uRXJyb3IoIHJlc3BvbnNlLm1lc3NhZ2VzICk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSApO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBVcGRhdGUgT3JkZXJcbiAgICAgICAgICogQHBhcmFtIGNvbXBhdGliaWxpdHlcbiAgICAgICAgICogQHJldHVybiB7SlF1ZXJ5UHJvbWlzZTxhbnk+fVxuICAgICAgICAgKi9cbiAgICAgICAgdXBkYXRlT3JkZXI6IGZ1bmN0aW9uICggY29tcGF0aWJpbGl0eSApIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCAndXBkYXRlT3JkZXInICk7XG4gICAgICAgICAgICBsZXQgZmllbGRzID0gJCgnLndvb2NvbW1lcmNlLWNoZWNrb3V0Jykuc2VyaWFsaXplKCk7XG5cbiAgICAgICAgICAgIGlmICggdHlwZW9mIGNvbXBhdGliaWxpdHkgPT09ICd1bmRlZmluZWQnICkge1xuICAgICAgICAgICAgICAgIGNvbXBhdGliaWxpdHkgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZmllbGRzICs9ICcmY29tcGF0aWJpbGl0eT0nICsgY29tcGF0aWJpbGl0eTtcblxuICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQuZm9ybS5hZGRDbGFzcyggJ3Byb2Nlc3NpbmcnICk7XG4gICAgICAgICAgICB3Y19zYl9jaGVja291dC5ibG9jaygpO1xuXG4gICAgICAgICAgICBpZiAoIHdjX3NiX2NoZWNrb3V0LnhociApIHtcbiAgICAgICAgICAgICAgICB3Y19zYl9jaGVja291dC54aHIuYWJvcnQoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQueGhyID0gJC5hamF4KCB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ1BPU1QnLFxuICAgICAgICAgICAgICAgIHVybDogV0NfR2F0ZXdheV9Td2VkYmFua19DaGVja291dC5hamF4X3VybCxcbiAgICAgICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbjogJ3N3ZWRiYW5rX3VwZGF0ZV9vcmRlcicsXG4gICAgICAgICAgICAgICAgICAgIG5vbmNlOiBXQ19HYXRld2F5X1N3ZWRiYW5rX0NoZWNrb3V0Lm5vbmNlLFxuICAgICAgICAgICAgICAgICAgICBkYXRhOiBmaWVsZHNcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiAnanNvbidcbiAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgICAgIC5hbHdheXMoIGZ1bmN0aW9uICggcmVzcG9uc2UgKSB7XG4gICAgICAgICAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0LnhociA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB3Y19zYl9jaGVja291dC5mb3JtLnJlbW92ZUNsYXNzKCAncHJvY2Vzc2luZycgKTtcbiAgICAgICAgICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQudW5ibG9jaygpO1xuICAgICAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgICAgIC5mYWlsKCBmdW5jdGlvbigganFYSFIsIHRleHRTdGF0dXMgKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCAndXBkYXRlT3JkZXIgZXJyb3I6JyArIHRleHRTdGF0dXMgKTtcbiAgICAgICAgICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQub25FcnJvciggdGV4dFN0YXR1cyApO1xuICAgICAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgICAgIC5kb25lKCBmdW5jdGlvbiAoIHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCByZXNwb25zZSApO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICggcmVzcG9uc2UuaGFzT3duUHJvcGVydHkoJ3Jlc3VsdCcpICYmIHJlc3BvbnNlLnJlc3VsdCA9PT0gJ3N1Y2Nlc3MnICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gUmVmcmVzaCBQYXltZW50IE1lbnVcbiAgICAgICAgICAgICAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0LmpzX3VybCA9IHJlc3BvbnNlWydqc191cmwnXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0LnJlZnJlc2hQYXltZW50TWVudSgpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBpZiAoIHJlc3BvbnNlLmhhc093blByb3BlcnR5KCdyZXN1bHQnKSAmJiByZXNwb25zZS5yZXN1bHQgPT09ICdmYWlsdXJlJyApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFN3ZWRCYW5rIFBheW1lbnQgcmV0dXJucyBlcnJvciB0aGF0IE9yZGVyIHVwZGF0ZSBpcyBub3QgYXZhaWxhYmxlXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIHJlc3BvbnNlLm1lc3NhZ2VzLmluZGV4T2YoICdPcmRlciB1cGRhdGUgaXMgbm90IGF2YWlsYWJsZS4nICkgPiAtMSAmJiAhIGNvbXBhdGliaWxpdHkgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gRm9yY2UgcmVsb2FkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCAncmVmcmVzaFBheW1lbnRNZW51OiByZWZyZXNoIHdvcmthcm91bmQuIEZvcmNlIHJlbG9hZC4nICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQudXBkYXRlT3JkZXIoIHRydWUgKS5kb25lKCBmdW5jdGlvbiAoIHJlc3BvbnNlICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIHJlc3BvbnNlLmhhc093blByb3BlcnR5KCdqc191cmwnKSApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0LmluaXRQYXltZW50SlMoIHJlc3BvbnNlLmpzX3VybCApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSApO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gUmVsb2FkIHBhZ2VcbiAgICAgICAgICAgICAgICAgICAgaWYgKCByZXNwb25zZS5oYXNPd25Qcm9wZXJ0eSgncmVsb2FkJykgJiYgdHJ1ZSA9PT0gcmVzcG9uc2UucmVsb2FkICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAvLyBUcmlnZ2VyIHVwZGF0ZSBpbiBjYXNlIHdlIG5lZWQgYSBmcmVzaCBub25jZVxuICAgICAgICAgICAgICAgICAgICBpZiAoIHRydWUgPT09IHJlc3BvbnNlLnJlc3VsdC5yZWZyZXNoICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJCggZG9jdW1lbnQuYm9keSApLnRyaWdnZXIoICd1cGRhdGVfY2hlY2tvdXQnICk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICB3Y19zYl9jaGVja291dC5sb2dFcnJvciggJ3NiLXVwZGF0ZS1vcmRlcicsIHJlc3BvbnNlICk7XG4gICAgICAgICAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0Lm9uRXJyb3IoIHJlc3BvbnNlLm1lc3NhZ2VzICk7XG4gICAgICAgICAgICAgICAgfSApO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuICB3Y19zYl9jaGVja291dC54aHI7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIE9uIENvbnN1bWVyIElkZW50aWZpZWRcbiAgICAgICAgICogQHBhcmFtIGRhdGFcbiAgICAgICAgICogQHJldHVybnMgeyp9XG4gICAgICAgICAqL1xuICAgICAgICBvbkNvbnN1bWVySWRlbnRpZmllZDogZnVuY3Rpb24gKCBkYXRhICkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coICdvbkNvbnN1bWVySWRlbnRpZmllZCcsIGRhdGEgKTtcbiAgICAgICAgICAgICQoICcjY2hhbmdlLXNoaXBwaW5nLWluZm8nICkuc2hvdygpO1xuXG4gICAgICAgICAgICByZXR1cm4gJC5hamF4KCB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ1BPU1QnLFxuICAgICAgICAgICAgICAgIHVybDogV0NfR2F0ZXdheV9Td2VkYmFua19DaGVja291dC5hamF4X3VybCxcbiAgICAgICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbjogJ3N3ZWRiYW5rX2NoZWNrb3V0X2N1c3RvbWVyX3Byb2ZpbGUnLFxuICAgICAgICAgICAgICAgICAgICBub25jZTogV0NfR2F0ZXdheV9Td2VkYmFua19DaGVja291dC5ub25jZSxcbiAgICAgICAgICAgICAgICAgICAgY29uc3VtZXJQcm9maWxlUmVmOiBkYXRhLmNvbnN1bWVyUHJvZmlsZVJlZlxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZGF0YVR5cGU6ICdqc29uJ1xuICAgICAgICAgICAgfSApLmFsd2F5cyggZnVuY3Rpb24gKCByZXNwb25zZSApIHtcbiAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgfSApLmRvbmUoIGZ1bmN0aW9uICggcmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5zdWNjZXNzKSB7XG4gICAgICAgICAgICAgICAgICAgIGFsZXJ0KHJlc3BvbnNlLmRhdGEubWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyBJbml0aWF0ZSBDaGVja291dFxuICAgICAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0LmluaXRDaGVja291dCggZGF0YS5jb25zdW1lclByb2ZpbGVSZWYgKTtcbiAgICAgICAgICAgIH0gKTtcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogT24gQWRkcmVzcyBEZXRhaWxzIEF2YWlsYWJsZVxuICAgICAgICAgKiBAcGFyYW0gdHlwZVxuICAgICAgICAgKiBAcGFyYW0gZGF0YVxuICAgICAgICAgKiBAcmV0dXJucyB7Kn1cbiAgICAgICAgICovXG4gICAgICAgIG9uQWRkcmVzc0RldGFpbHNBdmFpbGFibGU6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coICdvbkFkZHJlc3NEZXRhaWxzQXZhaWxhYmxlJywgdHlwZSwgZGF0YSApO1xuXG4gICAgICAgICAgICAkKCAnI2NoYW5nZS1zaGlwcGluZy1pbmZvJyApLnNob3coKTtcblxuICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQuYmxvY2soKTtcbiAgICAgICAgICAgIHJldHVybiAkLmFqYXgoIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnUE9TVCcsXG4gICAgICAgICAgICAgICAgdXJsOiBXQ19HYXRld2F5X1N3ZWRiYW5rX0NoZWNrb3V0LmFqYXhfdXJsLFxuICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiAnc3dlZGJhbmtfY2hlY2tvdXRfZ2V0X2FkZHJlc3MnLFxuICAgICAgICAgICAgICAgICAgICBub25jZTogV0NfR2F0ZXdheV9Td2VkYmFua19DaGVja291dC5ub25jZSxcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogdHlwZSxcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBkYXRhLnVybFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZGF0YVR5cGU6ICdqc29uJ1xuICAgICAgICAgICAgfSApLmFsd2F5cyggZnVuY3Rpb24gKCByZXNwb25zZSApIHtcbiAgICAgICAgICAgICAgICB3Y19zYl9jaGVja291dC51bmJsb2NrKCk7XG4gICAgICAgICAgICB9ICkuZG9uZSggZnVuY3Rpb24gKCByZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICBpZiAoIXJlc3BvbnNlLnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQubG9nRXJyb3IoJ3NiLWFkZHJlc3MtZGV0YWlscycsIHJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICAgICAgYWxlcnQocmVzcG9uc2UuZGF0YS5tZXNzYWdlKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIFByb2Nlc3MgYWRkcmVzc1xuICAgICAgICAgICAgICAgIGxldCBkYXRhID0gcmVzcG9uc2UuZGF0YTtcbiAgICAgICAgICAgICAgICAkLmVhY2goZGF0YSwgZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgW3R5cGVdLmZvckVhY2goZnVuY3Rpb24oc2VjdGlvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGVsID0gJCgnaW5wdXRbbmFtZT1cIicgKyBzZWN0aW9uICsgJ18nICsga2V5ICsgJ1wiXScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVsLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgZWwucHJvcCgncmVhZG9ubHknLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbC5jbG9zZXN0KCcuZm9ybS1yb3cnKS5yZW1vdmVDbGFzcygnc3dlZGJhbmstbG9ja2VkJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbC52YWwodmFsdWUpLmNoYW5nZSgpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoa2V5ID09PSAnY291bnRyeScgfHwga2V5ID09PSAnc3RhdGUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGVsMSA9ICQoJyMnICsgc2VjdGlvbiArICdfJyArIGtleSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cuU2VsZWN0MiAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWwxLnNlbGVjdDIoJ3ZhbCcsIHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiAkLmZuLmNob3NlbiAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQ2hvc2VuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsMS52YWwodmFsdWUpLnRyaWdnZXIoJ2Nob3Nlbjp1cGRhdGVkJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vZWwxLmNob3NlbigpLmNoYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsMS5jaGFuZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgJCggZG9jdW1lbnQuYm9keSApLnRyaWdnZXIoICd1cGRhdGVfY2hlY2tvdXQnICk7XG4gICAgICAgICAgICB9ICk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIE9uIFBheW1lbnQgTWVudSBJbnN0cnVtZW50IFNlbGVjdGVkXG4gICAgICAgICAqIEBwYXJhbSBuYW1lXG4gICAgICAgICAqIEBwYXJhbSBpbnN0cnVtZW50XG4gICAgICAgICAqL1xuICAgICAgICBvblBheW1lbnRNZW51SW5zdHJ1bWVudFNlbGVjdGVkOiBmdW5jdGlvbiAoIG5hbWUsIGluc3RydW1lbnQgKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyggJ29uUGF5bWVudE1lbnVJbnN0cnVtZW50U2VsZWN0ZWQnLCBuYW1lLCBpbnN0cnVtZW50ICk7XG4gICAgICAgICAgICAkKCBkb2N1bWVudC5ib2R5ICkudHJpZ2dlciggJ3NiX3BheW1lbnRfbWVudV9pbnN0cnVtZW50X3NlbGVjdGVkJywgW25hbWUsIGluc3RydW1lbnRdICk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIExvZyBFcnJvclxuICAgICAgICAgKiBAcGFyYW0gaWRcbiAgICAgICAgICogQHBhcmFtIGRhdGFcbiAgICAgICAgICogQHJldHVybnMgeyp9XG4gICAgICAgICAqL1xuICAgICAgICBsb2dFcnJvcjogZnVuY3Rpb24gKCBpZCwgZGF0YSApIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybiggZGF0YSApO1xuXG4gICAgICAgICAgICByZXR1cm4gJC5hamF4KCB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ1BPU1QnLFxuICAgICAgICAgICAgICAgIHVybDogV0NfR2F0ZXdheV9Td2VkYmFua19DaGVja291dC5hamF4X3VybCxcbiAgICAgICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbjogJ3N3ZWRiYW5rX2NoZWNrb3V0X2xvZ19lcnJvcicsXG4gICAgICAgICAgICAgICAgICAgIG5vbmNlOiBXQ19HYXRld2F5X1N3ZWRiYW5rX0NoZWNrb3V0Lm5vbmNlLFxuICAgICAgICAgICAgICAgICAgICBpZDogaWQsXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KCBkYXRhIClcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiAnanNvbidcbiAgICAgICAgICAgIH0gKTtcbiAgICAgICAgfSxcblxuICAgICAgICBvbkVycm9yOiBmdW5jdGlvbiAoIGRhdGEgKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyggJ29uRXJyb3InLCBkYXRhICk7XG4gICAgICAgICAgICB3Y19zYl9jaGVja291dC5zdWJtaXRfZXJyb3IoICc8ZGl2IGNsYXNzPVwid29vY29tbWVyY2UtZXJyb3JcIj4nICsgZGF0YSArICc8L2Rpdj4nICk7XG4gICAgICAgIH0sXG4gICAgICAgIHN1Ym1pdF9lcnJvcjogZnVuY3Rpb24oIGVycm9yX21lc3NhZ2UgKSB7XG4gICAgICAgICAgICAkKCAnLndvb2NvbW1lcmNlLU5vdGljZUdyb3VwLWNoZWNrb3V0LCAud29vY29tbWVyY2UtZXJyb3IsIC53b29jb21tZXJjZS1tZXNzYWdlJyApLnJlbW92ZSgpO1xuICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQuZm9ybS5wcmVwZW5kKCAnPGRpdiBjbGFzcz1cIndvb2NvbW1lcmNlLU5vdGljZUdyb3VwIHdvb2NvbW1lcmNlLU5vdGljZUdyb3VwLWNoZWNrb3V0XCI+JyArIGVycm9yX21lc3NhZ2UgKyAnPC9kaXY+JyApO1xuICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQuZm9ybS5yZW1vdmVDbGFzcyggJ3Byb2Nlc3NpbmcnICkudW5ibG9jaygpO1xuICAgICAgICAgICAgd2Nfc2JfY2hlY2tvdXQuZm9ybS5maW5kKCAnLmlucHV0LXRleHQsIHNlbGVjdCwgaW5wdXQ6Y2hlY2tib3gnICkudHJpZ2dlciggJ3ZhbGlkYXRlJyApLmJsdXIoKTtcbiAgICAgICAgICAgIHdjX3NiX2NoZWNrb3V0LnNjcm9sbF90b19ub3RpY2VzKCk7XG4gICAgICAgICAgICAkKCBkb2N1bWVudC5ib2R5ICkudHJpZ2dlciggJ2NoZWNrb3V0X2Vycm9yJyApO1xuICAgICAgICB9LFxuICAgICAgICBzY3JvbGxfdG9fbm90aWNlczogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBsZXQgc2Nyb2xsRWxlbWVudCA9ICQoICcud29vY29tbWVyY2UtTm90aWNlR3JvdXAtdXBkYXRlT3JkZXJSZXZpZXcsIC53b29jb21tZXJjZS1Ob3RpY2VHcm91cC1jaGVja291dCcgKTtcbiAgICAgICAgICAgIGlmICggISBzY3JvbGxFbGVtZW50Lmxlbmd0aCApIHtcbiAgICAgICAgICAgICAgICBzY3JvbGxFbGVtZW50ID0gJCggJy5mb3JtLmNoZWNrb3V0JyApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAkLnNjcm9sbF90b19ub3RpY2VzKCBzY3JvbGxFbGVtZW50ICk7XG4gICAgICAgIH0sXG4gICAgICAgIGhpZGVBZGRyZXNzRmllbGRzOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAkKCAnLndvb2NvbW1lcmNlLWJpbGxpbmctZmllbGRzX19maWVsZC13cmFwcGVyLCAud29vY29tbWVyY2Utc2hpcHBpbmctZmllbGRzJyApLmhpZGUoKTtcbiAgICAgICAgfSxcbiAgICAgICAgc2hvd0FkZHJlc3NGaWVsZHM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICQoICcud29vY29tbWVyY2UtYmlsbGluZy1maWVsZHNfX2ZpZWxkLXdyYXBwZXIsIC53b29jb21tZXJjZS1zaGlwcGluZy1maWVsZHMnICkuc2hvdygpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgICQoZG9jdW1lbnQpLnJlYWR5KCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHdjX3NiX2NoZWNrb3V0LmluaXQoICQoIFwiZm9ybS5jaGVja291dCwgZm9ybSNvcmRlcl9yZXZpZXcsIGZvcm0jYWRkX3BheW1lbnRfbWV0aG9kXCIgKSApO1xuICAgIH0gKTtcbn0pO1xuXG4iXX0=
