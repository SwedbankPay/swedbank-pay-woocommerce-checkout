jQuery(function($){"use strict";window.wc_payex_checkout={js_url:null,paymentMenu:null,isPaymentMenuLoaded:!1,xhr:!1,init:function(e){this.form=e,this.form_submit=!1,$(this.form).on("click","#place_order",this.onSubmit).on("submit checkout_place_order_payex_checkout"),$(document.body).bind("update_checkout",this.onUpdateCheckout),$(document.body).on("checkout_error",this.resetCheckout),$(document.body).on("updated_checkout",this.onUpdatedCheckout),$(document.body).on("blur",this.onUpdatedCheckout),$(document.body).on("click","#change-shipping-info",function(){$("#change-shipping-info").hide(),wc_payex_checkout.showAddressFields()}),$(document.body).on("change","#checkin_country",function(){wc_payex_checkout.loadCheckIn($(this).val())}),wc_payex_checkout.isInstantCheckout()&&wc_payex_checkout.initInstantCheckout()},initInstantCheckout:function(){console.log("Initialization of Instant Checkout..."),wc_payex_checkout.isCheckinEnabled()&&wc_payex_checkout.hideAddressFields();let e=$("#payex-consumer-profile");if(e.length>0){let o=e.data("reference");console.log("Initiate consumerProfileRef",o),wc_payex_checkout.initCheckIn()}else wc_payex_checkout.initCheckIn()},loadCheckIn:function(e){return $.ajax({type:"POST",url:WC_Gateway_PayEx_Checkout.ajax_url,data:{action:"sb_checkin",nonce:WC_Gateway_PayEx_Checkout.nonce,country:e},dataType:"json"}).done(function(e){if(!e.success)return wc_payex_checkout.logError("payex-checkin-loader",e),void alert(e.details);window.hasOwnProperty("payex")&&window.payex.hasOwnProperty("hostedView")&&void 0!==window.payex.hostedView.consumer&&window.payex.hostedView.consumer().close(),$("script[src*='px.consumer.client']").remove(),$("#payex-checkin iframe").remove(),wc_payex_checkout.loadJs(e.data,function(){wc_payex_checkout.initCheckIn()})})},initCheckIn:function(){"undefined"!=typeof payex&&wc_payex_checkout.waitForLoading("payex.hostedView.consumer",function(e){e?console.warn(e):window.payex.hostedView.consumer({container:"payex-checkin",culture:WC_Gateway_PayEx_Checkout.culture,style:WC_Gateway_PayEx_Checkout.checkInStyle?JSON.parse(WC_Gateway_PayEx_Checkout.checkInStyle):null,onConsumerIdentified:function(e){console.log("hostedView: onConsumerIdentified"),wc_payex_checkout.onConsumerIdentified(e)},onNewConsumer:function(e){console.log("hostedView: onNewConsumer"),wc_payex_checkout.onConsumerIdentified(e)},onConsumerRemoved:function(e){console.log("hostedView: onConsumerRemoved")},onBillingDetailsAvailable:function(e){wc_payex_checkout.onAddressDetailsAvailable("billing",e)},onShippingDetailsAvailable:function(e){(WC_Gateway_PayEx_Checkout.needs_shipping_address||WC_Gateway_PayEx_Checkout.ship_to_billing_address_only)&&wc_payex_checkout.onAddressDetailsAvailable("billing",e),wc_payex_checkout.onAddressDetailsAvailable("shipping",e)},onError:function(e){wc_payex_checkout.logError("payex-checkin",e),alert(e.details),wc_payex_checkout.onError(e.details)}}).open()})},initCheckout:function(e){$("#change-shipping-info").show(),wc_payex_checkout.form.find(".payex_customer_reference").remove(),wc_payex_checkout.form.append("<input type='hidden' class='payex_customer_reference' name='payex_customer_reference' value='"+e+"'/>"),wc_payex_checkout.onSubmit()},isInstantCheckout:()=>WC_Gateway_PayEx_Checkout.instant_checkout,isCheckinEnabled:()=>WC_Gateway_PayEx_Checkout.checkin,isPaymentMethodChosen:function(){return $("#payment_method_payex_checkout").is(":checked")},block:function(){1!==wc_payex_checkout.form.data()["blockUI.isBlocked"]&&wc_payex_checkout.form.block({message:null,overlayCSS:{background:"#fff",opacity:.6}})},unblock:function(){wc_payex_checkout.form.unblock()},onClose:function(){wc_payex_checkout.unblock()},onReady:function(){console.log("Ready")},onUpdateCheckout:function(){if(console.log("onUpdateCheckout"),!wc_payex_checkout.isInstantCheckout())return!1},onUpdatedCheckout:function(){return console.log("onUpdatedCheckout"),!!wc_payex_checkout.isInstantCheckout()&&(!wc_payex_checkout.form.is(".processing")&&(wc_payex_checkout.validateForm()?($(".woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message").remove(),void wc_payex_checkout.updateOrder()):(console.log("onUpdatedCheckout: Validation is failed"),!1)))},onSubmit:function(e){return!!wc_payex_checkout.form_submit||(!wc_payex_checkout.isPaymentMethodChosen()||(void 0!==e&&e.preventDefault(),!!wc_payex_checkout.validateForm()&&(console.log("onSubmit"),!wc_payex_checkout.form.is(".processing")&&($(".woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message").remove(),wc_payex_checkout.form.addClass("processing"),wc_payex_checkout.block(),wc_payex_checkout.placeOrder().always(function(e){wc_payex_checkout.form.removeClass("processing"),wc_payex_checkout.unblock()}).fail(function(e,o){wc_payex_checkout.onError(o)}).done(function(e){if(console.log(e),"success"!==e.result)return e.hasOwnProperty("reload")&&!0===e.reload?void window.location.reload():(!0===e.result.refresh&&$(document.body).trigger("update_checkout"),void wc_payex_checkout.onError(e.messages));wc_payex_checkout.js_url=e.js_url,wc_payex_checkout.initPaymentJS(wc_payex_checkout.js_url)}),!1))))},resetCheckout:function(){wc_payex_checkout.form_submit=!1},validateForm:function(){var e,o=!0;return(e=$("#ship-to-different-address-checkbox").is(":checked")?$(".woocommerce-billing-fields .validate-required, .woocommerce-shipping-fields .validate-required").find("input, select").not($("#account_password, #account_username")):$(".woocommerce-billing-fields .validate-required").find("input, select").not($("#account_password, #account_username"))).length&&e.each(function(){var e=$(this),c=e.closest(".form-row"),t=c.is(".validate-required"),n=c.is(".validate-email");(t&&("checkbox"!==e.attr("type")||e.is(":checked")?""===e.val()&&(o=!1):o=!1),n)&&(e.val()&&(new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i).test(e.val())||(o=!1)))}),o},waitForLoading:function(var_string,callback){try{var obj=eval(var_string)}catch(e){return void callback(e)}let attempts=0,timer=window.setInterval(function(){void 0!==obj?(window.clearInterval(timer),callback(null,obj)):++attempts>=120&&(window.clearInterval(timer),callback("Timeout"))},500)},loadJs:function(e,o){let c=document.createElement("script");c.setAttribute("src",e),c.setAttribute("type","text/javascript"),c.setAttribute("async",""),c.addEventListener("load",function(){o()},!1);let t=document.getElementsByTagName("head")[0];return t&&t.appendChild(c),c},initPaymentJS:function(e,o){void 0===o&&(o=function(){}),window.hasOwnProperty("payex")&&window.payex.hasOwnProperty("hostedView")&&(void 0!==window.payex.hostedView.paymentMenu&&window.payex.hostedView.paymentMenu().close(),$("#payment-payex-checkout iframe").remove()),$("script[src*='px.paymentmenu.client']").remove(),wc_payex_checkout.loadJs(e,function(){$("#payment-payex-checkout iframe").remove(),wc_payex_checkout.isInstantCheckout()?($("#payment").hide(),wc_payex_checkout.initPaymentMenu("payment-payex-checkout")):$.featherlight('<div id="payex-paymentmenu">&nbsp;</div>',{variant:"featherlight-payex",persist:!0,closeOnClick:!1,closeOnEsc:!1,afterOpen:function(){wc_payex_checkout.initPaymentMenu("payex-paymentmenu")},afterClose:function(){wc_payex_checkout.form.removeClass("processing").unblock()}}),o()})},initPaymentMenu:function(e,o){console.log("initPaymentMenu"),void 0===o&&(o=function(){}),this.paymentMenu=window.payex.hostedView.paymentMenu({container:e,culture:WC_Gateway_PayEx_Checkout.culture,style:WC_Gateway_PayEx_Checkout.paymentMenuStyle?JSON.parse(WC_Gateway_PayEx_Checkout.paymentMenuStyle):null,onApplicationConfigured:function(e){console.log("onApplicationConfigured"),console.log(e),wc_payex_checkout.isPaymentMenuLoaded=!0,o(null)},onPaymentMenuInstrumentSelected:function(e){console.log("onPaymentMenuInstrumentSelected"),console.log(e),wc_payex_checkout.onPaymentMenuInstrumentSelected(e.name,e.instrument)},onPaymentCreated:function(){console.log("onPaymentCreated")},onPaymentCompleted:function(e){console.log("onPaymentCompleted"),console.log(e),self.location.href=e.redirectUrl},onPaymentCanceled:function(e){console.log("onPaymentCanceled"),console.log(e),wc_payex_checkout.logError("payment-menu-cancel",e)},onPaymentFailed:function(e){console.log("onPaymentFailed"),console.log(e),wc_payex_checkout.logError("payment-menu-failed",e)},onError:function(e){wc_payex_checkout.logError("payment-menu-error",e),o(e)}}),this.paymentMenu.open()},refreshPaymentMenu:function(){console.log("refreshPaymentMenu"),void 0!==this.paymentMenu&&this.paymentMenu&&this.paymentMenu.hasOwnProperty("refresh")&&"function"==typeof this.paymentMenu.refresh?this.paymentMenu.refresh():console.warn("refreshPaymentMenu: refresh workaround")},placeOrder:function(){console.log("placeOrder");let e=$(".woocommerce-checkout").serialize();return $.ajax({type:"POST",url:WC_Gateway_PayEx_Checkout.ajax_url,data:{action:"payex_place_order",nonce:WC_Gateway_PayEx_Checkout.nonce,data:e},dataType:"json"}).done(function(e){e.hasOwnProperty("reload")&&!0===e.reload?window.location.reload():e.hasOwnProperty("result")&&"failure"===e.result&&(wc_payex_checkout.logError("payex-place-order",e),wc_payex_checkout.onError(e.messages))})},updateOrder:function(e){console.log("updateOrder");let o=$(".woocommerce-checkout").serialize();return void 0===e&&(e=!1),o+="&compatibility="+e,wc_payex_checkout.form.addClass("processing"),wc_payex_checkout.block(),wc_payex_checkout.xhr&&wc_payex_checkout.xhr.abort(),wc_payex_checkout.xhr=$.ajax({type:"POST",url:WC_Gateway_PayEx_Checkout.ajax_url,data:{action:"payex_update_order",nonce:WC_Gateway_PayEx_Checkout.nonce,data:o},dataType:"json"}).always(function(e){wc_payex_checkout.xhr=!1,wc_payex_checkout.form.removeClass("processing"),wc_payex_checkout.unblock()}).fail(function(e,o){console.log("updateOrder error:"+o),wc_payex_checkout.onError(o)}).done(function(o){return console.log(o),o.hasOwnProperty("result")&&"success"===o.result?(wc_payex_checkout.js_url=o.js_url,void wc_payex_checkout.refreshPaymentMenu()):o.hasOwnProperty("result")&&"failure"===o.result&&o.messages.indexOf("Order update is not available.")>-1&&!e?(console.warn("refreshPaymentMenu: refresh workaround. Force reload."),void wc_payex_checkout.updateOrder(!0).done(function(e){e.hasOwnProperty("js_url")&&wc_payex_checkout.initPaymentJS(e.js_url)})):void(o.hasOwnProperty("reload")&&!0===o.reload?window.location.reload():(!0===o.result.refresh&&$(document.body).trigger("update_checkout"),wc_payex_checkout.logError("payex-update-order",o),wc_payex_checkout.onError(o.messages)))}),wc_payex_checkout.xhr},onConsumerIdentified:function(e){return console.log("onConsumerIdentified",e),$("#change-shipping-info").show(),$.ajax({type:"POST",url:WC_Gateway_PayEx_Checkout.ajax_url,data:{action:"payex_checkout_customer_profile",nonce:WC_Gateway_PayEx_Checkout.nonce,consumerProfileRef:e.consumerProfileRef},dataType:"json"}).always(function(e){}).done(function(o){console.log(o),o.success?wc_payex_checkout.initCheckout(e.consumerProfileRef):alert(o.data.message)})},onAddressDetailsAvailable:function(e,o){return console.log("onAddressDetailsAvailable",e,o),$("#change-shipping-info").show(),wc_payex_checkout.block(),$.ajax({type:"POST",url:WC_Gateway_PayEx_Checkout.ajax_url,data:{action:"payex_checkout_get_address",nonce:WC_Gateway_PayEx_Checkout.nonce,type:e,url:o.url},dataType:"json"}).always(function(e){wc_payex_checkout.unblock()}).done(function(o){if(console.log(o),!o.success)return wc_payex_checkout.logError("payex-address-details",o),void alert(o.data.message);let c=o.data;$.each(c,function(o,c){[e].forEach(function(e){let t=$('input[name="'+e+"_"+o+'"]');if(0!==t.length&&(t.prop("readonly",!1),t.closest(".form-row").removeClass("payex-locked"),t.val(c).change(),"country"===o||"state"===o)){let t=$("#"+e+"_"+o);void 0!==window.Select2?t.select2("val",c):void 0!==$.fn.chosen?t.val(c).trigger("chosen:updated"):t.change()}})}),$(document.body).trigger("update_checkout")})},onPaymentMenuInstrumentSelected:function(e,o){console.log("onPaymentMenuInstrumentSelected",e,o),$(document.body).trigger("sb_payment_menu_instrument_selected",[e,o])},logError:function(e,o){return console.warn(o),$.ajax({type:"POST",url:WC_Gateway_PayEx_Checkout.ajax_url,data:{action:"payex_checkout_log_error",nonce:WC_Gateway_PayEx_Checkout.nonce,id:e,data:JSON.stringify(o)},dataType:"json"})},onError:function(e){console.log("onError",e),wc_payex_checkout.submit_error('<div class="woocommerce-error">'+e+"</div>")},submit_error:function(e){$(".woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message").remove(),wc_payex_checkout.form.prepend('<div class="woocommerce-NoticeGroup woocommerce-NoticeGroup-checkout">'+e+"</div>"),wc_payex_checkout.form.removeClass("processing").unblock(),wc_payex_checkout.form.find(".input-text, select, input:checkbox").trigger("validate").blur(),wc_payex_checkout.scroll_to_notices(),$(document.body).trigger("checkout_error")},scroll_to_notices:function(){let e=$(".woocommerce-NoticeGroup-updateOrderReview, .woocommerce-NoticeGroup-checkout");e.length||(e=$(".form.checkout")),$.scroll_to_notices(e)},hideAddressFields:function(){$(".woocommerce-billing-fields__field-wrapper, .woocommerce-shipping-fields").hide()},showAddressFields:function(){$(".woocommerce-billing-fields__field-wrapper, .woocommerce-shipping-fields").show()}},$(document).ready(function(){wc_payex_checkout.init($("form.checkout, form#order_review, form#add_payment_method"))})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
