jQuery(function($){"use strict";window.wc_payex_checkout={js_url:null,paymentMenu:null,isPaymentMenuLoaded:!1,xhr:!1,init:function(e){this.form=e,this.form_submit=!1,$(this.form).on("click","#place_order",this.onSubmit).on("submit checkout_place_order_payex_checkout"),$(document.body).bind("update_checkout",this.onUpdateCheckout),$(document.body).on("checkout_error",this.resetCheckout),$(document.body).on("updated_checkout",this.onUpdatedCheckout),$(document.body).on("blur",this.onUpdatedCheckout),$(document.body).on("click","#change-shipping-info",function(){$("#change-shipping-info").hide(),wc_payex_checkout.showAddressFields()}),$(document.body).on("change","#checkin_country",function(){wc_payex_checkout.loadCheckIn($(this).val())}),wc_payex_checkout.isInstantCheckout()&&wc_payex_checkout.initInstantCheckout()},initInstantCheckout:function(){console.log("Initialization of Instant Checkout..."),wc_payex_checkout.isCheckinEnabled()&&wc_payex_checkout.hideAddressFields();let e=$("#payex-consumer-profile");if(e.length>0){let o=e.data("reference");console.log("Initiate consumerProfileRef",o),wc_payex_checkout.initCheckout(o)}else wc_payex_checkout.initCheckIn()},loadCheckIn:function(e){return $.ajax({type:"POST",url:WC_Gateway_PayEx_Checkout.ajax_url,data:{action:"sb_checkin",nonce:WC_Gateway_PayEx_Checkout.nonce,country:e},dataType:"json"}).done(function(e){if(!e.success)return wc_payex_checkout.logError("payex-checkin-loader",e),void alert(e.details);window.hasOwnProperty("payex")&&window.payex.hasOwnProperty("hostedView")&&void 0!==window.payex.hostedView.consumer&&window.payex.hostedView.consumer().close(),$("script[src*='px.consumer.client']").remove(),$("#payex-checkin iframe").remove(),wc_payex_checkout.loadJs(e.data,function(){wc_payex_checkout.initCheckIn()})})},initCheckIn:function(){"undefined"!=typeof payex&&wc_payex_checkout.waitForLoading("payex.hostedView.consumer",function(e){e?console.warn(e):window.payex.hostedView.consumer({container:"payex-checkin",culture:WC_Gateway_PayEx_Checkout.culture,style:WC_Gateway_PayEx_Checkout.checkInStyle?JSON.parse(WC_Gateway_PayEx_Checkout.checkInStyle):null,onConsumerIdentified:function(e){console.log("hostedView: onConsumerIdentified"),wc_payex_checkout.onConsumerIdentified(e)},onBillingDetailsAvailable:function(e){wc_payex_checkout.onAddressDetailsAvailable("billing",e)},onShippingDetailsAvailable:function(e){wc_payex_checkout.onAddressDetailsAvailable("shipping",e)},onError:function(e){wc_payex_checkout.logError("payex-checkin",e),alert(e.details)}}).open()})},initCheckout:function(e){$("#change-shipping-info").show(),wc_payex_checkout.form.find(".payex_customer_reference").remove(),wc_payex_checkout.form.append("<input type='hidden' class='payex_customer_reference' name='payex_customer_reference' value='"+e+"'/>"),wc_payex_checkout.onSubmit()},isInstantCheckout:()=>WC_Gateway_PayEx_Checkout.instant_checkout,isCheckinEnabled:()=>WC_Gateway_PayEx_Checkout.checkin,isPaymentMethodChosen:function(){return $("#payment_method_payex_checkout").is(":checked")},block:function(){1!==wc_payex_checkout.form.data()["blockUI.isBlocked"]&&wc_payex_checkout.form.block({message:null,overlayCSS:{background:"#fff",opacity:.6}})},unblock:function(){wc_payex_checkout.form.unblock()},onClose:function(){wc_payex_checkout.unblock()},onReady:function(){console.log("Ready")},onUpdateCheckout:function(){if(console.log("onUpdateCheckout"),!wc_payex_checkout.isInstantCheckout())return!1},onUpdatedCheckout:function(){return console.log("onUpdatedCheckout"),!!wc_payex_checkout.isInstantCheckout()&&(!wc_payex_checkout.form.is(".processing")&&(wc_payex_checkout.validateForm()?(wc_payex_checkout.xhr&&wc_payex_checkout.xhr.abort(),$(".woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message").remove(),wc_payex_checkout.form.addClass("processing"),wc_payex_checkout.block(),void(wc_payex_checkout.xhr=wc_payex_checkout.updateOrder().always(function(e){wc_payex_checkout.form.removeClass("processing"),wc_payex_checkout.unblock()}).fail(function(e,o){console.log("updateOrder error:"+o),wc_payex_checkout.onError(o)}).done(function(e){if(console.log(e),this.xhr=!1,"success"!==e.result)return!0===e.result.reload?void window.location.reload():(!0===e.result.refresh&&$(document.body).trigger("update_checkout"),void wc_payex_checkout.onError(e.messages));wc_payex_checkout.js_url=e.js_url,wc_payex_checkout.refreshPaymentMenu()}))):(console.log("onUpdatedCheckout: Validation is failed"),!1)))},onSubmit:function(e){return!!wc_payex_checkout.form_submit||(!wc_payex_checkout.isPaymentMethodChosen()||(void 0!==e&&e.preventDefault(),!!wc_payex_checkout.validateForm()&&(console.log("onSubmit"),!wc_payex_checkout.form.is(".processing")&&($(".woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message").remove(),wc_payex_checkout.form.addClass("processing"),wc_payex_checkout.block(),wc_payex_checkout.placeOrder().always(function(e){wc_payex_checkout.form.removeClass("processing"),wc_payex_checkout.unblock()}).fail(function(e,o){wc_payex_checkout.onError(o)}).done(function(e){if(console.log(e),"success"!==e.result)return!0===e.result.reload?void window.location.reload():(!0===e.result.refresh&&$(document.body).trigger("update_checkout"),void wc_payex_checkout.onError(e.messages));wc_payex_checkout.js_url=e.js_url,wc_payex_checkout.initPaymentJS(wc_payex_checkout.js_url)}),!1))))},resetCheckout:function(){wc_payex_checkout.form_submit=!1},validateForm:function(){var e,o=!0;return(e=$("#ship-to-different-address-checkbox").is(":checked")?$(".woocommerce-billing-fields .validate-required, .woocommerce-shipping-fields .validate-required").find("input, select").not($("#account_password, #account_username")):$(".woocommerce-billing-fields .validate-required").find("input, select").not($("#account_password, #account_username"))).length&&e.each(function(){var e=$(this),c=e.closest(".form-row"),t=c.is(".validate-required"),n=c.is(".validate-email");(t&&("checkbox"!==e.attr("type")||e.is(":checked")?""===e.val()&&(o=!1):o=!1),n)&&(e.val()&&(new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i).test(e.val())||(o=!1)))}),o},waitForLoading:function(var_string,callback){try{var obj=eval(var_string)}catch(e){return void callback(e)}let attempts=0,timer=window.setInterval(function(){void 0!==obj?(window.clearInterval(timer),callback(null,obj)):++attempts>=120&&(window.clearInterval(timer),callback("Timeout"))},500)},loadJs:function(e,o){console.log("Loading of "+e);let c=document.createElement("script");c.setAttribute("src",e),c.setAttribute("type","text/javascript"),c.setAttribute("async",""),c.addEventListener("load",function(){console.log("Loaded: "+e),o()},!1);let t=document.getElementsByTagName("head")[0];return t&&t.appendChild(c),c},initPaymentJS:function(e,o){void 0===o&&(o=function(){}),window.hasOwnProperty("payex")&&window.payex.hasOwnProperty("hostedView")&&(void 0!==window.payex.hostedView.paymentMenu&&window.payex.hostedView.paymentMenu().close(),$("#payment-payex-checkout iframe").remove()),$("script[src*='px.paymentmenu.client']").remove(),wc_payex_checkout.loadJs(e,function(){$("#payment-payex-checkout iframe").remove(),wc_payex_checkout.isInstantCheckout()?($("#payment").hide(),wc_payex_checkout.initPaymentMenu("payment-payex-checkout")):$.featherlight('<div id="payex-paymentmenu">&nbsp;</div>',{variant:"featherlight-payex",persist:!0,closeOnClick:!1,closeOnEsc:!1,afterOpen:function(){wc_payex_checkout.initPaymentMenu("payex-paymentmenu")},afterClose:function(){wc_payex_checkout.form.removeClass("processing").unblock()}}),o()})},initPaymentMenu:function(e,o){console.log("initPaymentMenu"),void 0===o&&(o=function(){}),this.paymentMenu=window.payex.hostedView.paymentMenu({container:e,culture:WC_Gateway_PayEx_Checkout.culture,style:WC_Gateway_PayEx_Checkout.paymentMenuStyle?JSON.parse(WC_Gateway_PayEx_Checkout.paymentMenuStyle):null,onApplicationConfigured:function(e){console.log("onApplicationConfigured"),console.log(e),wc_payex_checkout.isPaymentMenuLoaded=!0,o(null)},onPaymentMenuInstrumentSelected:function(e){console.log("onPaymentMenuInstrumentSelected"),console.log(e),wc_payex_checkout.onPaymentMenuInstrumentSelected(e.name,e.instrument)},onPaymentCreated:function(){console.log("onPaymentCreated")},onPaymentCompleted:function(e){console.log("onPaymentCompleted"),console.log(e),self.location.href=e.redirectUrl},onPaymentCanceled:function(e){console.log("onPaymentCanceled"),console.log(e),wc_payex_checkout.logError("payment-menu-cancel",e)},onPaymentFailed:function(e){console.log("onPaymentFailed"),console.log(e),wc_payex_checkout.logError("payment-menu-failed",e)},onError:function(e){wc_payex_checkout.logError("payment-menu-error",e),o(e)}}),this.paymentMenu.open()},refreshPaymentMenu:function(){console.log("refreshPaymentMenu"),wc_payex_checkout.initPaymentJS(wc_payex_checkout.js_url)},placeOrder:function(){console.log("placeOrder");let e=$(".woocommerce-checkout").serialize();return $.ajax({type:"POST",url:WC_Gateway_PayEx_Checkout.ajax_url,data:{action:"payex_place_order",nonce:WC_Gateway_PayEx_Checkout.nonce,data:e},dataType:"json"}).done(function(e){e.hasOwnProperty("result")&&"failure"===e.result&&wc_payex_checkout.logError("payex-place-order",e)})},updateOrder:function(){console.log("updateOrder");let e=$(".woocommerce-checkout").serialize();return $.ajax({type:"POST",url:WC_Gateway_PayEx_Checkout.ajax_url,data:{action:"payex_update_order",nonce:WC_Gateway_PayEx_Checkout.nonce,data:e},dataType:"json"}).done(function(e){e.hasOwnProperty("result")&&"failure"===e.result&&(e.messages.indexOf("Order update is not available.")>-1&&console.warn("refreshPaymentMenu: refresh workaround. Force reload."),wc_payex_checkout.logError("payex-update-order",e))})},onConsumerIdentified:function(e){return console.log("onConsumerIdentified",e),$("#change-shipping-info").show(),$.ajax({type:"POST",url:WC_Gateway_PayEx_Checkout.ajax_url,data:{action:"payex_checkout_customer_profile",nonce:WC_Gateway_PayEx_Checkout.nonce,consumerProfileRef:e.consumerProfileRef},dataType:"json"}).always(function(e){}).done(function(o){console.log(o),o.success?wc_payex_checkout.initCheckout(e.consumerProfileRef):alert(o.data.message)})},onAddressDetailsAvailable:function(e,o){return console.log("onAddressDetailsAvailable",e,o),$("#change-shipping-info").show(),$.ajax({type:"POST",url:WC_Gateway_PayEx_Checkout.ajax_url,data:{action:"payex_checkout_get_address",nonce:WC_Gateway_PayEx_Checkout.nonce,type:e,url:o.url},dataType:"json"}).always(function(e){}).done(function(o){if(console.log(o),!o.success)return wc_payex_checkout.logError("payex-address-details",o),void alert(o.data.message);let c=o.data;$.each(c,function(o,c){[e].forEach(function(e){let t=$('input[name="'+e+"_"+o+'"]');if(0!==t.length&&(t.prop("readonly",!1),t.closest(".form-row").removeClass("payex-locked"),t.val(c).change(),"country"===o||"state"===o)){let t=$("#"+e+"_"+o);void 0!==window.Select2?t.select2("val",c):void 0!==$.fn.chosen?t.val(c).trigger("chosen:updated"):t.change()}})}),$(document.body).trigger("update_checkout")})},onPaymentMenuInstrumentSelected:function(e,o){console.log("onPaymentMenuInstrumentSelected",e,o)},logError:function(e,o){return console.warn(o),$.ajax({type:"POST",url:WC_Gateway_PayEx_Checkout.ajax_url,data:{action:"payex_checkout_log_error",nonce:WC_Gateway_PayEx_Checkout.nonce,id:e,data:JSON.stringify(o)},dataType:"json"})},onError:function(e){console.log("onError",e)},submit_error:function(e){$(".woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message").remove(),wc_payex_checkout.form.prepend('<div class="woocommerce-NoticeGroup woocommerce-NoticeGroup-checkout">'+e+"</div>"),wc_payex_checkout.form.removeClass("processing").unblock(),wc_payex_checkout.form.find(".input-text, select, input:checkbox").trigger("validate").blur(),wc_payex_checkout.scroll_to_notices(),$(document.body).trigger("checkout_error")},scroll_to_notices:function(){let e=$(".woocommerce-NoticeGroup-updateOrderReview, .woocommerce-NoticeGroup-checkout");e.length||(e=$(".form.checkout")),$.scroll_to_notices(e)},hideAddressFields:function(){$(".woocommerce-billing-fields__field-wrapper, .woocommerce-shipping-fields").hide()},showAddressFields:function(){$(".woocommerce-billing-fields__field-wrapper, .woocommerce-shipping-fields").show()}},$(document).ready(function(){wc_payex_checkout.init($("form.checkout, form#order_review, form#add_payment_method"))})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrb3V0LmpzIl0sIm5hbWVzIjpbImpRdWVyeSIsIiQiLCJ3aW5kb3ciLCJ3Y19wYXlleF9jaGVja291dCIsImpzX3VybCIsInBheW1lbnRNZW51IiwiaXNQYXltZW50TWVudUxvYWRlZCIsInhociIsImluaXQiLCJmb3JtIiwidGhpcyIsImZvcm1fc3VibWl0Iiwib24iLCJvblN1Ym1pdCIsImRvY3VtZW50IiwiYm9keSIsImJpbmQiLCJvblVwZGF0ZUNoZWNrb3V0IiwicmVzZXRDaGVja291dCIsIm9uVXBkYXRlZENoZWNrb3V0IiwiaGlkZSIsInNob3dBZGRyZXNzRmllbGRzIiwibG9hZENoZWNrSW4iLCJ2YWwiLCJpc0luc3RhbnRDaGVja291dCIsImluaXRJbnN0YW50Q2hlY2tvdXQiLCJjb25zb2xlIiwibG9nIiwiaXNDaGVja2luRW5hYmxlZCIsImhpZGVBZGRyZXNzRmllbGRzIiwiY29uc3VtZXJQcm9maWxlRWxtIiwibGVuZ3RoIiwicmVmZXJlbmNlIiwiZGF0YSIsImluaXRDaGVja291dCIsImluaXRDaGVja0luIiwiY291bnRyeSIsImFqYXgiLCJ0eXBlIiwidXJsIiwiV0NfR2F0ZXdheV9QYXlFeF9DaGVja291dCIsImFqYXhfdXJsIiwiYWN0aW9uIiwibm9uY2UiLCJkYXRhVHlwZSIsImRvbmUiLCJzdWNjZXNzIiwibG9nRXJyb3IiLCJhbGVydCIsImRldGFpbHMiLCJoYXNPd25Qcm9wZXJ0eSIsInBheWV4IiwiaG9zdGVkVmlldyIsImNvbnN1bWVyIiwiY2xvc2UiLCJyZW1vdmUiLCJsb2FkSnMiLCJ3YWl0Rm9yTG9hZGluZyIsImVyciIsIndhcm4iLCJjb250YWluZXIiLCJjdWx0dXJlIiwic3R5bGUiLCJjaGVja0luU3R5bGUiLCJKU09OIiwicGFyc2UiLCJvbkNvbnN1bWVySWRlbnRpZmllZCIsIm9uQmlsbGluZ0RldGFpbHNBdmFpbGFibGUiLCJvbkFkZHJlc3NEZXRhaWxzQXZhaWxhYmxlIiwib25TaGlwcGluZ0RldGFpbHNBdmFpbGFibGUiLCJvbkVycm9yIiwib3BlbiIsInNob3ciLCJmaW5kIiwiYXBwZW5kIiwiaW5zdGFudF9jaGVja291dCIsImNoZWNraW4iLCJpc1BheW1lbnRNZXRob2RDaG9zZW4iLCJpcyIsImJsb2NrIiwibWVzc2FnZSIsIm92ZXJsYXlDU1MiLCJiYWNrZ3JvdW5kIiwib3BhY2l0eSIsInVuYmxvY2siLCJvbkNsb3NlIiwib25SZWFkeSIsInZhbGlkYXRlRm9ybSIsImFib3J0IiwiYWRkQ2xhc3MiLCJ1cGRhdGVPcmRlciIsImFsd2F5cyIsInJlc3BvbnNlIiwicmVtb3ZlQ2xhc3MiLCJmYWlsIiwianFYSFIiLCJ0ZXh0U3RhdHVzIiwicmVzdWx0IiwicmVsb2FkIiwibG9jYXRpb24iLCJyZWZyZXNoIiwidHJpZ2dlciIsIm1lc3NhZ2VzIiwicmVmcmVzaFBheW1lbnRNZW51IiwiZSIsInByZXZlbnREZWZhdWx0IiwicGxhY2VPcmRlciIsImluaXRQYXltZW50SlMiLCIkcmVxdWlyZWRfaW5wdXRzIiwidmFsaWRhdGVkIiwibm90IiwiZWFjaCIsIiR0aGlzIiwiJHBhcmVudCIsImNsb3Nlc3QiLCJ2YWxpZGF0ZV9yZXF1aXJlZCIsInZhbGlkYXRlX2VtYWlsIiwiYXR0ciIsIlJlZ0V4cCIsInRlc3QiLCJ2YXJfc3RyaW5nIiwiY2FsbGJhY2siLCJvYmoiLCJldmFsIiwiYXR0ZW1wdHMiLCJ0aW1lciIsInNldEludGVydmFsIiwiY2xlYXJJbnRlcnZhbCIsImpzIiwic2NyaXB0IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJvSGVhZCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiYXBwZW5kQ2hpbGQiLCJpbml0UGF5bWVudE1lbnUiLCJmZWF0aGVybGlnaHQiLCJ2YXJpYW50IiwicGVyc2lzdCIsImNsb3NlT25DbGljayIsImNsb3NlT25Fc2MiLCJhZnRlck9wZW4iLCJhZnRlckNsb3NlIiwiaWQiLCJwYXltZW50TWVudVN0eWxlIiwib25BcHBsaWNhdGlvbkNvbmZpZ3VyZWQiLCJvblBheW1lbnRNZW51SW5zdHJ1bWVudFNlbGVjdGVkIiwibmFtZSIsImluc3RydW1lbnQiLCJvblBheW1lbnRDcmVhdGVkIiwib25QYXltZW50Q29tcGxldGVkIiwic2VsZiIsImhyZWYiLCJyZWRpcmVjdFVybCIsIm9uUGF5bWVudENhbmNlbGVkIiwib25QYXltZW50RmFpbGVkIiwiZmllbGRzIiwic2VyaWFsaXplIiwiaW5kZXhPZiIsImNvbnN1bWVyUHJvZmlsZVJlZiIsImtleSIsInZhbHVlIiwiZm9yRWFjaCIsInNlY3Rpb24iLCJlbCIsInByb3AiLCJjaGFuZ2UiLCJlbDEiLCJTZWxlY3QyIiwic2VsZWN0MiIsImZuIiwiY2hvc2VuIiwic3RyaW5naWZ5Iiwic3VibWl0X2Vycm9yIiwiZXJyb3JfbWVzc2FnZSIsInByZXBlbmQiLCJibHVyIiwic2Nyb2xsX3RvX25vdGljZXMiLCJzY3JvbGxFbGVtZW50IiwicmVhZHkiXSwibWFwcGluZ3MiOiJBQUNBQSxPQUFRLFNBQVVDLEdBQ2QsYUFLQUMsT0FBT0Msa0JBQW9CLENBQ3ZCQyxPQUFRLEtBQ1JDLFlBQWEsS0FDYkMscUJBQXFCLEVBQ3JCQyxLQUFLLEVBS0xDLEtBQU0sU0FBVUMsR0FDWkMsS0FBS0QsS0FBZUEsRUFDcEJDLEtBQUtDLGFBQWUsRUFFcEJWLEVBQUdTLEtBQUtELE1BR0hHLEdBQUksUUFBUyxlQUFnQkYsS0FBS0csVUFHbENELEdBQUksOENBRVRYLEVBQUdhLFNBQVNDLE1BQU9DLEtBQU0sa0JBQW1CTixLQUFLTyxrQkFDakRoQixFQUFHYSxTQUFTQyxNQUFPSCxHQUFJLGlCQUFrQkYsS0FBS1EsZUFDOUNqQixFQUFHYSxTQUFTQyxNQUFPSCxHQUFJLG1CQUFvQkYsS0FBS1MsbUJBQ2hEbEIsRUFBR2EsU0FBU0MsTUFBT0gsR0FBSSxPQUFRRixLQUFLUyxtQkFFcENsQixFQUFHYSxTQUFTQyxNQUFPSCxHQUFJLFFBQVMsd0JBQXlCLFdBRXJEWCxFQUFHLHlCQUEwQm1CLE9BRzdCakIsa0JBQWtCa0Isc0JBR3RCcEIsRUFBR2EsU0FBU0MsTUFBT0gsR0FBSSxTQUFVLG1CQUFvQixXQUNqRFQsa0JBQWtCbUIsWUFBYXJCLEVBQUVTLE1BQU1hLFNBSXRDcEIsa0JBQWtCcUIscUJBQ25CckIsa0JBQWtCc0IsdUJBTzFCQSxvQkFBcUIsV0FDakJDLFFBQVFDLElBQUsseUNBRVJ4QixrQkFBa0J5QixvQkFDbkJ6QixrQkFBa0IwQixvQkFJdEIsSUFBSUMsRUFBcUI3QixFQUFHLDJCQUM1QixHQUFLNkIsRUFBbUJDLE9BQVMsRUFBSSxDQUNqQyxJQUFJQyxFQUFZRixFQUFtQkcsS0FBTSxhQUN6Q1AsUUFBUUMsSUFBSyw4QkFBK0JLLEdBQzVDN0Isa0JBQWtCK0IsYUFBY0YsUUFJaEM3QixrQkFBa0JnQyxlQVMxQmIsWUFBYSxTQUFVYyxHQUNuQixPQUFPbkMsRUFBRW9DLEtBQU0sQ0FDWEMsS0FBTSxPQUNOQyxJQUFLQywwQkFBMEJDLFNBQy9CUixLQUFNLENBQ0ZTLE9BQVEsYUFDUkMsTUFBT0gsMEJBQTBCRyxNQUNqQ1AsUUFBU0EsR0FFYlEsU0FBVSxTQUNWQyxLQUFNLFNBQVdaLEdBQ2pCLElBQU9BLEVBQUthLFFBR1IsT0FGQTNDLGtCQUFrQjRDLFNBQVUsdUJBQXdCZCxRQUNwRGUsTUFBT2YsRUFBS2dCLFNBS1gvQyxPQUFPZ0QsZUFBZ0IsVUFBYWhELE9BQU9pRCxNQUFNRCxlQUFnQixvQkFDakIsSUFBckNoRCxPQUFPaUQsTUFBTUMsV0FBV0MsVUFDaENuRCxPQUFPaUQsTUFBTUMsV0FBV0MsV0FBV0MsUUFLM0NyRCxFQUFHLHFDQUFzQ3NELFNBQ3pDdEQsRUFBRyx5QkFBMEJzRCxTQUM3QnBELGtCQUFrQnFELE9BQVF2QixFQUFLQSxLQUFNLFdBQ2pDOUIsa0JBQWtCZ0MsbUJBUTlCQSxZQUFhLFdBQ2Esb0JBQVZnQixPQUlaaEQsa0JBQWtCc0QsZUFBZSw0QkFBNkIsU0FBV0MsR0FDaEVBLEVBQ0RoQyxRQUFRaUMsS0FBTUQsR0FLbEJ4RCxPQUFPaUQsTUFBTUMsV0FBV0MsU0FBVSxDQUM5Qk8sVUFBVyxnQkFDWEMsUUFBU3JCLDBCQUEwQnFCLFFBQ25DQyxNQUFPdEIsMEJBQTBCdUIsYUFBZUMsS0FBS0MsTUFBT3pCLDBCQUEwQnVCLGNBQWlCLEtBQ3ZHRyxxQkFBc0IsU0FBVWpDLEdBQzVCUCxRQUFRQyxJQUFLLG9DQUNieEIsa0JBQWtCK0QscUJBQXNCakMsSUFFNUNrQywwQkFBMkIsU0FBVWxDLEdBQ2pDOUIsa0JBQWtCaUUsMEJBQTJCLFVBQVduQyxJQUU1RG9DLDJCQUE0QixTQUFVcEMsR0FDbEM5QixrQkFBa0JpRSwwQkFBMkIsV0FBWW5DLElBRTdEcUMsUUFBUyxTQUFXckMsR0FDaEI5QixrQkFBa0I0QyxTQUFVLGdCQUFpQmQsR0FDN0NlLE1BQU9mLEVBQUtnQixZQUdoQnNCLFVBSVpyQyxhQUFjLFNBQVVGLEdBRXBCL0IsRUFBRyx5QkFBMEJ1RSxPQUU3QnJFLGtCQUFrQk0sS0FBS2dFLEtBQU0sNkJBQThCbEIsU0FDM0RwRCxrQkFBa0JNLEtBQUtpRSxPQUFRLGdHQUFrRzFDLEVBQVksT0FHN0k3QixrQkFBa0JVLFlBR3RCVyxrQkFBaUIsSUFDTmdCLDBCQUEwQm1DLGlCQUdyQy9DLGlCQUFnQixJQUNMWSwwQkFBMEJvQyxRQUdyQ0Msc0JBQXVCLFdBQ25CLE9BQU81RSxFQUFHLGtDQUFtQzZFLEdBQUksYUFHckRDLE1BQU8sV0FFRSxJQURXNUUsa0JBQWtCTSxLQUFLd0IsT0FDbEIsc0JBQ2pCOUIsa0JBQWtCTSxLQUFLc0UsTUFBTSxDQUN6QkMsUUFBUyxLQUNUQyxXQUFZLENBQ1JDLFdBQVksT0FDWkMsUUFBUyxPQU16QkMsUUFBUyxXQUNMakYsa0JBQWtCTSxLQUFLMkUsV0FHM0JDLFFBQVMsV0FDTGxGLGtCQUFrQmlGLFdBR3RCRSxRQUFTLFdBQ0w1RCxRQUFRQyxJQUFLLFVBR2pCVixpQkFBa0IsV0FHZCxHQUZBUyxRQUFRQyxJQUFLLHFCQUVOeEIsa0JBQWtCcUIsb0JBQ3JCLE9BQU8sR0FNZkwsa0JBQW1CLFdBR2YsT0FGQU8sUUFBUUMsSUFBSyx1QkFFTnhCLGtCQUFrQnFCLHVCQUlwQnJCLGtCQUFrQk0sS0FBS3FFLEdBQUksaUJBSXpCM0Usa0JBQWtCb0YsZ0JBS3BCcEYsa0JBQWtCSSxLQUNuQkosa0JBQWtCSSxJQUFJaUYsUUFHMUJ2RixFQUFHLCtFQUFnRnNELFNBQ25GcEQsa0JBQWtCTSxLQUFLZ0YsU0FBVSxjQUNqQ3RGLGtCQUFrQjRFLGFBRWxCNUUsa0JBQWtCSSxJQUFNSixrQkFBa0J1RixjQUNyQ0MsT0FBUSxTQUFXQyxHQUNoQnpGLGtCQUFrQk0sS0FBS29GLFlBQWEsY0FDcEMxRixrQkFBa0JpRixZQUVyQlUsS0FBTSxTQUFVQyxFQUFPQyxHQUNwQnRFLFFBQVFDLElBQUsscUJBQXVCcUUsR0FDcEM3RixrQkFBa0JtRSxRQUFTMEIsS0FFOUJuRCxLQUFNLFNBQVcrQyxHQUlkLEdBSEFsRSxRQUFRQyxJQUFLaUUsR0FDYmxGLEtBQUtILEtBQU0sRUFFYSxZQUFwQnFGLEVBQVNLLE9BRVQsT0FBSyxJQUFTTCxFQUFTSyxPQUFPQyxZQUMxQmhHLE9BQU9pRyxTQUFTRCxXQUtmLElBQVNOLEVBQVNLLE9BQU9HLFNBQzFCbkcsRUFBR2EsU0FBU0MsTUFBT3NGLFFBQVMsd0JBR2hDbEcsa0JBQWtCbUUsUUFBU3NCLEVBQVNVLFdBTXhDbkcsa0JBQWtCQyxPQUFTd0YsRUFBaUIsT0FDNUN6RixrQkFBa0JvRywwQkE1Q3RCN0UsUUFBUUMsSUFBSyw0Q0FDTixNQStDZmQsU0FBVSxTQUFVMkYsR0FDaEIsUUFBS3JHLGtCQUFrQlEsZUFJbEJSLGtCQUFrQjBFLCtCQUNELElBQU4yQixHQUNSQSxFQUFFQyxtQkFHQ3RHLGtCQUFrQm9GLGlCQUl6QjdELFFBQVFDLElBQUssYUFFUnhCLGtCQUFrQk0sS0FBS3FFLEdBQUksaUJBSWhDN0UsRUFBRywrRUFBZ0ZzRCxTQUNuRnBELGtCQUFrQk0sS0FBS2dGLFNBQVUsY0FDakN0RixrQkFBa0I0RSxRQUNsQjVFLGtCQUFrQnVHLGFBQ2JmLE9BQVEsU0FBV0MsR0FDaEJ6RixrQkFBa0JNLEtBQUtvRixZQUFhLGNBQ3BDMUYsa0JBQWtCaUYsWUFFckJVLEtBQU0sU0FBVUMsRUFBT0MsR0FDcEI3RixrQkFBa0JtRSxRQUFTMEIsS0FFOUJuRCxLQUFNLFNBQVcrQyxHQUVkLEdBREFsRSxRQUFRQyxJQUFLaUUsR0FDWSxZQUFwQkEsRUFBU0ssT0FFVixPQUFLLElBQVNMLEVBQVNLLE9BQU9DLFlBQzFCaEcsT0FBT2lHLFNBQVNELFdBS2YsSUFBU04sRUFBU0ssT0FBT0csU0FDMUJuRyxFQUFHYSxTQUFTQyxNQUFPc0YsUUFBUyx3QkFHaENsRyxrQkFBa0JtRSxRQUFTc0IsRUFBU1UsV0FLeENuRyxrQkFBa0JDLE9BQVN3RixFQUFpQixPQUM1Q3pGLGtCQUFrQndHLGNBQWV4RyxrQkFBa0JDLFdBR3BELE9BTWZjLGNBQWUsV0FDWGYsa0JBQWtCUSxhQUFjLEdBR3BDNEUsYUFBYyxXQUNWLElBQUlxQixFQUNBQyxHQUFZLEVBb0NoQixPQWhDSUQsRUFEQzNHLEVBQUcsdUNBQXdDNkUsR0FBSSxZQUM3QjdFLEVBQUcsbUdBQW9Hd0UsS0FBSyxpQkFBaUJxQyxJQUFLN0csRUFBRyx5Q0FFcklBLEVBQUcsa0RBQW1Ed0UsS0FBSyxpQkFBaUJxQyxJQUFLN0csRUFBRywwQ0FHckY4QixRQUNsQjZFLEVBQWlCRyxLQUFNLFdBQ25CLElBQUlDLEVBQVEvRyxFQUFHUyxNQUNYdUcsRUFBb0JELEVBQU1FLFFBQVMsYUFDbkNDLEVBQW9CRixFQUFRbkMsR0FBSSxzQkFDaENzQyxFQUFvQkgsRUFBUW5DLEdBQUksb0JBRS9CcUMsSUFDSSxhQUFlSCxFQUFNSyxLQUFNLFNBQWNMLEVBQU1sQyxHQUFJLFlBRTVCLEtBQWhCa0MsRUFBTXpGLFFBQ2RzRixHQUFZLEdBRlpBLEdBQVksR0FNZk8sS0FDSUosRUFBTXpGLFFBRU8sSUFBSStGLE9BQU8sODRCQUNWQyxLQUFNUCxFQUFNekYsU0FDdkJzRixHQUFZLE9BT3pCQSxHQUdYcEQsZUFBZ0IsU0FBVytELFdBQVlDLFVBQ25DLElBQ0ksSUFBSUMsSUFBTUMsS0FBTUgsWUFDbEIsTUFBT2hCLEdBRUwsWUFEQWlCLFNBQVVqQixHQUlkLElBQUlvQixTQUFXLEVBQ1hDLE1BQVEzSCxPQUFPNEgsWUFBYSxnQkFDUixJQUFSSixLQUNSeEgsT0FBTzZILGNBQWVGLE9BQ3RCSixTQUFVLEtBQU1DLFFBRWhCRSxVQUNpQixNQUNiMUgsT0FBTzZILGNBQWVGLE9BQ3RCSixTQUFVLGFBR25CLE1BUVBqRSxPQUFRLFNBQVd3RSxFQUFJUCxHQUNuQi9GLFFBQVFDLElBQUssY0FBZ0JxRyxHQUU3QixJQUFJQyxFQUFTbkgsU0FBU29ILGNBQWUsVUFHckNELEVBQU9FLGFBQWMsTUFBT0gsR0FDNUJDLEVBQU9FLGFBQWMsT0FBUSxtQkFDN0JGLEVBQU9FLGFBQWMsUUFBUyxJQUM5QkYsRUFBT0csaUJBQWtCLE9BQVEsV0FDN0IxRyxRQUFRQyxJQUFLLFdBQWFxRyxHQUMxQlAsTUFDRCxHQUdILElBQUlZLEVBQVF2SCxTQUFTd0gscUJBQXNCLFFBQVMsR0FNcEQsT0FMS0QsR0FFREEsRUFBTUUsWUFBYU4sR0FHaEJBLEdBUVh0QixjQUFlLFNBQVdwRSxFQUFLa0YsUUFDRixJQUFiQSxJQUNSQSxFQUFXLGNBSVZ2SCxPQUFPZ0QsZUFBZ0IsVUFBYWhELE9BQU9pRCxNQUFNRCxlQUFnQixxQkFDZCxJQUF4Q2hELE9BQU9pRCxNQUFNQyxXQUFXL0MsYUFDaENILE9BQU9pRCxNQUFNQyxXQUFXL0MsY0FBY2lELFFBRzFDckQsRUFBRyxrQ0FBbUNzRCxVQUsxQ3RELEVBQUcsd0NBQXlDc0QsU0FHNUNwRCxrQkFBa0JxRCxPQUFRakIsRUFBSyxXQUMzQnRDLEVBQUcsa0NBQW1Dc0QsU0FHakNwRCxrQkFBa0JxQixxQkFDbkJ2QixFQUFFLFlBQVltQixPQUNkakIsa0JBQWtCcUksZ0JBQWdCLDJCQUVsQ3ZJLEVBQUV3SSxhQUFjLDJDQUE0QyxDQUN4REMsUUFBUyxxQkFDVEMsU0FBUyxFQUNUQyxjQUFjLEVBQ2RDLFlBQVksRUFDWkMsVUFBVyxXQUNQM0ksa0JBQWtCcUksZ0JBQWdCLHNCQUV0Q08sV0FBWSxXQUNSNUksa0JBQWtCTSxLQUFLb0YsWUFBYSxjQUFlVCxhQUsvRHFDLE9BV1JlLGdCQUFpQixTQUFXUSxFQUFJdkIsR0FDNUIvRixRQUFRQyxJQUFLLHdCQUVZLElBQWI4RixJQUNSQSxFQUFXLGNBSWYvRyxLQUFLTCxZQUFjSCxPQUFPaUQsTUFBTUMsV0FBVy9DLFlBQWEsQ0FDcER1RCxVQUFXb0YsRUFDWG5GLFFBQVNyQiwwQkFBMEJxQixRQUNuQ0MsTUFBT3RCLDBCQUEwQnlHLGlCQUFtQmpGLEtBQUtDLE1BQU96QiwwQkFBMEJ5RyxrQkFBcUIsS0FDL0dDLHdCQUF5QixTQUFVakgsR0FDL0JQLFFBQVFDLElBQUssMkJBQ2JELFFBQVFDLElBQUtNLEdBQ2I5QixrQkFBa0JHLHFCQUFzQixFQUN4Q21ILEVBQVUsT0FFZDBCLGdDQUFpQyxTQUFXbEgsR0FDeENQLFFBQVFDLElBQUssbUNBQ2JELFFBQVFDLElBQUtNLEdBQ2I5QixrQkFBa0JnSixnQ0FBaUNsSCxFQUFLbUgsS0FBTW5ILEVBQUtvSCxhQUV2RUMsaUJBQWtCLFdBQ2Q1SCxRQUFRQyxJQUFLLHFCQUVqQjRILG1CQUFvQixTQUFXdEgsR0FDM0JQLFFBQVFDLElBQUssc0JBQ2JELFFBQVFDLElBQUtNLEdBQ2J1SCxLQUFLckQsU0FBU3NELEtBQU94SCxFQUFLeUgsYUFFOUJDLGtCQUFtQixTQUFXMUgsR0FDMUJQLFFBQVFDLElBQUsscUJBQ2JELFFBQVFDLElBQUtNLEdBQ2I5QixrQkFBa0I0QyxTQUFVLHNCQUF1QmQsSUFFdkQySCxnQkFBaUIsU0FBVzNILEdBQ3hCUCxRQUFRQyxJQUFLLG1CQUNiRCxRQUFRQyxJQUFLTSxHQUNiOUIsa0JBQWtCNEMsU0FBVSxzQkFBdUJkLElBR3ZEcUMsUUFBUyxTQUFXckMsR0FDaEI5QixrQkFBa0I0QyxTQUFVLHFCQUFzQmQsR0FDbER3RixFQUFVeEYsTUFJbEJ2QixLQUFLTCxZQUFZa0UsUUFNckJnQyxtQkFBb0IsV0FDaEI3RSxRQUFRQyxJQUFLLHNCQVNieEIsa0JBQWtCd0csY0FBZXhHLGtCQUFrQkMsU0FPdkRzRyxXQUFZLFdBQ1JoRixRQUFRQyxJQUFLLGNBQ2IsSUFBSWtJLEVBQVM1SixFQUFFLHlCQUF5QjZKLFlBRXhDLE9BQU83SixFQUFFb0MsS0FBTSxDQUNYQyxLQUFNLE9BQ05DLElBQUtDLDBCQUEwQkMsU0FDL0JSLEtBQU0sQ0FDRlMsT0FBUSxvQkFDUkMsTUFBT0gsMEJBQTBCRyxNQUNqQ1YsS0FBTTRILEdBRVZqSCxTQUFVLFNBQ1ZDLEtBQU0sU0FBVytDLEdBQ2JBLEVBQVMxQyxlQUFlLFdBQWlDLFlBQXBCMEMsRUFBU0ssUUFDOUM5RixrQkFBa0I0QyxTQUFTLG9CQUFxQjZDLE1BUzVERixZQUFhLFdBQ1RoRSxRQUFRQyxJQUFLLGVBQ2IsSUFBSWtJLEVBQVM1SixFQUFFLHlCQUF5QjZKLFlBRXhDLE9BQU83SixFQUFFb0MsS0FBTSxDQUNYQyxLQUFNLE9BQ05DLElBQUtDLDBCQUEwQkMsU0FDL0JSLEtBQU0sQ0FDRlMsT0FBUSxxQkFDUkMsTUFBT0gsMEJBQTBCRyxNQUNqQ1YsS0FBTTRILEdBRVZqSCxTQUFVLFNBQ1ZDLEtBQU0sU0FBVytDLEdBQ2JBLEVBQVMxQyxlQUFlLFdBQWlDLFlBQXBCMEMsRUFBU0ssU0FDMUNMLEVBQVNVLFNBQVN5RCxRQUFRLG1DQUFxQyxHQUUvRHJJLFFBQVFpQyxLQUFNLHlEQUlsQnhELGtCQUFrQjRDLFNBQVMscUJBQXNCNkMsT0FVN0QxQixxQkFBc0IsU0FBV2pDLEdBSTdCLE9BSEFQLFFBQVFDLElBQUssdUJBQXdCTSxHQUNyQ2hDLEVBQUcseUJBQTBCdUUsT0FFdEJ2RSxFQUFFb0MsS0FBTSxDQUNYQyxLQUFNLE9BQ05DLElBQUtDLDBCQUEwQkMsU0FDL0JSLEtBQU0sQ0FDRlMsT0FBUSxrQ0FDUkMsTUFBT0gsMEJBQTBCRyxNQUNqQ3FILG1CQUFvQi9ILEVBQUsrSCxvQkFFN0JwSCxTQUFVLFNBQ1YrQyxPQUFRLFNBQVdDLE1BRW5CL0MsS0FBTSxTQUFXK0MsR0FDakJsRSxRQUFRQyxJQUFJaUUsR0FDUEEsRUFBUzlDLFFBTWQzQyxrQkFBa0IrQixhQUFjRCxFQUFLK0gsb0JBTGpDaEgsTUFBTTRDLEVBQVMzRCxLQUFLK0MsWUFlaENaLDBCQUEyQixTQUFVOUIsRUFBTUwsR0FLdkMsT0FKQVAsUUFBUUMsSUFBSyw0QkFBNkJXLEVBQU1MLEdBRWhEaEMsRUFBRyx5QkFBMEJ1RSxPQUV0QnZFLEVBQUVvQyxLQUFNLENBQ1hDLEtBQU0sT0FDTkMsSUFBS0MsMEJBQTBCQyxTQUMvQlIsS0FBTSxDQUNGUyxPQUFRLDZCQUNSQyxNQUFPSCwwQkFBMEJHLE1BQ2pDTCxLQUFNQSxFQUNOQyxJQUFLTixFQUFLTSxLQUVkSyxTQUFVLFNBQ1YrQyxPQUFRLFNBQVdDLE1BRW5CL0MsS0FBTSxTQUFXK0MsR0FFakIsR0FEQWxFLFFBQVFDLElBQUlpRSxJQUNQQSxFQUFTOUMsUUFHVixPQUZBM0Msa0JBQWtCNEMsU0FBUyx3QkFBeUI2QyxRQUNwRDVDLE1BQU00QyxFQUFTM0QsS0FBSytDLFNBS3hCLElBQUkvQyxFQUFPMkQsRUFBUzNELEtBQ3BCaEMsRUFBRThHLEtBQUs5RSxFQUFNLFNBQVVnSSxFQUFLQyxHQUN4QixDQUFDNUgsR0FBTTZILFFBQVEsU0FBU0MsR0FDcEIsSUFBSUMsRUFBS3BLLEVBQUUsZUFBaUJtSyxFQUFVLElBQU1ILEVBQU0sTUFDbEQsR0FBa0IsSUFBZEksRUFBR3RJLFNBSVBzSSxFQUFHQyxLQUFLLFlBQVksR0FDcEJELEVBQUduRCxRQUFRLGFBQWFyQixZQUFZLGdCQUNwQ3dFLEVBQUc5SSxJQUFJMkksR0FBT0ssU0FFRixZQUFSTixHQUE2QixVQUFSQSxHQUFpQixDQUN0QyxJQUFJTyxFQUFNdkssRUFBRSxJQUFNbUssRUFBVSxJQUFNSCxRQUNKLElBQW5CL0osT0FBT3VLLFFBQ2RELEVBQUlFLFFBQVEsTUFBT1IsUUFDVyxJQUFoQmpLLEVBQUUwSyxHQUFHQyxPQUVuQkosRUFBSWpKLElBQUkySSxHQUFPN0QsUUFBUSxrQkFHdkJtRSxFQUFJRCxjQU1wQnRLLEVBQUdhLFNBQVNDLE1BQU9zRixRQUFTLHNCQVNwQzhDLGdDQUFpQyxTQUFXQyxFQUFNQyxHQUM5QzNILFFBQVFDLElBQUssa0NBQW1DeUgsRUFBTUMsSUFVMUR0RyxTQUFVLFNBQVdpRyxFQUFJL0csR0FHckIsT0FGQVAsUUFBUWlDLEtBQU0xQixHQUVQaEMsRUFBRW9DLEtBQU0sQ0FDWEMsS0FBTSxPQUNOQyxJQUFLQywwQkFBMEJDLFNBQy9CUixLQUFNLENBQ0ZTLE9BQVEsMkJBQ1JDLE1BQU9ILDBCQUEwQkcsTUFDakNxRyxHQUFJQSxFQUNKL0csS0FBTStCLEtBQUs2RyxVQUFXNUksSUFFMUJXLFNBQVUsVUFJbEIwQixRQUFTLFNBQVdyQyxHQUNoQlAsUUFBUUMsSUFBSyxVQUFXTSxJQUc1QjZJLGFBQWMsU0FBVUMsR0FDcEI5SyxFQUFHLCtFQUFnRnNELFNBQ25GcEQsa0JBQWtCTSxLQUFLdUssUUFBUyx5RUFBMkVELEVBQWdCLFVBQzNINUssa0JBQWtCTSxLQUFLb0YsWUFBYSxjQUFlVCxVQUNuRGpGLGtCQUFrQk0sS0FBS2dFLEtBQU0sdUNBQXdDNEIsUUFBUyxZQUFhNEUsT0FDM0Y5SyxrQkFBa0IrSyxvQkFDbEJqTCxFQUFHYSxTQUFTQyxNQUFPc0YsUUFBUyxtQkFFaEM2RSxrQkFBbUIsV0FDZixJQUFJQyxFQUFnQmxMLEVBQUcsaUZBQ2hCa0wsRUFBY3BKLFNBQ2pCb0osRUFBZ0JsTCxFQUFHLG1CQUd2QkEsRUFBRWlMLGtCQUFtQkMsSUFFekJ0SixrQkFBbUIsV0FDZjVCLEVBQUcsNEVBQTZFbUIsUUFFcEZDLGtCQUFtQixXQUNmcEIsRUFBRyw0RUFBNkV1RSxTQUl4RnZFLEVBQUVhLFVBQVVzSyxNQUFPLFdBQ2ZqTCxrQkFBa0JLLEtBQU1QLEVBQUciLCJmaWxlIjoiY2hlY2tvdXQubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFsIHdjX2NoZWNrb3V0X3BhcmFtcyAqL1xualF1ZXJ5KCBmdW5jdGlvbiggJCApIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICAvKipcbiAgICAgKiBPYmplY3QgdG8gaGFuZGxlIFBheUV4IGNoZWNrb3V0IHBheW1lbnQgZm9ybXMuXG4gICAgICovXG4gICAgd2luZG93LndjX3BheWV4X2NoZWNrb3V0ID0ge1xuICAgICAgICBqc191cmw6IG51bGwsXG4gICAgICAgIHBheW1lbnRNZW51OiBudWxsLFxuICAgICAgICBpc1BheW1lbnRNZW51TG9hZGVkOiBmYWxzZSxcbiAgICAgICAgeGhyOiBmYWxzZSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogSW5pdGlhbGl6ZSBlIGhhbmRsZXJzIGFuZCBVSSBzdGF0ZS5cbiAgICAgICAgICovXG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uKCBmb3JtICkge1xuICAgICAgICAgICAgdGhpcy5mb3JtICAgICAgICAgPSBmb3JtO1xuICAgICAgICAgICAgdGhpcy5mb3JtX3N1Ym1pdCAgPSBmYWxzZTtcblxuICAgICAgICAgICAgJCggdGhpcy5mb3JtIClcbiAgICAgICAgICAgIC8vIFdlIG5lZWQgdG8gYmluZCBkaXJlY3RseSB0byB0aGUgY2xpY2sgKGFuZCBub3QgY2hlY2tvdXRfcGxhY2Vfb3JkZXJfcGF5ZXhfY2hlY2tvdXQpIHRvIGF2b2lkIHBvcHVwIGJsb2NrZXJzXG4gICAgICAgICAgICAvLyBlc3BlY2lhbGx5IG9uIG1vYmlsZSBkZXZpY2VzIChsaWtlIG9uIENocm9tZSBmb3IgaU9TKSBmcm9tIGJsb2NraW5nIHBheWV4X2NoZWNrb3V0KHBheW1lbnRfaWQsIHt9LCAnb3BlbicpOyBmcm9tIG9wZW5pbmcgYSB0YWJcbiAgICAgICAgICAgICAgICAub24oICdjbGljaycsICcjcGxhY2Vfb3JkZXInLCB0aGlzLm9uU3VibWl0IClcblxuICAgICAgICAgICAgICAgIC8vIFdvb0NvbW1lcmNlIGxldHMgdXMgcmV0dXJuIGEgZmFsc2Ugb24gY2hlY2tvdXRfcGxhY2Vfb3JkZXJfe2dhdGV3YXl9IHRvIGtlZXAgdGhlIGZvcm0gZnJvbSBzdWJtaXR0aW5nXG4gICAgICAgICAgICAgICAgLm9uKCAnc3VibWl0IGNoZWNrb3V0X3BsYWNlX29yZGVyX3BheWV4X2NoZWNrb3V0JyApO1xuXG4gICAgICAgICAgICAkKCBkb2N1bWVudC5ib2R5ICkuYmluZCggJ3VwZGF0ZV9jaGVja291dCcsIHRoaXMub25VcGRhdGVDaGVja291dCApO1xuICAgICAgICAgICAgJCggZG9jdW1lbnQuYm9keSApLm9uKCAnY2hlY2tvdXRfZXJyb3InLCB0aGlzLnJlc2V0Q2hlY2tvdXQgKTtcbiAgICAgICAgICAgICQoIGRvY3VtZW50LmJvZHkgKS5vbiggJ3VwZGF0ZWRfY2hlY2tvdXQnLCB0aGlzLm9uVXBkYXRlZENoZWNrb3V0ICk7XG4gICAgICAgICAgICAkKCBkb2N1bWVudC5ib2R5ICkub24oICdibHVyJywgdGhpcy5vblVwZGF0ZWRDaGVja291dCApO1xuXG4gICAgICAgICAgICAkKCBkb2N1bWVudC5ib2R5ICkub24oICdjbGljaycsICcjY2hhbmdlLXNoaXBwaW5nLWluZm8nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgLy8gSGlkZSBcIkNoYW5nZSBzaGlwcGluZyBpbmZvXCIgYnV0dG9uXG4gICAgICAgICAgICAgICAgJCggJyNjaGFuZ2Utc2hpcHBpbmctaW5mbycgKS5oaWRlKCk7XG5cbiAgICAgICAgICAgICAgICAvLyBTaG93IEFkZHJlc3MgRmllbGRzXG4gICAgICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQuc2hvd0FkZHJlc3NGaWVsZHMoKTtcbiAgICAgICAgICAgIH0gKTtcblxuICAgICAgICAgICAgJCggZG9jdW1lbnQuYm9keSApLm9uKCAnY2hhbmdlJywgJyNjaGVja2luX2NvdW50cnknLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQubG9hZENoZWNrSW4oICQodGhpcykudmFsKCkgKTtcbiAgICAgICAgICAgIH0gKTtcblxuICAgICAgICAgICAgLy8gSW5pdGlhbGl6ZSBJbnN0YW50IENoZWNrb3V0XG4gICAgICAgICAgICBpZiAoIHdjX3BheWV4X2NoZWNrb3V0LmlzSW5zdGFudENoZWNrb3V0KCkgKSB7XG4gICAgICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQuaW5pdEluc3RhbnRDaGVja291dCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBJbml0aWFsaXplIEluc3RhbnQgQ2hlY2tvdXRcbiAgICAgICAgICovXG4gICAgICAgIGluaXRJbnN0YW50Q2hlY2tvdXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCAnSW5pdGlhbGl6YXRpb24gb2YgSW5zdGFudCBDaGVja291dC4uLicgKTtcblxuICAgICAgICAgICAgaWYgKCB3Y19wYXlleF9jaGVja291dC5pc0NoZWNraW5FbmFibGVkKCkgKSB7XG4gICAgICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQuaGlkZUFkZHJlc3NGaWVsZHMoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gVXNlIHNhdmVkIGNvbnN1bWVyUHJvZmlsZVJlZlxuICAgICAgICAgICAgbGV0IGNvbnN1bWVyUHJvZmlsZUVsbSA9ICQoICcjcGF5ZXgtY29uc3VtZXItcHJvZmlsZScgKTtcbiAgICAgICAgICAgIGlmICggY29uc3VtZXJQcm9maWxlRWxtLmxlbmd0aCA+IDAgKSB7XG4gICAgICAgICAgICAgICAgbGV0IHJlZmVyZW5jZSA9IGNvbnN1bWVyUHJvZmlsZUVsbS5kYXRhKCAncmVmZXJlbmNlJyApO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCAnSW5pdGlhdGUgY29uc3VtZXJQcm9maWxlUmVmJywgcmVmZXJlbmNlICk7XG4gICAgICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQuaW5pdENoZWNrb3V0KCByZWZlcmVuY2UgKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gSW5pdGlhdGUgY2hlY2tpblxuXG4gICAgICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQuaW5pdENoZWNrSW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogTG9hZCBDaGVja0luXG4gICAgICAgICAqIEBwYXJhbSBjb3VudHJ5XG4gICAgICAgICAqIEByZXR1cm5zIHsqfVxuICAgICAgICAgKi9cbiAgICAgICAgbG9hZENoZWNrSW46IGZ1bmN0aW9uKCBjb3VudHJ5ICkge1xuICAgICAgICAgICAgcmV0dXJuICQuYWpheCgge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdQT1NUJyxcbiAgICAgICAgICAgICAgICB1cmw6IFdDX0dhdGV3YXlfUGF5RXhfQ2hlY2tvdXQuYWpheF91cmwsXG4gICAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgICAgICBhY3Rpb246ICdzYl9jaGVja2luJyxcbiAgICAgICAgICAgICAgICAgICAgbm9uY2U6IFdDX0dhdGV3YXlfUGF5RXhfQ2hlY2tvdXQubm9uY2UsXG4gICAgICAgICAgICAgICAgICAgIGNvdW50cnk6IGNvdW50cnlcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiAnanNvbidcbiAgICAgICAgICAgIH0gKS5kb25lKCBmdW5jdGlvbiAoIGRhdGEgKSB7XG4gICAgICAgICAgICAgICAgaWYgKCAhIGRhdGEuc3VjY2VzcyApIHtcbiAgICAgICAgICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQubG9nRXJyb3IoICdwYXlleC1jaGVja2luLWxvYWRlcicsIGRhdGEgKTtcbiAgICAgICAgICAgICAgICAgICAgYWxlcnQoIGRhdGEuZGV0YWlscyApO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gRGVzdHJveVxuICAgICAgICAgICAgICAgIGlmICggd2luZG93Lmhhc093blByb3BlcnR5KCAncGF5ZXgnICkgJiYgd2luZG93LnBheWV4Lmhhc093blByb3BlcnR5KCAnaG9zdGVkVmlldycgKSApIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCB0eXBlb2Ygd2luZG93LnBheWV4Lmhvc3RlZFZpZXcuY29uc3VtZXIgIT09ICd1bmRlZmluZWQnICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LnBheWV4Lmhvc3RlZFZpZXcuY29uc3VtZXIoKS5jbG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gRGVzdHJveSBKU1xuICAgICAgICAgICAgICAgICQoIFwic2NyaXB0W3NyYyo9J3B4LmNvbnN1bWVyLmNsaWVudCddXCIgKS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAkKCAnI3BheWV4LWNoZWNraW4gaWZyYW1lJyApLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgIHdjX3BheWV4X2NoZWNrb3V0LmxvYWRKcyggZGF0YS5kYXRhLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHdjX3BheWV4X2NoZWNrb3V0LmluaXRDaGVja0luKCk7XG4gICAgICAgICAgICAgICAgfSApO1xuICAgICAgICAgICAgfSApO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBJbml0aWFsaXplIENoZWNrSW5cbiAgICAgICAgICovXG4gICAgICAgIGluaXRDaGVja0luOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmICggdHlwZW9mIHBheWV4ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQud2FpdEZvckxvYWRpbmcoJ3BheWV4Lmhvc3RlZFZpZXcuY29uc3VtZXInLCBmdW5jdGlvbiAoIGVyciApIHtcbiAgICAgICAgICAgICAgICBpZiAoIGVyciApIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCBlcnIgKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vIEluaXQgUGF5RXggaG9zdGVkVmlld1xuICAgICAgICAgICAgICAgIHdpbmRvdy5wYXlleC5ob3N0ZWRWaWV3LmNvbnN1bWVyKCB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lcjogJ3BheWV4LWNoZWNraW4nLFxuICAgICAgICAgICAgICAgICAgICBjdWx0dXJlOiBXQ19HYXRld2F5X1BheUV4X0NoZWNrb3V0LmN1bHR1cmUsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlOiBXQ19HYXRld2F5X1BheUV4X0NoZWNrb3V0LmNoZWNrSW5TdHlsZSA/IEpTT04ucGFyc2UoIFdDX0dhdGV3YXlfUGF5RXhfQ2hlY2tvdXQuY2hlY2tJblN0eWxlICkgOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICBvbkNvbnN1bWVySWRlbnRpZmllZDogZnVuY3Rpb24oIGRhdGEgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyggJ2hvc3RlZFZpZXc6IG9uQ29uc3VtZXJJZGVudGlmaWVkJyApO1xuICAgICAgICAgICAgICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQub25Db25zdW1lcklkZW50aWZpZWQoIGRhdGEgKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgb25CaWxsaW5nRGV0YWlsc0F2YWlsYWJsZTogZnVuY3Rpb24oIGRhdGEgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3Y19wYXlleF9jaGVja291dC5vbkFkZHJlc3NEZXRhaWxzQXZhaWxhYmxlKCAnYmlsbGluZycsIGRhdGEgKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgb25TaGlwcGluZ0RldGFpbHNBdmFpbGFibGU6IGZ1bmN0aW9uKCBkYXRhICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQub25BZGRyZXNzRGV0YWlsc0F2YWlsYWJsZSggJ3NoaXBwaW5nJywgZGF0YSApO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBvbkVycm9yOiBmdW5jdGlvbiAoIGRhdGEgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3Y19wYXlleF9jaGVja291dC5sb2dFcnJvciggJ3BheWV4LWNoZWNraW4nLCBkYXRhICk7XG4gICAgICAgICAgICAgICAgICAgICAgICBhbGVydCggZGF0YS5kZXRhaWxzICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL3djX3BheWV4X2NoZWNrb3V0Lm9uRXJyb3IoIGRhdGEuZGV0YWlscyApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSApLm9wZW4oKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIGluaXRDaGVja291dDogZnVuY3Rpb24oIHJlZmVyZW5jZSApIHtcbiAgICAgICAgICAgIC8vIFNob3cgXCJDaGFuZ2Ugc2hpcHBpbmcgaW5mb1wiIGJ1dHRvblxuICAgICAgICAgICAgJCggJyNjaGFuZ2Utc2hpcHBpbmctaW5mbycgKS5zaG93KCk7XG5cbiAgICAgICAgICAgIHdjX3BheWV4X2NoZWNrb3V0LmZvcm0uZmluZCggJy5wYXlleF9jdXN0b21lcl9yZWZlcmVuY2UnICkucmVtb3ZlKCk7XG4gICAgICAgICAgICB3Y19wYXlleF9jaGVja291dC5mb3JtLmFwcGVuZCggXCI8aW5wdXQgdHlwZT0naGlkZGVuJyBjbGFzcz0ncGF5ZXhfY3VzdG9tZXJfcmVmZXJlbmNlJyBuYW1lPSdwYXlleF9jdXN0b21lcl9yZWZlcmVuY2UnIHZhbHVlPSdcIiArIHJlZmVyZW5jZSArIFwiJy8+XCIgKTtcblxuICAgICAgICAgICAgLy93Y19wYXlleF9jaGVja291dC5mb3JtLnN1Ym1pdCgpO1xuICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQub25TdWJtaXQoKTtcbiAgICAgICAgfSxcblxuICAgICAgICBpc0luc3RhbnRDaGVja291dCgpIHtcbiAgICAgICAgICAgIHJldHVybiBXQ19HYXRld2F5X1BheUV4X0NoZWNrb3V0Lmluc3RhbnRfY2hlY2tvdXQ7XG4gICAgICAgIH0sXG5cbiAgICAgICAgaXNDaGVja2luRW5hYmxlZCgpIHtcbiAgICAgICAgICAgIHJldHVybiBXQ19HYXRld2F5X1BheUV4X0NoZWNrb3V0LmNoZWNraW47XG4gICAgICAgIH0sXG5cbiAgICAgICAgaXNQYXltZW50TWV0aG9kQ2hvc2VuOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiAkKCAnI3BheW1lbnRfbWV0aG9kX3BheWV4X2NoZWNrb3V0JyApLmlzKCAnOmNoZWNrZWQnICk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgYmxvY2s6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgbGV0IGZvcm1fZGF0YSA9IHdjX3BheWV4X2NoZWNrb3V0LmZvcm0uZGF0YSgpO1xuICAgICAgICAgICAgaWYgKCAxICE9PSBmb3JtX2RhdGFbJ2Jsb2NrVUkuaXNCbG9ja2VkJ10gKSB7XG4gICAgICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQuZm9ybS5ibG9jayh7XG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG92ZXJsYXlDU1M6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICcjZmZmJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuNlxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgdW5ibG9jazogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB3Y19wYXlleF9jaGVja291dC5mb3JtLnVuYmxvY2soKTtcbiAgICAgICAgfSxcblxuICAgICAgICBvbkNsb3NlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHdjX3BheWV4X2NoZWNrb3V0LnVuYmxvY2soKTtcbiAgICAgICAgfSxcblxuICAgICAgICBvblJlYWR5OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCAnUmVhZHknICk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgb25VcGRhdGVDaGVja291dDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyggJ29uVXBkYXRlQ2hlY2tvdXQnICk7XG5cbiAgICAgICAgICAgIGlmICggISB3Y19wYXlleF9jaGVja291dC5pc0luc3RhbnRDaGVja291dCgpICkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gQHRvZG9cbiAgICAgICAgfSxcblxuICAgICAgICBvblVwZGF0ZWRDaGVja291dDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyggJ29uVXBkYXRlZENoZWNrb3V0JyApO1xuXG4gICAgICAgICAgICBpZiAoICEgd2NfcGF5ZXhfY2hlY2tvdXQuaXNJbnN0YW50Q2hlY2tvdXQoKSApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICggd2NfcGF5ZXhfY2hlY2tvdXQuZm9ybS5pcyggJy5wcm9jZXNzaW5nJyApICkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCAhIHdjX3BheWV4X2NoZWNrb3V0LnZhbGlkYXRlRm9ybSgpICkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCAnb25VcGRhdGVkQ2hlY2tvdXQ6IFZhbGlkYXRpb24gaXMgZmFpbGVkJyApO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCB3Y19wYXlleF9jaGVja291dC54aHIgKSB7XG4gICAgICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQueGhyLmFib3J0KCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICQoICcud29vY29tbWVyY2UtTm90aWNlR3JvdXAtY2hlY2tvdXQsIC53b29jb21tZXJjZS1lcnJvciwgLndvb2NvbW1lcmNlLW1lc3NhZ2UnICkucmVtb3ZlKCk7XG4gICAgICAgICAgICB3Y19wYXlleF9jaGVja291dC5mb3JtLmFkZENsYXNzKCAncHJvY2Vzc2luZycgKTtcbiAgICAgICAgICAgIHdjX3BheWV4X2NoZWNrb3V0LmJsb2NrKCk7XG5cbiAgICAgICAgICAgIHdjX3BheWV4X2NoZWNrb3V0LnhociA9IHdjX3BheWV4X2NoZWNrb3V0LnVwZGF0ZU9yZGVyKClcbiAgICAgICAgICAgICAgICAuYWx3YXlzKCBmdW5jdGlvbiAoIHJlc3BvbnNlICkge1xuICAgICAgICAgICAgICAgICAgICB3Y19wYXlleF9jaGVja291dC5mb3JtLnJlbW92ZUNsYXNzKCAncHJvY2Vzc2luZycgKTtcbiAgICAgICAgICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQudW5ibG9jaygpO1xuICAgICAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgICAgIC5mYWlsKCBmdW5jdGlvbigganFYSFIsIHRleHRTdGF0dXMgKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCAndXBkYXRlT3JkZXIgZXJyb3I6JyArIHRleHRTdGF0dXMgKTtcbiAgICAgICAgICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQub25FcnJvciggdGV4dFN0YXR1cyApO1xuICAgICAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgICAgIC5kb25lKCBmdW5jdGlvbiAoIHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCByZXNwb25zZSApO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnhociA9IGZhbHNlO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5yZXN1bHQgIT09ICdzdWNjZXNzJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gUmVsb2FkIHBhZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICggdHJ1ZSA9PT0gcmVzcG9uc2UucmVzdWx0LnJlbG9hZCApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBUcmlnZ2VyIHVwZGF0ZSBpbiBjYXNlIHdlIG5lZWQgYSBmcmVzaCBub25jZVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCB0cnVlID09PSByZXNwb25zZS5yZXN1bHQucmVmcmVzaCApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCBkb2N1bWVudC5ib2R5ICkudHJpZ2dlciggJ3VwZGF0ZV9jaGVja291dCcgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQub25FcnJvciggcmVzcG9uc2UubWVzc2FnZXMgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vd2NfcGF5ZXhfY2hlY2tvdXQuZm9ybS5zdWJtaXQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIC8vIFJlZnJlc2ggUGF5bWVudCBNZW51XG4gICAgICAgICAgICAgICAgICAgIHdjX3BheWV4X2NoZWNrb3V0LmpzX3VybCA9IHJlc3BvbnNlWydqc191cmwnXTtcbiAgICAgICAgICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQucmVmcmVzaFBheW1lbnRNZW51KCk7XG4gICAgICAgICAgICAgICAgfSApO1xuICAgICAgICB9LFxuXG4gICAgICAgIG9uU3VibWl0OiBmdW5jdGlvbiggZSApIHtcbiAgICAgICAgICAgIGlmICggd2NfcGF5ZXhfY2hlY2tvdXQuZm9ybV9zdWJtaXQgKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICggd2NfcGF5ZXhfY2hlY2tvdXQuaXNQYXltZW50TWV0aG9kQ2hvc2VuKCkgKSB7XG4gICAgICAgICAgICAgICAgaWYgKCB0eXBlb2YgZSAhPT0gJ3VuZGVmaW5lZCcgKSB7XG4gICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoICEgd2NfcGF5ZXhfY2hlY2tvdXQudmFsaWRhdGVGb3JtKCkgKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyggJ29uU3VibWl0JyApO1xuXG4gICAgICAgICAgICAgICAgaWYgKCB3Y19wYXlleF9jaGVja291dC5mb3JtLmlzKCAnLnByb2Nlc3NpbmcnICkgKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAkKCAnLndvb2NvbW1lcmNlLU5vdGljZUdyb3VwLWNoZWNrb3V0LCAud29vY29tbWVyY2UtZXJyb3IsIC53b29jb21tZXJjZS1tZXNzYWdlJyApLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgIHdjX3BheWV4X2NoZWNrb3V0LmZvcm0uYWRkQ2xhc3MoICdwcm9jZXNzaW5nJyApO1xuICAgICAgICAgICAgICAgIHdjX3BheWV4X2NoZWNrb3V0LmJsb2NrKCk7XG4gICAgICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQucGxhY2VPcmRlcigpXG4gICAgICAgICAgICAgICAgICAgIC5hbHdheXMoIGZ1bmN0aW9uICggcmVzcG9uc2UgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3Y19wYXlleF9jaGVja291dC5mb3JtLnJlbW92ZUNsYXNzKCAncHJvY2Vzc2luZycgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdjX3BheWV4X2NoZWNrb3V0LnVuYmxvY2soKTtcbiAgICAgICAgICAgICAgICAgICAgfSApXG4gICAgICAgICAgICAgICAgICAgIC5mYWlsKCBmdW5jdGlvbigganFYSFIsIHRleHRTdGF0dXMgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3Y19wYXlleF9jaGVja291dC5vbkVycm9yKCB0ZXh0U3RhdHVzICk7XG4gICAgICAgICAgICAgICAgICAgIH0gKVxuICAgICAgICAgICAgICAgICAgICAuZG9uZSggZnVuY3Rpb24gKCByZXNwb25zZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coIHJlc3BvbnNlICk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIHJlc3BvbnNlLnJlc3VsdCAhPT0gJ3N1Y2Nlc3MnICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFJlbG9hZCBwYWdlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCB0cnVlID09PSByZXNwb25zZS5yZXN1bHQucmVsb2FkICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBUcmlnZ2VyIHVwZGF0ZSBpbiBjYXNlIHdlIG5lZWQgYSBmcmVzaCBub25jZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICggdHJ1ZSA9PT0gcmVzcG9uc2UucmVzdWx0LnJlZnJlc2ggKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoIGRvY3VtZW50LmJvZHkgKS50cmlnZ2VyKCAndXBkYXRlX2NoZWNrb3V0JyApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdjX3BheWV4X2NoZWNrb3V0Lm9uRXJyb3IoIHJlc3BvbnNlLm1lc3NhZ2VzICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBMb2FkIFBheUV4IENoZWNrb3V0IGZyYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICB3Y19wYXlleF9jaGVja291dC5qc191cmwgPSByZXNwb25zZVsnanNfdXJsJ107XG4gICAgICAgICAgICAgICAgICAgICAgICB3Y19wYXlleF9jaGVja291dC5pbml0UGF5bWVudEpTKCB3Y19wYXlleF9jaGVja291dC5qc191cmwgKTtcbiAgICAgICAgICAgICAgICAgICAgfSApO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSxcblxuICAgICAgICByZXNldENoZWNrb3V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHdjX3BheWV4X2NoZWNrb3V0LmZvcm1fc3VibWl0ID0gZmFsc2U7XG4gICAgICAgIH0sXG5cbiAgICAgICAgdmFsaWRhdGVGb3JtOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgJHJlcXVpcmVkX2lucHV0cyxcbiAgICAgICAgICAgICAgICB2YWxpZGF0ZWQgPSB0cnVlO1xuXG4gICAgICAgICAgICAvLyBjaGVjayB0byBzZWUgaWYgd2UgbmVlZCB0byB2YWxpZGF0ZSBzaGlwcGluZyBhZGRyZXNzXG4gICAgICAgICAgICBpZiAoICQoICcjc2hpcC10by1kaWZmZXJlbnQtYWRkcmVzcy1jaGVja2JveCcgKS5pcyggJzpjaGVja2VkJyApICkge1xuICAgICAgICAgICAgICAgICRyZXF1aXJlZF9pbnB1dHMgPSAkKCAnLndvb2NvbW1lcmNlLWJpbGxpbmctZmllbGRzIC52YWxpZGF0ZS1yZXF1aXJlZCwgLndvb2NvbW1lcmNlLXNoaXBwaW5nLWZpZWxkcyAudmFsaWRhdGUtcmVxdWlyZWQnICkuZmluZCgnaW5wdXQsIHNlbGVjdCcpLm5vdCggJCggJyNhY2NvdW50X3Bhc3N3b3JkLCAjYWNjb3VudF91c2VybmFtZScgKSApO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAkcmVxdWlyZWRfaW5wdXRzID0gJCggJy53b29jb21tZXJjZS1iaWxsaW5nLWZpZWxkcyAudmFsaWRhdGUtcmVxdWlyZWQnICkuZmluZCgnaW5wdXQsIHNlbGVjdCcpLm5vdCggJCggJyNhY2NvdW50X3Bhc3N3b3JkLCAjYWNjb3VudF91c2VybmFtZScgKSApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoICRyZXF1aXJlZF9pbnB1dHMubGVuZ3RoICkge1xuICAgICAgICAgICAgICAgICRyZXF1aXJlZF9pbnB1dHMuZWFjaCggZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciAkdGhpcyA9ICQoIHRoaXMgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICRwYXJlbnQgICAgICAgICAgID0gJHRoaXMuY2xvc2VzdCggJy5mb3JtLXJvdycgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRlX3JlcXVpcmVkID0gJHBhcmVudC5pcyggJy52YWxpZGF0ZS1yZXF1aXJlZCcgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRlX2VtYWlsICAgID0gJHBhcmVudC5pcyggJy52YWxpZGF0ZS1lbWFpbCcgKTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoIHZhbGlkYXRlX3JlcXVpcmVkICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCAnY2hlY2tib3gnID09PSAkdGhpcy5hdHRyKCAndHlwZScgKSAmJiAhICR0aGlzLmlzKCAnOmNoZWNrZWQnICkgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCAkdGhpcy52YWwoKSA9PT0gJycgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBpZiAoIHZhbGlkYXRlX2VtYWlsICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCAkdGhpcy52YWwoKSApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8yODU1ODY1L2pxdWVyeS12YWxpZGF0ZS1lLW1haWwtYWRkcmVzcy1yZWdleCAqL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwYXR0ZXJuID0gbmV3IFJlZ0V4cCgvXigoKFthLXpdfFxcZHxbISNcXCQlJidcXCpcXCtcXC1cXC89XFw/XFxeX2B7XFx8fX5dfFtcXHUwMEEwLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRUZdKSsoXFwuKFthLXpdfFxcZHxbISNcXCQlJidcXCpcXCtcXC1cXC89XFw/XFxeX2B7XFx8fX5dfFtcXHUwMEEwLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRUZdKSspKil8KChcXHgyMikoKCgoXFx4MjB8XFx4MDkpKihcXHgwZFxceDBhKSk/KFxceDIwfFxceDA5KSspPygoW1xceDAxLVxceDA4XFx4MGJcXHgwY1xceDBlLVxceDFmXFx4N2ZdfFxceDIxfFtcXHgyMy1cXHg1Yl18W1xceDVkLVxceDdlXXxbXFx1MDBBMC1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkVGXSl8KFxcXFwoW1xceDAxLVxceDA5XFx4MGJcXHgwY1xceDBkLVxceDdmXXxbXFx1MDBBMC1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkVGXSkpKSkqKCgoXFx4MjB8XFx4MDkpKihcXHgwZFxceDBhKSk/KFxceDIwfFxceDA5KSspPyhcXHgyMikpKUAoKChbYS16XXxcXGR8W1xcdTAwQTAtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZFRl0pfCgoW2Etel18XFxkfFtcXHUwMEEwLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRUZdKShbYS16XXxcXGR8LXxcXC58X3x+fFtcXHUwMEEwLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRUZdKSooW2Etel18XFxkfFtcXHUwMEEwLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRUZdKSkpXFwuKSsoKFthLXpdfFtcXHUwMEEwLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRUZdKXwoKFthLXpdfFtcXHUwMEEwLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRUZdKShbYS16XXxcXGR8LXxcXC58X3x+fFtcXHUwMEEwLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRUZdKSooW2Etel18W1xcdTAwQTAtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZFRl0pKSlcXC4/JC9pKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoICEgcGF0dGVybi50ZXN0KCAkdGhpcy52YWwoKSAgKSApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB2YWxpZGF0ZWQ7XG4gICAgICAgIH0sXG5cbiAgICAgICAgd2FpdEZvckxvYWRpbmc6IGZ1bmN0aW9uICggdmFyX3N0cmluZywgY2FsbGJhY2sgKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHZhciBvYmogPSBldmFsKCB2YXJfc3RyaW5nICk7XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2soIGUgKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGxldCBhdHRlbXB0cyA9IDA7XG4gICAgICAgICAgICBsZXQgdGltZXIgPSB3aW5kb3cuc2V0SW50ZXJ2YWwoIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIGlmICggdHlwZW9mIG9iaiAhPT0gJ3VuZGVmaW5lZCcgKSB7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5jbGVhckludGVydmFsKCB0aW1lciApO1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayggbnVsbCwgb2JqICk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgYXR0ZW1wdHMrKztcbiAgICAgICAgICAgICAgICAgICAgaWYgKCBhdHRlbXB0cyA+PSAxMjAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuY2xlYXJJbnRlcnZhbCggdGltZXIgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCAnVGltZW91dCcgKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIDUwMCApO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBMb2FkIEpTXG4gICAgICAgICAqIEBwYXJhbSBqc1xuICAgICAgICAgKiBAcGFyYW0gY2FsbGJhY2tcbiAgICAgICAgICovXG4gICAgICAgIGxvYWRKczogZnVuY3Rpb24gKCBqcywgY2FsbGJhY2sgKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyggJ0xvYWRpbmcgb2YgJyArIGpzICk7XG4gICAgICAgICAgICAvLyBDcmVhdGVzIGEgbmV3IHNjcmlwdCB0YWdcbiAgICAgICAgICAgIGxldCBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCAnc2NyaXB0JyApO1xuXG4gICAgICAgICAgICAvLyBTZXQgc2NyaXB0IHRhZyBwYXJhbXNcbiAgICAgICAgICAgIHNjcmlwdC5zZXRBdHRyaWJ1dGUoICdzcmMnLCBqcyApO1xuICAgICAgICAgICAgc2NyaXB0LnNldEF0dHJpYnV0ZSggJ3R5cGUnLCAndGV4dC9qYXZhc2NyaXB0JyApO1xuICAgICAgICAgICAgc2NyaXB0LnNldEF0dHJpYnV0ZSggJ2FzeW5jJywgJycgKTtcbiAgICAgICAgICAgIHNjcmlwdC5hZGRFdmVudExpc3RlbmVyKCAnbG9hZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyggJ0xvYWRlZDogJyArIGpzICk7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgIH0sIGZhbHNlICk7XG5cbiAgICAgICAgICAgIC8vIEdldHMgZG9jdW1lbnQgaGVhZCBlbGVtZW50XG4gICAgICAgICAgICBsZXQgb0hlYWQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSggJ2hlYWQnIClbMF07XG4gICAgICAgICAgICBpZiAoIG9IZWFkICkge1xuICAgICAgICAgICAgICAgIC8vIEFkZCBzY3JpcHQgdGFnIHRvIGhlYWRcbiAgICAgICAgICAgICAgICBvSGVhZC5hcHBlbmRDaGlsZCggc2NyaXB0ICk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBzY3JpcHQ7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEluaXRpYXRlIFBheW1lbnQgSmF2YXNjcmlwdFxuICAgICAgICAgKiBAcGFyYW0gdXJsXG4gICAgICAgICAqIEBwYXJhbSBjYWxsYmFja1xuICAgICAgICAgKi9cbiAgICAgICAgaW5pdFBheW1lbnRKUzogZnVuY3Rpb24gKCB1cmwsIGNhbGxiYWNrICkge1xuICAgICAgICAgICAgaWYgKCB0eXBlb2YgY2FsbGJhY2sgPT09ICd1bmRlZmluZWQnICkge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrID0gZnVuY3Rpb24gKCkge307XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIERlc3Ryb3lcbiAgICAgICAgICAgIGlmICggd2luZG93Lmhhc093blByb3BlcnR5KCAncGF5ZXgnICkgJiYgd2luZG93LnBheWV4Lmhhc093blByb3BlcnR5KCAnaG9zdGVkVmlldycgKSApIHtcbiAgICAgICAgICAgICAgICBpZiAoIHR5cGVvZiB3aW5kb3cucGF5ZXguaG9zdGVkVmlldy5wYXltZW50TWVudSAhPT0gJ3VuZGVmaW5lZCcgKSB7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5wYXlleC5ob3N0ZWRWaWV3LnBheW1lbnRNZW51KCkuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAkKCAnI3BheW1lbnQtcGF5ZXgtY2hlY2tvdXQgaWZyYW1lJyApLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgIC8vZGVsZXRlIHdpbmRvdy5wYXlleC5ob3N0ZWRWaWV3O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBEZXN0cm95IEpTXG4gICAgICAgICAgICAkKCBcInNjcmlwdFtzcmMqPSdweC5wYXltZW50bWVudS5jbGllbnQnXVwiICkucmVtb3ZlKCk7XG5cbiAgICAgICAgICAgIC8vIExvYWQgSlNcbiAgICAgICAgICAgIHdjX3BheWV4X2NoZWNrb3V0LmxvYWRKcyggdXJsLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgJCggJyNwYXltZW50LXBheWV4LWNoZWNrb3V0IGlmcmFtZScgKS5yZW1vdmUoKTtcblxuICAgICAgICAgICAgICAgIC8vIExvYWQgUGF5RXggQ2hlY2tvdXQgZnJhbWVcbiAgICAgICAgICAgICAgICBpZiAoIHdjX3BheWV4X2NoZWNrb3V0LmlzSW5zdGFudENoZWNrb3V0KCkgKSB7XG4gICAgICAgICAgICAgICAgICAgICQoJyNwYXltZW50JykuaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICB3Y19wYXlleF9jaGVja291dC5pbml0UGF5bWVudE1lbnUoJ3BheW1lbnQtcGF5ZXgtY2hlY2tvdXQnICk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgJC5mZWF0aGVybGlnaHQoICc8ZGl2IGlkPVwicGF5ZXgtcGF5bWVudG1lbnVcIj4mbmJzcDs8L2Rpdj4nLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXJpYW50OiAnZmVhdGhlcmxpZ2h0LXBheWV4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBlcnNpc3Q6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBjbG9zZU9uQ2xpY2s6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xvc2VPbkVzYzogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBhZnRlck9wZW46IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3Y19wYXlleF9jaGVja291dC5pbml0UGF5bWVudE1lbnUoJ3BheWV4LXBheW1lbnRtZW51JyApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFmdGVyQ2xvc2U6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3Y19wYXlleF9jaGVja291dC5mb3JtLnJlbW92ZUNsYXNzKCAncHJvY2Vzc2luZycgKS51bmJsb2NrKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBjYWxsYmFjaygpXG4gICAgICAgICAgICB9ICk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEluaXRpYXRlIFBheW1lbnQgTWVudS5cbiAgICAgICAgICogUGF5bWVudCBKYXZhc2NyaXB0IG11c3QgYmUgbG9hZGVkLlxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0gaWRcbiAgICAgICAgICogQHBhcmFtIGNhbGxiYWNrXG4gICAgICAgICAqL1xuICAgICAgICBpbml0UGF5bWVudE1lbnU6IGZ1bmN0aW9uICggaWQsIGNhbGxiYWNrICkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coICdpbml0UGF5bWVudE1lbnUnICk7XG5cbiAgICAgICAgICAgIGlmICggdHlwZW9mIGNhbGxiYWNrID09PSAndW5kZWZpbmVkJyApIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayA9IGZ1bmN0aW9uICgpIHt9O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBMb2FkIFBheUV4IENoZWNrb3V0IGZyYW1lXG4gICAgICAgICAgICB0aGlzLnBheW1lbnRNZW51ID0gd2luZG93LnBheWV4Lmhvc3RlZFZpZXcucGF5bWVudE1lbnUoIHtcbiAgICAgICAgICAgICAgICBjb250YWluZXI6IGlkLFxuICAgICAgICAgICAgICAgIGN1bHR1cmU6IFdDX0dhdGV3YXlfUGF5RXhfQ2hlY2tvdXQuY3VsdHVyZSxcbiAgICAgICAgICAgICAgICBzdHlsZTogV0NfR2F0ZXdheV9QYXlFeF9DaGVja291dC5wYXltZW50TWVudVN0eWxlID8gSlNPTi5wYXJzZSggV0NfR2F0ZXdheV9QYXlFeF9DaGVja291dC5wYXltZW50TWVudVN0eWxlICkgOiBudWxsLFxuICAgICAgICAgICAgICAgIG9uQXBwbGljYXRpb25Db25maWd1cmVkOiBmdW5jdGlvbiggZGF0YSApIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coICdvbkFwcGxpY2F0aW9uQ29uZmlndXJlZCcgKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coIGRhdGEgKTtcbiAgICAgICAgICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQuaXNQYXltZW50TWVudUxvYWRlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCBudWxsICk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBvblBheW1lbnRNZW51SW5zdHJ1bWVudFNlbGVjdGVkOiBmdW5jdGlvbiAoIGRhdGEgKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCAnb25QYXltZW50TWVudUluc3RydW1lbnRTZWxlY3RlZCcgKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coIGRhdGEgKTtcbiAgICAgICAgICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQub25QYXltZW50TWVudUluc3RydW1lbnRTZWxlY3RlZCggZGF0YS5uYW1lLCBkYXRhLmluc3RydW1lbnQgKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9uUGF5bWVudENyZWF0ZWQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coICdvblBheW1lbnRDcmVhdGVkJyApO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgb25QYXltZW50Q29tcGxldGVkOiBmdW5jdGlvbiAoIGRhdGEgKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCAnb25QYXltZW50Q29tcGxldGVkJyApO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyggZGF0YSApO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLmxvY2F0aW9uLmhyZWYgPSBkYXRhLnJlZGlyZWN0VXJsO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgb25QYXltZW50Q2FuY2VsZWQ6IGZ1bmN0aW9uICggZGF0YSApIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coICdvblBheW1lbnRDYW5jZWxlZCcgKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coIGRhdGEgKTtcbiAgICAgICAgICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQubG9nRXJyb3IoICdwYXltZW50LW1lbnUtY2FuY2VsJywgZGF0YSApO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgb25QYXltZW50RmFpbGVkOiBmdW5jdGlvbiAoIGRhdGEgKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCAnb25QYXltZW50RmFpbGVkJyApO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyggZGF0YSApO1xuICAgICAgICAgICAgICAgICAgICB3Y19wYXlleF9jaGVja291dC5sb2dFcnJvciggJ3BheW1lbnQtbWVudS1mYWlsZWQnLCBkYXRhICk7XG4gICAgICAgICAgICAgICAgICAgIC8vc2VsZi5sb2NhdGlvbi5ocmVmID0gZGF0YS5yZWRpcmVjdFVybDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9uRXJyb3I6IGZ1bmN0aW9uICggZGF0YSApIHtcbiAgICAgICAgICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQubG9nRXJyb3IoICdwYXltZW50LW1lbnUtZXJyb3InLCBkYXRhICk7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCBkYXRhICk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSApO1xuXG4gICAgICAgICAgICB0aGlzLnBheW1lbnRNZW51Lm9wZW4oKTtcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogUmVmcmVzaFxuICAgICAgICAgKi9cbiAgICAgICAgcmVmcmVzaFBheW1lbnRNZW51OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCAncmVmcmVzaFBheW1lbnRNZW51JyApO1xuICAgICAgICAgICAgLy9pZiAoIHR5cGVvZiB0aGlzLnBheW1lbnRNZW51ICE9PSAndW5kZWZpbmVkJyApIHtcbiAgICAgICAgICAgICAgICAvL3RoaXMucGF5bWVudE1lbnUucmVmcmVzaCgpO1xuICAgICAgICAgICAgLy99IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vY29uc29sZS53YXJuKCAncmVmcmVzaFBheW1lbnRNZW51OiByZWZyZXNoIHdvcmthcm91bmQnICk7XG4gICAgICAgICAgICAgICAgLy93Y19wYXlleF9jaGVja291dC5pbml0UGF5bWVudEpTKCB3Y19wYXlleF9jaGVja291dC5qc191cmwgKVxuICAgICAgICAgICAgLy99XG5cbiAgICAgICAgICAgIC8vIEB0b2RvIFVzZSB0aGlzLnBheW1lbnRNZW51LnJlZnJlc2goKTsgaW5zdGVhZCBvZiB0aGF0XG4gICAgICAgICAgICB3Y19wYXlleF9jaGVja291dC5pbml0UGF5bWVudEpTKCB3Y19wYXlleF9jaGVja291dC5qc191cmwgKVxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBQbGFjZSBPcmRlclxuICAgICAgICAgKiBAcmV0dXJuIHtKUXVlcnlQcm9taXNlPGFueT59XG4gICAgICAgICAqL1xuICAgICAgICBwbGFjZU9yZGVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyggJ3BsYWNlT3JkZXInICk7XG4gICAgICAgICAgICBsZXQgZmllbGRzID0gJCgnLndvb2NvbW1lcmNlLWNoZWNrb3V0Jykuc2VyaWFsaXplKCk7XG5cbiAgICAgICAgICAgIHJldHVybiAkLmFqYXgoIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnUE9TVCcsXG4gICAgICAgICAgICAgICAgdXJsOiBXQ19HYXRld2F5X1BheUV4X0NoZWNrb3V0LmFqYXhfdXJsLFxuICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiAncGF5ZXhfcGxhY2Vfb3JkZXInLFxuICAgICAgICAgICAgICAgICAgICBub25jZTogV0NfR2F0ZXdheV9QYXlFeF9DaGVja291dC5ub25jZSxcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogZmllbGRzXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nXG4gICAgICAgICAgICB9ICkuZG9uZSggZnVuY3Rpb24gKCByZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5oYXNPd25Qcm9wZXJ0eSgncmVzdWx0JykgJiYgcmVzcG9uc2UucmVzdWx0ID09PSAnZmFpbHVyZScpIHtcbiAgICAgICAgICAgICAgICAgICAgd2NfcGF5ZXhfY2hlY2tvdXQubG9nRXJyb3IoJ3BheWV4LXBsYWNlLW9yZGVyJywgcmVzcG9uc2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gKTtcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogVXBkYXRlIE9yZGVyXG4gICAgICAgICAqIEByZXR1cm4ge0pRdWVyeVByb21pc2U8YW55Pn1cbiAgICAgICAgICovXG4gICAgICAgIHVwZGF0ZU9yZGVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyggJ3VwZGF0ZU9yZGVyJyApO1xuICAgICAgICAgICAgbGV0IGZpZWxkcyA9ICQoJy53b29jb21tZXJjZS1jaGVja291dCcpLnNlcmlhbGl6ZSgpO1xuXG4gICAgICAgICAgICByZXR1cm4gJC5hamF4KCB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ1BPU1QnLFxuICAgICAgICAgICAgICAgIHVybDogV0NfR2F0ZXdheV9QYXlFeF9DaGVja291dC5hamF4X3VybCxcbiAgICAgICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGlvbjogJ3BheWV4X3VwZGF0ZV9vcmRlcicsXG4gICAgICAgICAgICAgICAgICAgIG5vbmNlOiBXQ19HYXRld2F5X1BheUV4X0NoZWNrb3V0Lm5vbmNlLFxuICAgICAgICAgICAgICAgICAgICBkYXRhOiBmaWVsZHNcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiAnanNvbidcbiAgICAgICAgICAgIH0gKS5kb25lKCBmdW5jdGlvbiAoIHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmhhc093blByb3BlcnR5KCdyZXN1bHQnKSAmJiByZXNwb25zZS5yZXN1bHQgPT09ICdmYWlsdXJlJykge1xuICAgICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UubWVzc2FnZXMuaW5kZXhPZignT3JkZXIgdXBkYXRlIGlzIG5vdCBhdmFpbGFibGUuJykgPiAtMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gRm9yY2UgcmVsb2FkXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oICdyZWZyZXNoUGF5bWVudE1lbnU6IHJlZnJlc2ggd29ya2Fyb3VuZC4gRm9yY2UgcmVsb2FkLicgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vd2NfcGF5ZXhfY2hlY2tvdXQuaW5pdFBheW1lbnRKUyggd2NfcGF5ZXhfY2hlY2tvdXQuanNfdXJsIClcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIHdjX3BheWV4X2NoZWNrb3V0LmxvZ0Vycm9yKCdwYXlleC11cGRhdGUtb3JkZXInLCByZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSApO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBPbiBDb25zdW1lciBJZGVudGlmaWVkXG4gICAgICAgICAqIEBwYXJhbSBkYXRhXG4gICAgICAgICAqIEByZXR1cm5zIHsqfVxuICAgICAgICAgKi9cbiAgICAgICAgb25Db25zdW1lcklkZW50aWZpZWQ6IGZ1bmN0aW9uICggZGF0YSApIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCAnb25Db25zdW1lcklkZW50aWZpZWQnLCBkYXRhICk7XG4gICAgICAgICAgICAkKCAnI2NoYW5nZS1zaGlwcGluZy1pbmZvJyApLnNob3coKTtcblxuICAgICAgICAgICAgcmV0dXJuICQuYWpheCgge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdQT1NUJyxcbiAgICAgICAgICAgICAgICB1cmw6IFdDX0dhdGV3YXlfUGF5RXhfQ2hlY2tvdXQuYWpheF91cmwsXG4gICAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgICAgICBhY3Rpb246ICdwYXlleF9jaGVja291dF9jdXN0b21lcl9wcm9maWxlJyxcbiAgICAgICAgICAgICAgICAgICAgbm9uY2U6IFdDX0dhdGV3YXlfUGF5RXhfQ2hlY2tvdXQubm9uY2UsXG4gICAgICAgICAgICAgICAgICAgIGNvbnN1bWVyUHJvZmlsZVJlZjogZGF0YS5jb25zdW1lclByb2ZpbGVSZWZcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiAnanNvbidcbiAgICAgICAgICAgIH0gKS5hbHdheXMoIGZ1bmN0aW9uICggcmVzcG9uc2UgKSB7XG4gICAgICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIH0gKS5kb25lKCBmdW5jdGlvbiAoIHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICAgICAgICAgICAgICAgIGlmICghcmVzcG9uc2Uuc3VjY2Vzcykge1xuICAgICAgICAgICAgICAgICAgICBhbGVydChyZXNwb25zZS5kYXRhLm1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gSW5pdGlhdGUgQ2hlY2tvdXRcbiAgICAgICAgICAgICAgICB3Y19wYXlleF9jaGVja291dC5pbml0Q2hlY2tvdXQoIGRhdGEuY29uc3VtZXJQcm9maWxlUmVmICk7XG4gICAgICAgICAgICB9ICk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIE9uIEFkZHJlc3MgRGV0YWlscyBBdmFpbGFibGVcbiAgICAgICAgICogQHBhcmFtIHR5cGVcbiAgICAgICAgICogQHBhcmFtIGRhdGFcbiAgICAgICAgICogQHJldHVybnMgeyp9XG4gICAgICAgICAqL1xuICAgICAgICBvbkFkZHJlc3NEZXRhaWxzQXZhaWxhYmxlOiBmdW5jdGlvbiggdHlwZSwgZGF0YSApIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCAnb25BZGRyZXNzRGV0YWlsc0F2YWlsYWJsZScsIHR5cGUsIGRhdGEgKTtcblxuICAgICAgICAgICAgJCggJyNjaGFuZ2Utc2hpcHBpbmctaW5mbycgKS5zaG93KCk7XG5cbiAgICAgICAgICAgIHJldHVybiAkLmFqYXgoIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnUE9TVCcsXG4gICAgICAgICAgICAgICAgdXJsOiBXQ19HYXRld2F5X1BheUV4X0NoZWNrb3V0LmFqYXhfdXJsLFxuICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiAncGF5ZXhfY2hlY2tvdXRfZ2V0X2FkZHJlc3MnLFxuICAgICAgICAgICAgICAgICAgICBub25jZTogV0NfR2F0ZXdheV9QYXlFeF9DaGVja291dC5ub25jZSxcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogdHlwZSxcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBkYXRhLnVybFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZGF0YVR5cGU6ICdqc29uJ1xuICAgICAgICAgICAgfSApLmFsd2F5cyggZnVuY3Rpb24gKCByZXNwb25zZSApIHtcbiAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgfSApLmRvbmUoIGZ1bmN0aW9uICggcmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5zdWNjZXNzKSB7XG4gICAgICAgICAgICAgICAgICAgIHdjX3BheWV4X2NoZWNrb3V0LmxvZ0Vycm9yKCdwYXlleC1hZGRyZXNzLWRldGFpbHMnLCByZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgICAgIGFsZXJ0KHJlc3BvbnNlLmRhdGEubWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyBQcm9jZXNzIGFkZHJlc3NcbiAgICAgICAgICAgICAgICBsZXQgZGF0YSA9IHJlc3BvbnNlLmRhdGE7XG4gICAgICAgICAgICAgICAgJC5lYWNoKGRhdGEsIGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIFt0eXBlXS5mb3JFYWNoKGZ1bmN0aW9uKHNlY3Rpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBlbCA9ICQoJ2lucHV0W25hbWU9XCInICsgc2VjdGlvbiArICdfJyArIGtleSArICdcIl0nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsLnByb3AoJ3JlYWRvbmx5JywgZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZWwuY2xvc2VzdCgnLmZvcm0tcm93JykucmVtb3ZlQ2xhc3MoJ3BheWV4LWxvY2tlZCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZWwudmFsKHZhbHVlKS5jaGFuZ2UoKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGtleSA9PT0gJ2NvdW50cnknIHx8IGtleSA9PT0gJ3N0YXRlJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBlbDEgPSAkKCcjJyArIHNlY3Rpb24gKyAnXycgKyBrZXkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2Ygd2luZG93LlNlbGVjdDIgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsMS5zZWxlY3QyKCd2YWwnLCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgJC5mbi5jaG9zZW4gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIENob3NlblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbDEudmFsKHZhbHVlKS50cmlnZ2VyKCdjaG9zZW46dXBkYXRlZCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2VsMS5jaG9zZW4oKS5jaGFuZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbDEuY2hhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICQoIGRvY3VtZW50LmJvZHkgKS50cmlnZ2VyKCAndXBkYXRlX2NoZWNrb3V0JyApO1xuICAgICAgICAgICAgfSApO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBPbiBQYXltZW50IE1lbnUgSW5zdHJ1bWVudCBTZWxlY3RlZFxuICAgICAgICAgKiBAcGFyYW0gbmFtZVxuICAgICAgICAgKiBAcGFyYW0gaW5zdHJ1bWVudFxuICAgICAgICAgKi9cbiAgICAgICAgb25QYXltZW50TWVudUluc3RydW1lbnRTZWxlY3RlZDogZnVuY3Rpb24gKCBuYW1lLCBpbnN0cnVtZW50ICkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coICdvblBheW1lbnRNZW51SW5zdHJ1bWVudFNlbGVjdGVkJywgbmFtZSwgaW5zdHJ1bWVudCApO1xuICAgICAgICAgICAgLy8gQHRvZG9cbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogTG9nIEVycm9yXG4gICAgICAgICAqIEBwYXJhbSBpZFxuICAgICAgICAgKiBAcGFyYW0gZGF0YVxuICAgICAgICAgKiBAcmV0dXJucyB7Kn1cbiAgICAgICAgICovXG4gICAgICAgIGxvZ0Vycm9yOiBmdW5jdGlvbiAoIGlkLCBkYXRhICkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCBkYXRhICk7XG5cbiAgICAgICAgICAgIHJldHVybiAkLmFqYXgoIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnUE9TVCcsXG4gICAgICAgICAgICAgICAgdXJsOiBXQ19HYXRld2F5X1BheUV4X0NoZWNrb3V0LmFqYXhfdXJsLFxuICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiAncGF5ZXhfY2hlY2tvdXRfbG9nX2Vycm9yJyxcbiAgICAgICAgICAgICAgICAgICAgbm9uY2U6IFdDX0dhdGV3YXlfUGF5RXhfQ2hlY2tvdXQubm9uY2UsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBpZCxcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoIGRhdGEgKVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZGF0YVR5cGU6ICdqc29uJ1xuICAgICAgICAgICAgfSApO1xuICAgICAgICB9LFxuXG4gICAgICAgIG9uRXJyb3I6IGZ1bmN0aW9uICggZGF0YSApIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCAnb25FcnJvcicsIGRhdGEgKTtcbiAgICAgICAgICAgIC8vd2NfcGF5ZXhfY2hlY2tvdXQuc3VibWl0X2Vycm9yKCAnPGRpdiBjbGFzcz1cIndvb2NvbW1lcmNlLWVycm9yXCI+JyArIGRhdGEgKyAnPC9kaXY+JyApO1xuICAgICAgICB9LFxuICAgICAgICBzdWJtaXRfZXJyb3I6IGZ1bmN0aW9uKCBlcnJvcl9tZXNzYWdlICkge1xuICAgICAgICAgICAgJCggJy53b29jb21tZXJjZS1Ob3RpY2VHcm91cC1jaGVja291dCwgLndvb2NvbW1lcmNlLWVycm9yLCAud29vY29tbWVyY2UtbWVzc2FnZScgKS5yZW1vdmUoKTtcbiAgICAgICAgICAgIHdjX3BheWV4X2NoZWNrb3V0LmZvcm0ucHJlcGVuZCggJzxkaXYgY2xhc3M9XCJ3b29jb21tZXJjZS1Ob3RpY2VHcm91cCB3b29jb21tZXJjZS1Ob3RpY2VHcm91cC1jaGVja291dFwiPicgKyBlcnJvcl9tZXNzYWdlICsgJzwvZGl2PicgKTtcbiAgICAgICAgICAgIHdjX3BheWV4X2NoZWNrb3V0LmZvcm0ucmVtb3ZlQ2xhc3MoICdwcm9jZXNzaW5nJyApLnVuYmxvY2soKTtcbiAgICAgICAgICAgIHdjX3BheWV4X2NoZWNrb3V0LmZvcm0uZmluZCggJy5pbnB1dC10ZXh0LCBzZWxlY3QsIGlucHV0OmNoZWNrYm94JyApLnRyaWdnZXIoICd2YWxpZGF0ZScgKS5ibHVyKCk7XG4gICAgICAgICAgICB3Y19wYXlleF9jaGVja291dC5zY3JvbGxfdG9fbm90aWNlcygpO1xuICAgICAgICAgICAgJCggZG9jdW1lbnQuYm9keSApLnRyaWdnZXIoICdjaGVja291dF9lcnJvcicgKTtcbiAgICAgICAgfSxcbiAgICAgICAgc2Nyb2xsX3RvX25vdGljZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgbGV0IHNjcm9sbEVsZW1lbnQgPSAkKCAnLndvb2NvbW1lcmNlLU5vdGljZUdyb3VwLXVwZGF0ZU9yZGVyUmV2aWV3LCAud29vY29tbWVyY2UtTm90aWNlR3JvdXAtY2hlY2tvdXQnICk7XG4gICAgICAgICAgICBpZiAoICEgc2Nyb2xsRWxlbWVudC5sZW5ndGggKSB7XG4gICAgICAgICAgICAgICAgc2Nyb2xsRWxlbWVudCA9ICQoICcuZm9ybS5jaGVja291dCcgKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJC5zY3JvbGxfdG9fbm90aWNlcyggc2Nyb2xsRWxlbWVudCApO1xuICAgICAgICB9LFxuICAgICAgICBoaWRlQWRkcmVzc0ZpZWxkczogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgJCggJy53b29jb21tZXJjZS1iaWxsaW5nLWZpZWxkc19fZmllbGQtd3JhcHBlciwgLndvb2NvbW1lcmNlLXNoaXBwaW5nLWZpZWxkcycgKS5oaWRlKCk7XG4gICAgICAgIH0sXG4gICAgICAgIHNob3dBZGRyZXNzRmllbGRzOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAkKCAnLndvb2NvbW1lcmNlLWJpbGxpbmctZmllbGRzX19maWVsZC13cmFwcGVyLCAud29vY29tbWVyY2Utc2hpcHBpbmctZmllbGRzJyApLnNob3coKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAkKGRvY3VtZW50KS5yZWFkeSggZnVuY3Rpb24gKCkge1xuICAgICAgICB3Y19wYXlleF9jaGVja291dC5pbml0KCAkKCBcImZvcm0uY2hlY2tvdXQsIGZvcm0jb3JkZXJfcmV2aWV3LCBmb3JtI2FkZF9wYXltZW50X21ldGhvZFwiICkgKTtcbiAgICB9ICk7XG59KTtcblxuIl19
